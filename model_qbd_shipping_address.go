/*
Conductor API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package conductor

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the QbdShippingAddress type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QbdShippingAddress{}

// QbdShippingAddress struct for QbdShippingAddress
type QbdShippingAddress struct {
	// The case-insensitive unique name of this shipping address, unique across all shipping addresses.  **NOTE**: Shipping addresses do not have a `fullName` field because they are not hierarchical objects, which is why `name` is unique for them but not for objects that have parents.
	Name string `json:"name"`
	// The first line of the shipping address (e.g., street, PO Box, or company name).
	Line1 NullableString `json:"line1"`
	// The second line of the shipping address, if needed (e.g., apartment, suite, unit, or building).
	Line2 NullableString `json:"line2"`
	// The third line of the shipping address, if needed.
	Line3 NullableString `json:"line3"`
	// The fourth line of the shipping address, if needed.
	Line4 NullableString `json:"line4"`
	// The fifth line of the shipping address, if needed.
	Line5 NullableString `json:"line5"`
	// The city, district, suburb, town, or village name of the shipping address.
	City NullableString `json:"city"`
	// The state, county, province, or region name of the shipping address.
	State NullableString `json:"state"`
	// The postal code or ZIP code of the shipping address.
	PostalCode NullableString `json:"postalCode"`
	// The country name of the shipping address.
	Country NullableString `json:"country"`
	// A note written at the bottom of the shipping address in the form in which it appears, such as the invoice form.
	Note NullableString `json:"note"`
	// Indicates whether this shipping address is the default shipping address.
	IsDefaultShippingAddress NullableBool `json:"isDefaultShippingAddress"`
}

type _QbdShippingAddress QbdShippingAddress

// NewQbdShippingAddress instantiates a new QbdShippingAddress object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQbdShippingAddress(name string, line1 NullableString, line2 NullableString, line3 NullableString, line4 NullableString, line5 NullableString, city NullableString, state NullableString, postalCode NullableString, country NullableString, note NullableString, isDefaultShippingAddress NullableBool) *QbdShippingAddress {
	this := QbdShippingAddress{}
	this.Name = name
	this.Line1 = line1
	this.Line2 = line2
	this.Line3 = line3
	this.Line4 = line4
	this.Line5 = line5
	this.City = city
	this.State = state
	this.PostalCode = postalCode
	this.Country = country
	this.Note = note
	this.IsDefaultShippingAddress = isDefaultShippingAddress
	return &this
}

// NewQbdShippingAddressWithDefaults instantiates a new QbdShippingAddress object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQbdShippingAddressWithDefaults() *QbdShippingAddress {
	this := QbdShippingAddress{}
	return &this
}

// GetName returns the Name field value
func (o *QbdShippingAddress) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *QbdShippingAddress) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *QbdShippingAddress) SetName(v string) {
	o.Name = v
}

// GetLine1 returns the Line1 field value
// If the value is explicit nil, the zero value for string will be returned
func (o *QbdShippingAddress) GetLine1() string {
	if o == nil || o.Line1.Get() == nil {
		var ret string
		return ret
	}

	return *o.Line1.Get()
}

// GetLine1Ok returns a tuple with the Line1 field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QbdShippingAddress) GetLine1Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Line1.Get(), o.Line1.IsSet()
}

// SetLine1 sets field value
func (o *QbdShippingAddress) SetLine1(v string) {
	o.Line1.Set(&v)
}

// GetLine2 returns the Line2 field value
// If the value is explicit nil, the zero value for string will be returned
func (o *QbdShippingAddress) GetLine2() string {
	if o == nil || o.Line2.Get() == nil {
		var ret string
		return ret
	}

	return *o.Line2.Get()
}

// GetLine2Ok returns a tuple with the Line2 field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QbdShippingAddress) GetLine2Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Line2.Get(), o.Line2.IsSet()
}

// SetLine2 sets field value
func (o *QbdShippingAddress) SetLine2(v string) {
	o.Line2.Set(&v)
}

// GetLine3 returns the Line3 field value
// If the value is explicit nil, the zero value for string will be returned
func (o *QbdShippingAddress) GetLine3() string {
	if o == nil || o.Line3.Get() == nil {
		var ret string
		return ret
	}

	return *o.Line3.Get()
}

// GetLine3Ok returns a tuple with the Line3 field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QbdShippingAddress) GetLine3Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Line3.Get(), o.Line3.IsSet()
}

// SetLine3 sets field value
func (o *QbdShippingAddress) SetLine3(v string) {
	o.Line3.Set(&v)
}

// GetLine4 returns the Line4 field value
// If the value is explicit nil, the zero value for string will be returned
func (o *QbdShippingAddress) GetLine4() string {
	if o == nil || o.Line4.Get() == nil {
		var ret string
		return ret
	}

	return *o.Line4.Get()
}

// GetLine4Ok returns a tuple with the Line4 field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QbdShippingAddress) GetLine4Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Line4.Get(), o.Line4.IsSet()
}

// SetLine4 sets field value
func (o *QbdShippingAddress) SetLine4(v string) {
	o.Line4.Set(&v)
}

// GetLine5 returns the Line5 field value
// If the value is explicit nil, the zero value for string will be returned
func (o *QbdShippingAddress) GetLine5() string {
	if o == nil || o.Line5.Get() == nil {
		var ret string
		return ret
	}

	return *o.Line5.Get()
}

// GetLine5Ok returns a tuple with the Line5 field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QbdShippingAddress) GetLine5Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Line5.Get(), o.Line5.IsSet()
}

// SetLine5 sets field value
func (o *QbdShippingAddress) SetLine5(v string) {
	o.Line5.Set(&v)
}

// GetCity returns the City field value
// If the value is explicit nil, the zero value for string will be returned
func (o *QbdShippingAddress) GetCity() string {
	if o == nil || o.City.Get() == nil {
		var ret string
		return ret
	}

	return *o.City.Get()
}

// GetCityOk returns a tuple with the City field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QbdShippingAddress) GetCityOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.City.Get(), o.City.IsSet()
}

// SetCity sets field value
func (o *QbdShippingAddress) SetCity(v string) {
	o.City.Set(&v)
}

// GetState returns the State field value
// If the value is explicit nil, the zero value for string will be returned
func (o *QbdShippingAddress) GetState() string {
	if o == nil || o.State.Get() == nil {
		var ret string
		return ret
	}

	return *o.State.Get()
}

// GetStateOk returns a tuple with the State field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QbdShippingAddress) GetStateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.State.Get(), o.State.IsSet()
}

// SetState sets field value
func (o *QbdShippingAddress) SetState(v string) {
	o.State.Set(&v)
}

// GetPostalCode returns the PostalCode field value
// If the value is explicit nil, the zero value for string will be returned
func (o *QbdShippingAddress) GetPostalCode() string {
	if o == nil || o.PostalCode.Get() == nil {
		var ret string
		return ret
	}

	return *o.PostalCode.Get()
}

// GetPostalCodeOk returns a tuple with the PostalCode field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QbdShippingAddress) GetPostalCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PostalCode.Get(), o.PostalCode.IsSet()
}

// SetPostalCode sets field value
func (o *QbdShippingAddress) SetPostalCode(v string) {
	o.PostalCode.Set(&v)
}

// GetCountry returns the Country field value
// If the value is explicit nil, the zero value for string will be returned
func (o *QbdShippingAddress) GetCountry() string {
	if o == nil || o.Country.Get() == nil {
		var ret string
		return ret
	}

	return *o.Country.Get()
}

// GetCountryOk returns a tuple with the Country field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QbdShippingAddress) GetCountryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Country.Get(), o.Country.IsSet()
}

// SetCountry sets field value
func (o *QbdShippingAddress) SetCountry(v string) {
	o.Country.Set(&v)
}

// GetNote returns the Note field value
// If the value is explicit nil, the zero value for string will be returned
func (o *QbdShippingAddress) GetNote() string {
	if o == nil || o.Note.Get() == nil {
		var ret string
		return ret
	}

	return *o.Note.Get()
}

// GetNoteOk returns a tuple with the Note field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QbdShippingAddress) GetNoteOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Note.Get(), o.Note.IsSet()
}

// SetNote sets field value
func (o *QbdShippingAddress) SetNote(v string) {
	o.Note.Set(&v)
}

// GetIsDefaultShippingAddress returns the IsDefaultShippingAddress field value
// If the value is explicit nil, the zero value for bool will be returned
func (o *QbdShippingAddress) GetIsDefaultShippingAddress() bool {
	if o == nil || o.IsDefaultShippingAddress.Get() == nil {
		var ret bool
		return ret
	}

	return *o.IsDefaultShippingAddress.Get()
}

// GetIsDefaultShippingAddressOk returns a tuple with the IsDefaultShippingAddress field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QbdShippingAddress) GetIsDefaultShippingAddressOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsDefaultShippingAddress.Get(), o.IsDefaultShippingAddress.IsSet()
}

// SetIsDefaultShippingAddress sets field value
func (o *QbdShippingAddress) SetIsDefaultShippingAddress(v bool) {
	o.IsDefaultShippingAddress.Set(&v)
}

func (o QbdShippingAddress) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QbdShippingAddress) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["line1"] = o.Line1.Get()
	toSerialize["line2"] = o.Line2.Get()
	toSerialize["line3"] = o.Line3.Get()
	toSerialize["line4"] = o.Line4.Get()
	toSerialize["line5"] = o.Line5.Get()
	toSerialize["city"] = o.City.Get()
	toSerialize["state"] = o.State.Get()
	toSerialize["postalCode"] = o.PostalCode.Get()
	toSerialize["country"] = o.Country.Get()
	toSerialize["note"] = o.Note.Get()
	toSerialize["isDefaultShippingAddress"] = o.IsDefaultShippingAddress.Get()
	return toSerialize, nil
}

func (o *QbdShippingAddress) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"line1",
		"line2",
		"line3",
		"line4",
		"line5",
		"city",
		"state",
		"postalCode",
		"country",
		"note",
		"isDefaultShippingAddress",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varQbdShippingAddress := _QbdShippingAddress{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varQbdShippingAddress)

	if err != nil {
		return err
	}

	*o = QbdShippingAddress(varQbdShippingAddress)

	return err
}

type NullableQbdShippingAddress struct {
	value *QbdShippingAddress
	isSet bool
}

func (v NullableQbdShippingAddress) Get() *QbdShippingAddress {
	return v.value
}

func (v *NullableQbdShippingAddress) Set(val *QbdShippingAddress) {
	v.value = val
	v.isSet = true
}

func (v NullableQbdShippingAddress) IsSet() bool {
	return v.isSet
}

func (v *NullableQbdShippingAddress) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQbdShippingAddress(val *QbdShippingAddress) *NullableQbdShippingAddress {
	return &NullableQbdShippingAddress{value: val, isSet: true}
}

func (v NullableQbdShippingAddress) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQbdShippingAddress) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


