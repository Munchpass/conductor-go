/*
Conductor API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package conductor

import (
	"encoding/json"
	"fmt"
)

// checks if the QbdVendor type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QbdVendor{}

// QbdVendor struct for QbdVendor
type QbdVendor struct {
	// The unique identifier assigned by QuickBooks to this vendor. This ID is unique across all vendors but not across different QuickBooks object types.
	Id string `json:"id"`
	// The type of object. This value is always `\"qbd_vendor\"`.
	ObjectType string `json:"objectType"`
	// The date and time when this vendor was created, in ISO 8601 format (YYYY-MM-DDThh:mm:ss±hh:mm). The time zone is the same as the user's time zone in QuickBooks.
	CreatedAt string `json:"createdAt"`
	// The date and time when this vendor was last updated, in ISO 8601 format (YYYY-MM-DDThh:mm:ss±hh:mm). The time zone is the same as the user's time zone in QuickBooks.
	UpdatedAt string `json:"updatedAt"`
	// The current QuickBooks-assigned revision number of this vendor object, which changes each time the object is modified. When updating this object, you must provide the most recent `revisionNumber` to ensure you're working with the latest data; otherwise, the update will return an error.
	RevisionNumber string `json:"revisionNumber"`
	// The case-insensitive unique name of this vendor, unique across all vendors.  **NOTE**: Vendors do not have a `fullName` field because they are not hierarchical objects, which is why `name` is unique for them but not for objects that have parents.
	Name string `json:"name"`
	// Indicates whether this vendor is active. Inactive objects are typically hidden from views and reports in QuickBooks. Defaults to `true`.
	IsActive bool `json:"isActive"`
	Class *QbdVendorClass `json:"class,omitempty"`
	// The name of the company associated with this vendor. This name is used on invoices, checks, and other forms.
	CompanyName *string `json:"companyName,omitempty"`
	// The formal salutation title that precedes the name of the contact person for this vendor, such as \"Mr.\", \"Ms.\", or \"Dr.\".
	Salutation *string `json:"salutation,omitempty"`
	// The first name of the contact person for this vendor.
	FirstName *string `json:"firstName,omitempty"`
	// The middle name of the contact person for this vendor.
	MiddleName *string `json:"middleName,omitempty"`
	// The last name of the contact person for this vendor.
	LastName *string `json:"lastName,omitempty"`
	// The job title of the contact person for this vendor.
	JobTitle *string `json:"jobTitle,omitempty"`
	BillingAddress *QbdVendorBillingAddress `json:"billingAddress,omitempty"`
	ShippingAddress *QbdVendorShippingAddress `json:"shippingAddress,omitempty"`
	// The vendor's primary telephone number.
	Phone *string `json:"phone,omitempty"`
	// The vendor's alternate telephone number.
	AlternatePhone *string `json:"alternatePhone,omitempty"`
	// The vendor's fax number.
	Fax *string `json:"fax,omitempty"`
	// The vendor's email address.
	Email *string `json:"email,omitempty"`
	// An email address to carbon copy (CC) on communications with this vendor.
	CcEmail *string `json:"ccEmail,omitempty"`
	// The name of the primary contact person for this vendor.
	Contact *string `json:"contact,omitempty"`
	// The name of a alternate contact person for this vendor.
	AlternateContact *string `json:"alternateContact,omitempty"`
	// Additional custom contact fields for this vendor, such as phone numbers or email addresses.
	CustomContactFields []QbdCustomContactField `json:"customContactFields"`
	// Additional alternate contacts for this vendor.
	AdditionalContacts []QbdContact `json:"additionalContacts"`
	// The vendor's name as it should appear on checks issued to this vendor.
	NameOnCheck *string `json:"nameOnCheck,omitempty"`
	// The vendor's account number, which appears in the QuickBooks chart of accounts, reports, and graphs.  Note that if the \"Use Account Numbers\" preference is turned off in QuickBooks, the account number may not be visible in the user interface, but it can still be set and retrieved through the API.
	AccountNumber *string `json:"accountNumber,omitempty"`
	// A note or comment about this vendor.
	Note *string `json:"note,omitempty"`
	// Additional notes about this vendor.
	AdditionalNotes []QbdNote `json:"additionalNotes"`
	VendorType *QbdVendorVendorType `json:"vendorType,omitempty"`
	Terms *QbdVendorTerms `json:"terms,omitempty"`
	// The vendor's credit limit, represented as a decimal string. This is the maximum amount of money that can be spent being before billed by this vendor. If `null`, there is no credit limit.
	CreditLimit *string `json:"creditLimit,omitempty"`
	// The vendor's tax identification number (e.g., EIN or SSN).
	TaxIdentificationNumber *string `json:"taxIdentificationNumber,omitempty"`
	// Indicates whether this vendor is eligible to receive a 1099 form for tax reporting purposes. When `true`, then the fields `taxId` and `billingAddress` are required.
	IsEligibleFor1099 *bool `json:"isEligibleFor1099,omitempty"`
	// The current balance owed to this vendor, represented as a decimal string. A positive number indicates money owed to the vendor.
	Balance *string `json:"balance,omitempty"`
	BillingRate *QbdVendorBillingRate `json:"billingRate,omitempty"`
	// A globally unique identifier (GUID) you, the developer, can provide for tracking this object in your external system. This field is immutable and can only be set during object creation.
	ExternalId *string `json:"externalId,omitempty"`
	SalesTaxCode *QbdVendorSalesTaxCode `json:"salesTaxCode,omitempty"`
	// The country for which sales tax is collected for this vendor.
	SalesTaxCountry *string `json:"salesTaxCountry,omitempty"`
	// Indicates whether this vendor is a sales tax agency.
	IsSalesTaxAgency *bool `json:"isSalesTaxAgency,omitempty"`
	SalesTaxReturn *QbdVendorSalesTaxReturn `json:"salesTaxReturn,omitempty"`
	// The vendor's tax registration number, for use in Canada or the UK.
	TaxRegistrationNumber *string `json:"taxRegistrationNumber,omitempty"`
	// The vendor's tax reporting period, for use in Canada or the UK.
	ReportingPeriod *string `json:"reportingPeriod,omitempty"`
	// Indicates whether tax is tracked on purchases for this vendor, for use in Canada or the UK.
	IsTrackingPurchaseTax *bool `json:"isTrackingPurchaseTax,omitempty"`
	PurchaseTaxAccount *QbdVendorPurchaseTaxAccount `json:"purchaseTaxAccount,omitempty"`
	// Indicates whether tax is tracked on sales for this vendor, for use in Canada or the UK.
	IsTrackingSalesTax *bool `json:"isTrackingSalesTax,omitempty"`
	SalesTaxAccount *QbdVendorSalesTaxAccount `json:"salesTaxAccount,omitempty"`
	// Indicates whether tax is charged on top of tax for this vendor, for use in Canada or the UK.
	IsCompoundingTax *bool `json:"isCompoundingTax,omitempty"`
	// The expense accounts to prefill when entering bills for this vendor.
	DefaultExpenseAccounts []QbdVendorDefaultExpenseAccountsInner `json:"defaultExpenseAccounts"`
	Currency *QbdVendorCurrency `json:"currency,omitempty"`
	// The custom fields for the vendor object, added as user-defined data extensions, not included in the standard QuickBooks object.
	CustomFields []QbdCustomField `json:"customFields"`
	AdditionalProperties map[string]interface{}
}

type _QbdVendor QbdVendor

// NewQbdVendor instantiates a new QbdVendor object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQbdVendor(id string, objectType string, createdAt string, updatedAt string, revisionNumber string, name string, isActive bool, customContactFields []QbdCustomContactField, additionalContacts []QbdContact, additionalNotes []QbdNote, defaultExpenseAccounts []QbdVendorDefaultExpenseAccountsInner, customFields []QbdCustomField) *QbdVendor {
	this := QbdVendor{}
	this.Id = id
	this.ObjectType = objectType
	this.CreatedAt = createdAt
	this.UpdatedAt = updatedAt
	this.RevisionNumber = revisionNumber
	this.Name = name
	this.IsActive = isActive
	this.CustomContactFields = customContactFields
	this.AdditionalContacts = additionalContacts
	this.AdditionalNotes = additionalNotes
	this.DefaultExpenseAccounts = defaultExpenseAccounts
	this.CustomFields = customFields
	return &this
}

// NewQbdVendorWithDefaults instantiates a new QbdVendor object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQbdVendorWithDefaults() *QbdVendor {
	this := QbdVendor{}
	return &this
}

// GetId returns the Id field value
func (o *QbdVendor) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *QbdVendor) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *QbdVendor) SetId(v string) {
	o.Id = v
}

// GetObjectType returns the ObjectType field value
func (o *QbdVendor) GetObjectType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ObjectType
}

// GetObjectTypeOk returns a tuple with the ObjectType field value
// and a boolean to check if the value has been set.
func (o *QbdVendor) GetObjectTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ObjectType, true
}

// SetObjectType sets field value
func (o *QbdVendor) SetObjectType(v string) {
	o.ObjectType = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *QbdVendor) GetCreatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *QbdVendor) GetCreatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *QbdVendor) SetCreatedAt(v string) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *QbdVendor) GetUpdatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *QbdVendor) GetUpdatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *QbdVendor) SetUpdatedAt(v string) {
	o.UpdatedAt = v
}

// GetRevisionNumber returns the RevisionNumber field value
func (o *QbdVendor) GetRevisionNumber() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RevisionNumber
}

// GetRevisionNumberOk returns a tuple with the RevisionNumber field value
// and a boolean to check if the value has been set.
func (o *QbdVendor) GetRevisionNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RevisionNumber, true
}

// SetRevisionNumber sets field value
func (o *QbdVendor) SetRevisionNumber(v string) {
	o.RevisionNumber = v
}

// GetName returns the Name field value
func (o *QbdVendor) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *QbdVendor) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *QbdVendor) SetName(v string) {
	o.Name = v
}

// GetIsActive returns the IsActive field value
func (o *QbdVendor) GetIsActive() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsActive
}

// GetIsActiveOk returns a tuple with the IsActive field value
// and a boolean to check if the value has been set.
func (o *QbdVendor) GetIsActiveOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsActive, true
}

// SetIsActive sets field value
func (o *QbdVendor) SetIsActive(v bool) {
	o.IsActive = v
}

// GetClass returns the Class field value if set, zero value otherwise.
func (o *QbdVendor) GetClass() QbdVendorClass {
	if o == nil || IsNil(o.Class) {
		var ret QbdVendorClass
		return ret
	}
	return *o.Class
}

// GetClassOk returns a tuple with the Class field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QbdVendor) GetClassOk() (*QbdVendorClass, bool) {
	if o == nil || IsNil(o.Class) {
		return nil, false
	}
	return o.Class, true
}

// HasClass returns a boolean if a field has been set.
func (o *QbdVendor) HasClass() bool {
	if o != nil && !IsNil(o.Class) {
		return true
	}

	return false
}

// SetClass gets a reference to the given QbdVendorClass and assigns it to the Class field.
func (o *QbdVendor) SetClass(v QbdVendorClass) {
	o.Class = &v
}

// GetCompanyName returns the CompanyName field value if set, zero value otherwise.
func (o *QbdVendor) GetCompanyName() string {
	if o == nil || IsNil(o.CompanyName) {
		var ret string
		return ret
	}
	return *o.CompanyName
}

// GetCompanyNameOk returns a tuple with the CompanyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QbdVendor) GetCompanyNameOk() (*string, bool) {
	if o == nil || IsNil(o.CompanyName) {
		return nil, false
	}
	return o.CompanyName, true
}

// HasCompanyName returns a boolean if a field has been set.
func (o *QbdVendor) HasCompanyName() bool {
	if o != nil && !IsNil(o.CompanyName) {
		return true
	}

	return false
}

// SetCompanyName gets a reference to the given string and assigns it to the CompanyName field.
func (o *QbdVendor) SetCompanyName(v string) {
	o.CompanyName = &v
}

// GetSalutation returns the Salutation field value if set, zero value otherwise.
func (o *QbdVendor) GetSalutation() string {
	if o == nil || IsNil(o.Salutation) {
		var ret string
		return ret
	}
	return *o.Salutation
}

// GetSalutationOk returns a tuple with the Salutation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QbdVendor) GetSalutationOk() (*string, bool) {
	if o == nil || IsNil(o.Salutation) {
		return nil, false
	}
	return o.Salutation, true
}

// HasSalutation returns a boolean if a field has been set.
func (o *QbdVendor) HasSalutation() bool {
	if o != nil && !IsNil(o.Salutation) {
		return true
	}

	return false
}

// SetSalutation gets a reference to the given string and assigns it to the Salutation field.
func (o *QbdVendor) SetSalutation(v string) {
	o.Salutation = &v
}

// GetFirstName returns the FirstName field value if set, zero value otherwise.
func (o *QbdVendor) GetFirstName() string {
	if o == nil || IsNil(o.FirstName) {
		var ret string
		return ret
	}
	return *o.FirstName
}

// GetFirstNameOk returns a tuple with the FirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QbdVendor) GetFirstNameOk() (*string, bool) {
	if o == nil || IsNil(o.FirstName) {
		return nil, false
	}
	return o.FirstName, true
}

// HasFirstName returns a boolean if a field has been set.
func (o *QbdVendor) HasFirstName() bool {
	if o != nil && !IsNil(o.FirstName) {
		return true
	}

	return false
}

// SetFirstName gets a reference to the given string and assigns it to the FirstName field.
func (o *QbdVendor) SetFirstName(v string) {
	o.FirstName = &v
}

// GetMiddleName returns the MiddleName field value if set, zero value otherwise.
func (o *QbdVendor) GetMiddleName() string {
	if o == nil || IsNil(o.MiddleName) {
		var ret string
		return ret
	}
	return *o.MiddleName
}

// GetMiddleNameOk returns a tuple with the MiddleName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QbdVendor) GetMiddleNameOk() (*string, bool) {
	if o == nil || IsNil(o.MiddleName) {
		return nil, false
	}
	return o.MiddleName, true
}

// HasMiddleName returns a boolean if a field has been set.
func (o *QbdVendor) HasMiddleName() bool {
	if o != nil && !IsNil(o.MiddleName) {
		return true
	}

	return false
}

// SetMiddleName gets a reference to the given string and assigns it to the MiddleName field.
func (o *QbdVendor) SetMiddleName(v string) {
	o.MiddleName = &v
}

// GetLastName returns the LastName field value if set, zero value otherwise.
func (o *QbdVendor) GetLastName() string {
	if o == nil || IsNil(o.LastName) {
		var ret string
		return ret
	}
	return *o.LastName
}

// GetLastNameOk returns a tuple with the LastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QbdVendor) GetLastNameOk() (*string, bool) {
	if o == nil || IsNil(o.LastName) {
		return nil, false
	}
	return o.LastName, true
}

// HasLastName returns a boolean if a field has been set.
func (o *QbdVendor) HasLastName() bool {
	if o != nil && !IsNil(o.LastName) {
		return true
	}

	return false
}

// SetLastName gets a reference to the given string and assigns it to the LastName field.
func (o *QbdVendor) SetLastName(v string) {
	o.LastName = &v
}

// GetJobTitle returns the JobTitle field value if set, zero value otherwise.
func (o *QbdVendor) GetJobTitle() string {
	if o == nil || IsNil(o.JobTitle) {
		var ret string
		return ret
	}
	return *o.JobTitle
}

// GetJobTitleOk returns a tuple with the JobTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QbdVendor) GetJobTitleOk() (*string, bool) {
	if o == nil || IsNil(o.JobTitle) {
		return nil, false
	}
	return o.JobTitle, true
}

// HasJobTitle returns a boolean if a field has been set.
func (o *QbdVendor) HasJobTitle() bool {
	if o != nil && !IsNil(o.JobTitle) {
		return true
	}

	return false
}

// SetJobTitle gets a reference to the given string and assigns it to the JobTitle field.
func (o *QbdVendor) SetJobTitle(v string) {
	o.JobTitle = &v
}

// GetBillingAddress returns the BillingAddress field value if set, zero value otherwise.
func (o *QbdVendor) GetBillingAddress() QbdVendorBillingAddress {
	if o == nil || IsNil(o.BillingAddress) {
		var ret QbdVendorBillingAddress
		return ret
	}
	return *o.BillingAddress
}

// GetBillingAddressOk returns a tuple with the BillingAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QbdVendor) GetBillingAddressOk() (*QbdVendorBillingAddress, bool) {
	if o == nil || IsNil(o.BillingAddress) {
		return nil, false
	}
	return o.BillingAddress, true
}

// HasBillingAddress returns a boolean if a field has been set.
func (o *QbdVendor) HasBillingAddress() bool {
	if o != nil && !IsNil(o.BillingAddress) {
		return true
	}

	return false
}

// SetBillingAddress gets a reference to the given QbdVendorBillingAddress and assigns it to the BillingAddress field.
func (o *QbdVendor) SetBillingAddress(v QbdVendorBillingAddress) {
	o.BillingAddress = &v
}

// GetShippingAddress returns the ShippingAddress field value if set, zero value otherwise.
func (o *QbdVendor) GetShippingAddress() QbdVendorShippingAddress {
	if o == nil || IsNil(o.ShippingAddress) {
		var ret QbdVendorShippingAddress
		return ret
	}
	return *o.ShippingAddress
}

// GetShippingAddressOk returns a tuple with the ShippingAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QbdVendor) GetShippingAddressOk() (*QbdVendorShippingAddress, bool) {
	if o == nil || IsNil(o.ShippingAddress) {
		return nil, false
	}
	return o.ShippingAddress, true
}

// HasShippingAddress returns a boolean if a field has been set.
func (o *QbdVendor) HasShippingAddress() bool {
	if o != nil && !IsNil(o.ShippingAddress) {
		return true
	}

	return false
}

// SetShippingAddress gets a reference to the given QbdVendorShippingAddress and assigns it to the ShippingAddress field.
func (o *QbdVendor) SetShippingAddress(v QbdVendorShippingAddress) {
	o.ShippingAddress = &v
}

// GetPhone returns the Phone field value if set, zero value otherwise.
func (o *QbdVendor) GetPhone() string {
	if o == nil || IsNil(o.Phone) {
		var ret string
		return ret
	}
	return *o.Phone
}

// GetPhoneOk returns a tuple with the Phone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QbdVendor) GetPhoneOk() (*string, bool) {
	if o == nil || IsNil(o.Phone) {
		return nil, false
	}
	return o.Phone, true
}

// HasPhone returns a boolean if a field has been set.
func (o *QbdVendor) HasPhone() bool {
	if o != nil && !IsNil(o.Phone) {
		return true
	}

	return false
}

// SetPhone gets a reference to the given string and assigns it to the Phone field.
func (o *QbdVendor) SetPhone(v string) {
	o.Phone = &v
}

// GetAlternatePhone returns the AlternatePhone field value if set, zero value otherwise.
func (o *QbdVendor) GetAlternatePhone() string {
	if o == nil || IsNil(o.AlternatePhone) {
		var ret string
		return ret
	}
	return *o.AlternatePhone
}

// GetAlternatePhoneOk returns a tuple with the AlternatePhone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QbdVendor) GetAlternatePhoneOk() (*string, bool) {
	if o == nil || IsNil(o.AlternatePhone) {
		return nil, false
	}
	return o.AlternatePhone, true
}

// HasAlternatePhone returns a boolean if a field has been set.
func (o *QbdVendor) HasAlternatePhone() bool {
	if o != nil && !IsNil(o.AlternatePhone) {
		return true
	}

	return false
}

// SetAlternatePhone gets a reference to the given string and assigns it to the AlternatePhone field.
func (o *QbdVendor) SetAlternatePhone(v string) {
	o.AlternatePhone = &v
}

// GetFax returns the Fax field value if set, zero value otherwise.
func (o *QbdVendor) GetFax() string {
	if o == nil || IsNil(o.Fax) {
		var ret string
		return ret
	}
	return *o.Fax
}

// GetFaxOk returns a tuple with the Fax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QbdVendor) GetFaxOk() (*string, bool) {
	if o == nil || IsNil(o.Fax) {
		return nil, false
	}
	return o.Fax, true
}

// HasFax returns a boolean if a field has been set.
func (o *QbdVendor) HasFax() bool {
	if o != nil && !IsNil(o.Fax) {
		return true
	}

	return false
}

// SetFax gets a reference to the given string and assigns it to the Fax field.
func (o *QbdVendor) SetFax(v string) {
	o.Fax = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *QbdVendor) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QbdVendor) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *QbdVendor) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *QbdVendor) SetEmail(v string) {
	o.Email = &v
}

// GetCcEmail returns the CcEmail field value if set, zero value otherwise.
func (o *QbdVendor) GetCcEmail() string {
	if o == nil || IsNil(o.CcEmail) {
		var ret string
		return ret
	}
	return *o.CcEmail
}

// GetCcEmailOk returns a tuple with the CcEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QbdVendor) GetCcEmailOk() (*string, bool) {
	if o == nil || IsNil(o.CcEmail) {
		return nil, false
	}
	return o.CcEmail, true
}

// HasCcEmail returns a boolean if a field has been set.
func (o *QbdVendor) HasCcEmail() bool {
	if o != nil && !IsNil(o.CcEmail) {
		return true
	}

	return false
}

// SetCcEmail gets a reference to the given string and assigns it to the CcEmail field.
func (o *QbdVendor) SetCcEmail(v string) {
	o.CcEmail = &v
}

// GetContact returns the Contact field value if set, zero value otherwise.
func (o *QbdVendor) GetContact() string {
	if o == nil || IsNil(o.Contact) {
		var ret string
		return ret
	}
	return *o.Contact
}

// GetContactOk returns a tuple with the Contact field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QbdVendor) GetContactOk() (*string, bool) {
	if o == nil || IsNil(o.Contact) {
		return nil, false
	}
	return o.Contact, true
}

// HasContact returns a boolean if a field has been set.
func (o *QbdVendor) HasContact() bool {
	if o != nil && !IsNil(o.Contact) {
		return true
	}

	return false
}

// SetContact gets a reference to the given string and assigns it to the Contact field.
func (o *QbdVendor) SetContact(v string) {
	o.Contact = &v
}

// GetAlternateContact returns the AlternateContact field value if set, zero value otherwise.
func (o *QbdVendor) GetAlternateContact() string {
	if o == nil || IsNil(o.AlternateContact) {
		var ret string
		return ret
	}
	return *o.AlternateContact
}

// GetAlternateContactOk returns a tuple with the AlternateContact field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QbdVendor) GetAlternateContactOk() (*string, bool) {
	if o == nil || IsNil(o.AlternateContact) {
		return nil, false
	}
	return o.AlternateContact, true
}

// HasAlternateContact returns a boolean if a field has been set.
func (o *QbdVendor) HasAlternateContact() bool {
	if o != nil && !IsNil(o.AlternateContact) {
		return true
	}

	return false
}

// SetAlternateContact gets a reference to the given string and assigns it to the AlternateContact field.
func (o *QbdVendor) SetAlternateContact(v string) {
	o.AlternateContact = &v
}

// GetCustomContactFields returns the CustomContactFields field value
func (o *QbdVendor) GetCustomContactFields() []QbdCustomContactField {
	if o == nil {
		var ret []QbdCustomContactField
		return ret
	}

	return o.CustomContactFields
}

// GetCustomContactFieldsOk returns a tuple with the CustomContactFields field value
// and a boolean to check if the value has been set.
func (o *QbdVendor) GetCustomContactFieldsOk() ([]QbdCustomContactField, bool) {
	if o == nil {
		return nil, false
	}
	return o.CustomContactFields, true
}

// SetCustomContactFields sets field value
func (o *QbdVendor) SetCustomContactFields(v []QbdCustomContactField) {
	o.CustomContactFields = v
}

// GetAdditionalContacts returns the AdditionalContacts field value
func (o *QbdVendor) GetAdditionalContacts() []QbdContact {
	if o == nil {
		var ret []QbdContact
		return ret
	}

	return o.AdditionalContacts
}

// GetAdditionalContactsOk returns a tuple with the AdditionalContacts field value
// and a boolean to check if the value has been set.
func (o *QbdVendor) GetAdditionalContactsOk() ([]QbdContact, bool) {
	if o == nil {
		return nil, false
	}
	return o.AdditionalContacts, true
}

// SetAdditionalContacts sets field value
func (o *QbdVendor) SetAdditionalContacts(v []QbdContact) {
	o.AdditionalContacts = v
}

// GetNameOnCheck returns the NameOnCheck field value if set, zero value otherwise.
func (o *QbdVendor) GetNameOnCheck() string {
	if o == nil || IsNil(o.NameOnCheck) {
		var ret string
		return ret
	}
	return *o.NameOnCheck
}

// GetNameOnCheckOk returns a tuple with the NameOnCheck field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QbdVendor) GetNameOnCheckOk() (*string, bool) {
	if o == nil || IsNil(o.NameOnCheck) {
		return nil, false
	}
	return o.NameOnCheck, true
}

// HasNameOnCheck returns a boolean if a field has been set.
func (o *QbdVendor) HasNameOnCheck() bool {
	if o != nil && !IsNil(o.NameOnCheck) {
		return true
	}

	return false
}

// SetNameOnCheck gets a reference to the given string and assigns it to the NameOnCheck field.
func (o *QbdVendor) SetNameOnCheck(v string) {
	o.NameOnCheck = &v
}

// GetAccountNumber returns the AccountNumber field value if set, zero value otherwise.
func (o *QbdVendor) GetAccountNumber() string {
	if o == nil || IsNil(o.AccountNumber) {
		var ret string
		return ret
	}
	return *o.AccountNumber
}

// GetAccountNumberOk returns a tuple with the AccountNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QbdVendor) GetAccountNumberOk() (*string, bool) {
	if o == nil || IsNil(o.AccountNumber) {
		return nil, false
	}
	return o.AccountNumber, true
}

// HasAccountNumber returns a boolean if a field has been set.
func (o *QbdVendor) HasAccountNumber() bool {
	if o != nil && !IsNil(o.AccountNumber) {
		return true
	}

	return false
}

// SetAccountNumber gets a reference to the given string and assigns it to the AccountNumber field.
func (o *QbdVendor) SetAccountNumber(v string) {
	o.AccountNumber = &v
}

// GetNote returns the Note field value if set, zero value otherwise.
func (o *QbdVendor) GetNote() string {
	if o == nil || IsNil(o.Note) {
		var ret string
		return ret
	}
	return *o.Note
}

// GetNoteOk returns a tuple with the Note field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QbdVendor) GetNoteOk() (*string, bool) {
	if o == nil || IsNil(o.Note) {
		return nil, false
	}
	return o.Note, true
}

// HasNote returns a boolean if a field has been set.
func (o *QbdVendor) HasNote() bool {
	if o != nil && !IsNil(o.Note) {
		return true
	}

	return false
}

// SetNote gets a reference to the given string and assigns it to the Note field.
func (o *QbdVendor) SetNote(v string) {
	o.Note = &v
}

// GetAdditionalNotes returns the AdditionalNotes field value
func (o *QbdVendor) GetAdditionalNotes() []QbdNote {
	if o == nil {
		var ret []QbdNote
		return ret
	}

	return o.AdditionalNotes
}

// GetAdditionalNotesOk returns a tuple with the AdditionalNotes field value
// and a boolean to check if the value has been set.
func (o *QbdVendor) GetAdditionalNotesOk() ([]QbdNote, bool) {
	if o == nil {
		return nil, false
	}
	return o.AdditionalNotes, true
}

// SetAdditionalNotes sets field value
func (o *QbdVendor) SetAdditionalNotes(v []QbdNote) {
	o.AdditionalNotes = v
}

// GetVendorType returns the VendorType field value if set, zero value otherwise.
func (o *QbdVendor) GetVendorType() QbdVendorVendorType {
	if o == nil || IsNil(o.VendorType) {
		var ret QbdVendorVendorType
		return ret
	}
	return *o.VendorType
}

// GetVendorTypeOk returns a tuple with the VendorType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QbdVendor) GetVendorTypeOk() (*QbdVendorVendorType, bool) {
	if o == nil || IsNil(o.VendorType) {
		return nil, false
	}
	return o.VendorType, true
}

// HasVendorType returns a boolean if a field has been set.
func (o *QbdVendor) HasVendorType() bool {
	if o != nil && !IsNil(o.VendorType) {
		return true
	}

	return false
}

// SetVendorType gets a reference to the given QbdVendorVendorType and assigns it to the VendorType field.
func (o *QbdVendor) SetVendorType(v QbdVendorVendorType) {
	o.VendorType = &v
}

// GetTerms returns the Terms field value if set, zero value otherwise.
func (o *QbdVendor) GetTerms() QbdVendorTerms {
	if o == nil || IsNil(o.Terms) {
		var ret QbdVendorTerms
		return ret
	}
	return *o.Terms
}

// GetTermsOk returns a tuple with the Terms field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QbdVendor) GetTermsOk() (*QbdVendorTerms, bool) {
	if o == nil || IsNil(o.Terms) {
		return nil, false
	}
	return o.Terms, true
}

// HasTerms returns a boolean if a field has been set.
func (o *QbdVendor) HasTerms() bool {
	if o != nil && !IsNil(o.Terms) {
		return true
	}

	return false
}

// SetTerms gets a reference to the given QbdVendorTerms and assigns it to the Terms field.
func (o *QbdVendor) SetTerms(v QbdVendorTerms) {
	o.Terms = &v
}

// GetCreditLimit returns the CreditLimit field value if set, zero value otherwise.
func (o *QbdVendor) GetCreditLimit() string {
	if o == nil || IsNil(o.CreditLimit) {
		var ret string
		return ret
	}
	return *o.CreditLimit
}

// GetCreditLimitOk returns a tuple with the CreditLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QbdVendor) GetCreditLimitOk() (*string, bool) {
	if o == nil || IsNil(o.CreditLimit) {
		return nil, false
	}
	return o.CreditLimit, true
}

// HasCreditLimit returns a boolean if a field has been set.
func (o *QbdVendor) HasCreditLimit() bool {
	if o != nil && !IsNil(o.CreditLimit) {
		return true
	}

	return false
}

// SetCreditLimit gets a reference to the given string and assigns it to the CreditLimit field.
func (o *QbdVendor) SetCreditLimit(v string) {
	o.CreditLimit = &v
}

// GetTaxIdentificationNumber returns the TaxIdentificationNumber field value if set, zero value otherwise.
func (o *QbdVendor) GetTaxIdentificationNumber() string {
	if o == nil || IsNil(o.TaxIdentificationNumber) {
		var ret string
		return ret
	}
	return *o.TaxIdentificationNumber
}

// GetTaxIdentificationNumberOk returns a tuple with the TaxIdentificationNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QbdVendor) GetTaxIdentificationNumberOk() (*string, bool) {
	if o == nil || IsNil(o.TaxIdentificationNumber) {
		return nil, false
	}
	return o.TaxIdentificationNumber, true
}

// HasTaxIdentificationNumber returns a boolean if a field has been set.
func (o *QbdVendor) HasTaxIdentificationNumber() bool {
	if o != nil && !IsNil(o.TaxIdentificationNumber) {
		return true
	}

	return false
}

// SetTaxIdentificationNumber gets a reference to the given string and assigns it to the TaxIdentificationNumber field.
func (o *QbdVendor) SetTaxIdentificationNumber(v string) {
	o.TaxIdentificationNumber = &v
}

// GetIsEligibleFor1099 returns the IsEligibleFor1099 field value if set, zero value otherwise.
func (o *QbdVendor) GetIsEligibleFor1099() bool {
	if o == nil || IsNil(o.IsEligibleFor1099) {
		var ret bool
		return ret
	}
	return *o.IsEligibleFor1099
}

// GetIsEligibleFor1099Ok returns a tuple with the IsEligibleFor1099 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QbdVendor) GetIsEligibleFor1099Ok() (*bool, bool) {
	if o == nil || IsNil(o.IsEligibleFor1099) {
		return nil, false
	}
	return o.IsEligibleFor1099, true
}

// HasIsEligibleFor1099 returns a boolean if a field has been set.
func (o *QbdVendor) HasIsEligibleFor1099() bool {
	if o != nil && !IsNil(o.IsEligibleFor1099) {
		return true
	}

	return false
}

// SetIsEligibleFor1099 gets a reference to the given bool and assigns it to the IsEligibleFor1099 field.
func (o *QbdVendor) SetIsEligibleFor1099(v bool) {
	o.IsEligibleFor1099 = &v
}

// GetBalance returns the Balance field value if set, zero value otherwise.
func (o *QbdVendor) GetBalance() string {
	if o == nil || IsNil(o.Balance) {
		var ret string
		return ret
	}
	return *o.Balance
}

// GetBalanceOk returns a tuple with the Balance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QbdVendor) GetBalanceOk() (*string, bool) {
	if o == nil || IsNil(o.Balance) {
		return nil, false
	}
	return o.Balance, true
}

// HasBalance returns a boolean if a field has been set.
func (o *QbdVendor) HasBalance() bool {
	if o != nil && !IsNil(o.Balance) {
		return true
	}

	return false
}

// SetBalance gets a reference to the given string and assigns it to the Balance field.
func (o *QbdVendor) SetBalance(v string) {
	o.Balance = &v
}

// GetBillingRate returns the BillingRate field value if set, zero value otherwise.
func (o *QbdVendor) GetBillingRate() QbdVendorBillingRate {
	if o == nil || IsNil(o.BillingRate) {
		var ret QbdVendorBillingRate
		return ret
	}
	return *o.BillingRate
}

// GetBillingRateOk returns a tuple with the BillingRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QbdVendor) GetBillingRateOk() (*QbdVendorBillingRate, bool) {
	if o == nil || IsNil(o.BillingRate) {
		return nil, false
	}
	return o.BillingRate, true
}

// HasBillingRate returns a boolean if a field has been set.
func (o *QbdVendor) HasBillingRate() bool {
	if o != nil && !IsNil(o.BillingRate) {
		return true
	}

	return false
}

// SetBillingRate gets a reference to the given QbdVendorBillingRate and assigns it to the BillingRate field.
func (o *QbdVendor) SetBillingRate(v QbdVendorBillingRate) {
	o.BillingRate = &v
}

// GetExternalId returns the ExternalId field value if set, zero value otherwise.
func (o *QbdVendor) GetExternalId() string {
	if o == nil || IsNil(o.ExternalId) {
		var ret string
		return ret
	}
	return *o.ExternalId
}

// GetExternalIdOk returns a tuple with the ExternalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QbdVendor) GetExternalIdOk() (*string, bool) {
	if o == nil || IsNil(o.ExternalId) {
		return nil, false
	}
	return o.ExternalId, true
}

// HasExternalId returns a boolean if a field has been set.
func (o *QbdVendor) HasExternalId() bool {
	if o != nil && !IsNil(o.ExternalId) {
		return true
	}

	return false
}

// SetExternalId gets a reference to the given string and assigns it to the ExternalId field.
func (o *QbdVendor) SetExternalId(v string) {
	o.ExternalId = &v
}

// GetSalesTaxCode returns the SalesTaxCode field value if set, zero value otherwise.
func (o *QbdVendor) GetSalesTaxCode() QbdVendorSalesTaxCode {
	if o == nil || IsNil(o.SalesTaxCode) {
		var ret QbdVendorSalesTaxCode
		return ret
	}
	return *o.SalesTaxCode
}

// GetSalesTaxCodeOk returns a tuple with the SalesTaxCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QbdVendor) GetSalesTaxCodeOk() (*QbdVendorSalesTaxCode, bool) {
	if o == nil || IsNil(o.SalesTaxCode) {
		return nil, false
	}
	return o.SalesTaxCode, true
}

// HasSalesTaxCode returns a boolean if a field has been set.
func (o *QbdVendor) HasSalesTaxCode() bool {
	if o != nil && !IsNil(o.SalesTaxCode) {
		return true
	}

	return false
}

// SetSalesTaxCode gets a reference to the given QbdVendorSalesTaxCode and assigns it to the SalesTaxCode field.
func (o *QbdVendor) SetSalesTaxCode(v QbdVendorSalesTaxCode) {
	o.SalesTaxCode = &v
}

// GetSalesTaxCountry returns the SalesTaxCountry field value if set, zero value otherwise.
func (o *QbdVendor) GetSalesTaxCountry() string {
	if o == nil || IsNil(o.SalesTaxCountry) {
		var ret string
		return ret
	}
	return *o.SalesTaxCountry
}

// GetSalesTaxCountryOk returns a tuple with the SalesTaxCountry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QbdVendor) GetSalesTaxCountryOk() (*string, bool) {
	if o == nil || IsNil(o.SalesTaxCountry) {
		return nil, false
	}
	return o.SalesTaxCountry, true
}

// HasSalesTaxCountry returns a boolean if a field has been set.
func (o *QbdVendor) HasSalesTaxCountry() bool {
	if o != nil && !IsNil(o.SalesTaxCountry) {
		return true
	}

	return false
}

// SetSalesTaxCountry gets a reference to the given string and assigns it to the SalesTaxCountry field.
func (o *QbdVendor) SetSalesTaxCountry(v string) {
	o.SalesTaxCountry = &v
}

// GetIsSalesTaxAgency returns the IsSalesTaxAgency field value if set, zero value otherwise.
func (o *QbdVendor) GetIsSalesTaxAgency() bool {
	if o == nil || IsNil(o.IsSalesTaxAgency) {
		var ret bool
		return ret
	}
	return *o.IsSalesTaxAgency
}

// GetIsSalesTaxAgencyOk returns a tuple with the IsSalesTaxAgency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QbdVendor) GetIsSalesTaxAgencyOk() (*bool, bool) {
	if o == nil || IsNil(o.IsSalesTaxAgency) {
		return nil, false
	}
	return o.IsSalesTaxAgency, true
}

// HasIsSalesTaxAgency returns a boolean if a field has been set.
func (o *QbdVendor) HasIsSalesTaxAgency() bool {
	if o != nil && !IsNil(o.IsSalesTaxAgency) {
		return true
	}

	return false
}

// SetIsSalesTaxAgency gets a reference to the given bool and assigns it to the IsSalesTaxAgency field.
func (o *QbdVendor) SetIsSalesTaxAgency(v bool) {
	o.IsSalesTaxAgency = &v
}

// GetSalesTaxReturn returns the SalesTaxReturn field value if set, zero value otherwise.
func (o *QbdVendor) GetSalesTaxReturn() QbdVendorSalesTaxReturn {
	if o == nil || IsNil(o.SalesTaxReturn) {
		var ret QbdVendorSalesTaxReturn
		return ret
	}
	return *o.SalesTaxReturn
}

// GetSalesTaxReturnOk returns a tuple with the SalesTaxReturn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QbdVendor) GetSalesTaxReturnOk() (*QbdVendorSalesTaxReturn, bool) {
	if o == nil || IsNil(o.SalesTaxReturn) {
		return nil, false
	}
	return o.SalesTaxReturn, true
}

// HasSalesTaxReturn returns a boolean if a field has been set.
func (o *QbdVendor) HasSalesTaxReturn() bool {
	if o != nil && !IsNil(o.SalesTaxReturn) {
		return true
	}

	return false
}

// SetSalesTaxReturn gets a reference to the given QbdVendorSalesTaxReturn and assigns it to the SalesTaxReturn field.
func (o *QbdVendor) SetSalesTaxReturn(v QbdVendorSalesTaxReturn) {
	o.SalesTaxReturn = &v
}

// GetTaxRegistrationNumber returns the TaxRegistrationNumber field value if set, zero value otherwise.
func (o *QbdVendor) GetTaxRegistrationNumber() string {
	if o == nil || IsNil(o.TaxRegistrationNumber) {
		var ret string
		return ret
	}
	return *o.TaxRegistrationNumber
}

// GetTaxRegistrationNumberOk returns a tuple with the TaxRegistrationNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QbdVendor) GetTaxRegistrationNumberOk() (*string, bool) {
	if o == nil || IsNil(o.TaxRegistrationNumber) {
		return nil, false
	}
	return o.TaxRegistrationNumber, true
}

// HasTaxRegistrationNumber returns a boolean if a field has been set.
func (o *QbdVendor) HasTaxRegistrationNumber() bool {
	if o != nil && !IsNil(o.TaxRegistrationNumber) {
		return true
	}

	return false
}

// SetTaxRegistrationNumber gets a reference to the given string and assigns it to the TaxRegistrationNumber field.
func (o *QbdVendor) SetTaxRegistrationNumber(v string) {
	o.TaxRegistrationNumber = &v
}

// GetReportingPeriod returns the ReportingPeriod field value if set, zero value otherwise.
func (o *QbdVendor) GetReportingPeriod() string {
	if o == nil || IsNil(o.ReportingPeriod) {
		var ret string
		return ret
	}
	return *o.ReportingPeriod
}

// GetReportingPeriodOk returns a tuple with the ReportingPeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QbdVendor) GetReportingPeriodOk() (*string, bool) {
	if o == nil || IsNil(o.ReportingPeriod) {
		return nil, false
	}
	return o.ReportingPeriod, true
}

// HasReportingPeriod returns a boolean if a field has been set.
func (o *QbdVendor) HasReportingPeriod() bool {
	if o != nil && !IsNil(o.ReportingPeriod) {
		return true
	}

	return false
}

// SetReportingPeriod gets a reference to the given string and assigns it to the ReportingPeriod field.
func (o *QbdVendor) SetReportingPeriod(v string) {
	o.ReportingPeriod = &v
}

// GetIsTrackingPurchaseTax returns the IsTrackingPurchaseTax field value if set, zero value otherwise.
func (o *QbdVendor) GetIsTrackingPurchaseTax() bool {
	if o == nil || IsNil(o.IsTrackingPurchaseTax) {
		var ret bool
		return ret
	}
	return *o.IsTrackingPurchaseTax
}

// GetIsTrackingPurchaseTaxOk returns a tuple with the IsTrackingPurchaseTax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QbdVendor) GetIsTrackingPurchaseTaxOk() (*bool, bool) {
	if o == nil || IsNil(o.IsTrackingPurchaseTax) {
		return nil, false
	}
	return o.IsTrackingPurchaseTax, true
}

// HasIsTrackingPurchaseTax returns a boolean if a field has been set.
func (o *QbdVendor) HasIsTrackingPurchaseTax() bool {
	if o != nil && !IsNil(o.IsTrackingPurchaseTax) {
		return true
	}

	return false
}

// SetIsTrackingPurchaseTax gets a reference to the given bool and assigns it to the IsTrackingPurchaseTax field.
func (o *QbdVendor) SetIsTrackingPurchaseTax(v bool) {
	o.IsTrackingPurchaseTax = &v
}

// GetPurchaseTaxAccount returns the PurchaseTaxAccount field value if set, zero value otherwise.
func (o *QbdVendor) GetPurchaseTaxAccount() QbdVendorPurchaseTaxAccount {
	if o == nil || IsNil(o.PurchaseTaxAccount) {
		var ret QbdVendorPurchaseTaxAccount
		return ret
	}
	return *o.PurchaseTaxAccount
}

// GetPurchaseTaxAccountOk returns a tuple with the PurchaseTaxAccount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QbdVendor) GetPurchaseTaxAccountOk() (*QbdVendorPurchaseTaxAccount, bool) {
	if o == nil || IsNil(o.PurchaseTaxAccount) {
		return nil, false
	}
	return o.PurchaseTaxAccount, true
}

// HasPurchaseTaxAccount returns a boolean if a field has been set.
func (o *QbdVendor) HasPurchaseTaxAccount() bool {
	if o != nil && !IsNil(o.PurchaseTaxAccount) {
		return true
	}

	return false
}

// SetPurchaseTaxAccount gets a reference to the given QbdVendorPurchaseTaxAccount and assigns it to the PurchaseTaxAccount field.
func (o *QbdVendor) SetPurchaseTaxAccount(v QbdVendorPurchaseTaxAccount) {
	o.PurchaseTaxAccount = &v
}

// GetIsTrackingSalesTax returns the IsTrackingSalesTax field value if set, zero value otherwise.
func (o *QbdVendor) GetIsTrackingSalesTax() bool {
	if o == nil || IsNil(o.IsTrackingSalesTax) {
		var ret bool
		return ret
	}
	return *o.IsTrackingSalesTax
}

// GetIsTrackingSalesTaxOk returns a tuple with the IsTrackingSalesTax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QbdVendor) GetIsTrackingSalesTaxOk() (*bool, bool) {
	if o == nil || IsNil(o.IsTrackingSalesTax) {
		return nil, false
	}
	return o.IsTrackingSalesTax, true
}

// HasIsTrackingSalesTax returns a boolean if a field has been set.
func (o *QbdVendor) HasIsTrackingSalesTax() bool {
	if o != nil && !IsNil(o.IsTrackingSalesTax) {
		return true
	}

	return false
}

// SetIsTrackingSalesTax gets a reference to the given bool and assigns it to the IsTrackingSalesTax field.
func (o *QbdVendor) SetIsTrackingSalesTax(v bool) {
	o.IsTrackingSalesTax = &v
}

// GetSalesTaxAccount returns the SalesTaxAccount field value if set, zero value otherwise.
func (o *QbdVendor) GetSalesTaxAccount() QbdVendorSalesTaxAccount {
	if o == nil || IsNil(o.SalesTaxAccount) {
		var ret QbdVendorSalesTaxAccount
		return ret
	}
	return *o.SalesTaxAccount
}

// GetSalesTaxAccountOk returns a tuple with the SalesTaxAccount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QbdVendor) GetSalesTaxAccountOk() (*QbdVendorSalesTaxAccount, bool) {
	if o == nil || IsNil(o.SalesTaxAccount) {
		return nil, false
	}
	return o.SalesTaxAccount, true
}

// HasSalesTaxAccount returns a boolean if a field has been set.
func (o *QbdVendor) HasSalesTaxAccount() bool {
	if o != nil && !IsNil(o.SalesTaxAccount) {
		return true
	}

	return false
}

// SetSalesTaxAccount gets a reference to the given QbdVendorSalesTaxAccount and assigns it to the SalesTaxAccount field.
func (o *QbdVendor) SetSalesTaxAccount(v QbdVendorSalesTaxAccount) {
	o.SalesTaxAccount = &v
}

// GetIsCompoundingTax returns the IsCompoundingTax field value if set, zero value otherwise.
func (o *QbdVendor) GetIsCompoundingTax() bool {
	if o == nil || IsNil(o.IsCompoundingTax) {
		var ret bool
		return ret
	}
	return *o.IsCompoundingTax
}

// GetIsCompoundingTaxOk returns a tuple with the IsCompoundingTax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QbdVendor) GetIsCompoundingTaxOk() (*bool, bool) {
	if o == nil || IsNil(o.IsCompoundingTax) {
		return nil, false
	}
	return o.IsCompoundingTax, true
}

// HasIsCompoundingTax returns a boolean if a field has been set.
func (o *QbdVendor) HasIsCompoundingTax() bool {
	if o != nil && !IsNil(o.IsCompoundingTax) {
		return true
	}

	return false
}

// SetIsCompoundingTax gets a reference to the given bool and assigns it to the IsCompoundingTax field.
func (o *QbdVendor) SetIsCompoundingTax(v bool) {
	o.IsCompoundingTax = &v
}

// GetDefaultExpenseAccounts returns the DefaultExpenseAccounts field value
func (o *QbdVendor) GetDefaultExpenseAccounts() []QbdVendorDefaultExpenseAccountsInner {
	if o == nil {
		var ret []QbdVendorDefaultExpenseAccountsInner
		return ret
	}

	return o.DefaultExpenseAccounts
}

// GetDefaultExpenseAccountsOk returns a tuple with the DefaultExpenseAccounts field value
// and a boolean to check if the value has been set.
func (o *QbdVendor) GetDefaultExpenseAccountsOk() ([]QbdVendorDefaultExpenseAccountsInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.DefaultExpenseAccounts, true
}

// SetDefaultExpenseAccounts sets field value
func (o *QbdVendor) SetDefaultExpenseAccounts(v []QbdVendorDefaultExpenseAccountsInner) {
	o.DefaultExpenseAccounts = v
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *QbdVendor) GetCurrency() QbdVendorCurrency {
	if o == nil || IsNil(o.Currency) {
		var ret QbdVendorCurrency
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QbdVendor) GetCurrencyOk() (*QbdVendorCurrency, bool) {
	if o == nil || IsNil(o.Currency) {
		return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *QbdVendor) HasCurrency() bool {
	if o != nil && !IsNil(o.Currency) {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given QbdVendorCurrency and assigns it to the Currency field.
func (o *QbdVendor) SetCurrency(v QbdVendorCurrency) {
	o.Currency = &v
}

// GetCustomFields returns the CustomFields field value
func (o *QbdVendor) GetCustomFields() []QbdCustomField {
	if o == nil {
		var ret []QbdCustomField
		return ret
	}

	return o.CustomFields
}

// GetCustomFieldsOk returns a tuple with the CustomFields field value
// and a boolean to check if the value has been set.
func (o *QbdVendor) GetCustomFieldsOk() ([]QbdCustomField, bool) {
	if o == nil {
		return nil, false
	}
	return o.CustomFields, true
}

// SetCustomFields sets field value
func (o *QbdVendor) SetCustomFields(v []QbdCustomField) {
	o.CustomFields = v
}

func (o QbdVendor) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QbdVendor) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["objectType"] = o.ObjectType
	toSerialize["createdAt"] = o.CreatedAt
	toSerialize["updatedAt"] = o.UpdatedAt
	toSerialize["revisionNumber"] = o.RevisionNumber
	toSerialize["name"] = o.Name
	toSerialize["isActive"] = o.IsActive
	if !IsNil(o.Class) {
		toSerialize["class"] = o.Class
	}
	if !IsNil(o.CompanyName) {
		toSerialize["companyName"] = o.CompanyName
	}
	if !IsNil(o.Salutation) {
		toSerialize["salutation"] = o.Salutation
	}
	if !IsNil(o.FirstName) {
		toSerialize["firstName"] = o.FirstName
	}
	if !IsNil(o.MiddleName) {
		toSerialize["middleName"] = o.MiddleName
	}
	if !IsNil(o.LastName) {
		toSerialize["lastName"] = o.LastName
	}
	if !IsNil(o.JobTitle) {
		toSerialize["jobTitle"] = o.JobTitle
	}
	if !IsNil(o.BillingAddress) {
		toSerialize["billingAddress"] = o.BillingAddress
	}
	if !IsNil(o.ShippingAddress) {
		toSerialize["shippingAddress"] = o.ShippingAddress
	}
	if !IsNil(o.Phone) {
		toSerialize["phone"] = o.Phone
	}
	if !IsNil(o.AlternatePhone) {
		toSerialize["alternatePhone"] = o.AlternatePhone
	}
	if !IsNil(o.Fax) {
		toSerialize["fax"] = o.Fax
	}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.CcEmail) {
		toSerialize["ccEmail"] = o.CcEmail
	}
	if !IsNil(o.Contact) {
		toSerialize["contact"] = o.Contact
	}
	if !IsNil(o.AlternateContact) {
		toSerialize["alternateContact"] = o.AlternateContact
	}
	toSerialize["customContactFields"] = o.CustomContactFields
	toSerialize["additionalContacts"] = o.AdditionalContacts
	if !IsNil(o.NameOnCheck) {
		toSerialize["nameOnCheck"] = o.NameOnCheck
	}
	if !IsNil(o.AccountNumber) {
		toSerialize["accountNumber"] = o.AccountNumber
	}
	if !IsNil(o.Note) {
		toSerialize["note"] = o.Note
	}
	toSerialize["additionalNotes"] = o.AdditionalNotes
	if !IsNil(o.VendorType) {
		toSerialize["vendorType"] = o.VendorType
	}
	if !IsNil(o.Terms) {
		toSerialize["terms"] = o.Terms
	}
	if !IsNil(o.CreditLimit) {
		toSerialize["creditLimit"] = o.CreditLimit
	}
	if !IsNil(o.TaxIdentificationNumber) {
		toSerialize["taxIdentificationNumber"] = o.TaxIdentificationNumber
	}
	if !IsNil(o.IsEligibleFor1099) {
		toSerialize["isEligibleFor1099"] = o.IsEligibleFor1099
	}
	if !IsNil(o.Balance) {
		toSerialize["balance"] = o.Balance
	}
	if !IsNil(o.BillingRate) {
		toSerialize["billingRate"] = o.BillingRate
	}
	if !IsNil(o.ExternalId) {
		toSerialize["externalId"] = o.ExternalId
	}
	if !IsNil(o.SalesTaxCode) {
		toSerialize["salesTaxCode"] = o.SalesTaxCode
	}
	if !IsNil(o.SalesTaxCountry) {
		toSerialize["salesTaxCountry"] = o.SalesTaxCountry
	}
	if !IsNil(o.IsSalesTaxAgency) {
		toSerialize["isSalesTaxAgency"] = o.IsSalesTaxAgency
	}
	if !IsNil(o.SalesTaxReturn) {
		toSerialize["salesTaxReturn"] = o.SalesTaxReturn
	}
	if !IsNil(o.TaxRegistrationNumber) {
		toSerialize["taxRegistrationNumber"] = o.TaxRegistrationNumber
	}
	if !IsNil(o.ReportingPeriod) {
		toSerialize["reportingPeriod"] = o.ReportingPeriod
	}
	if !IsNil(o.IsTrackingPurchaseTax) {
		toSerialize["isTrackingPurchaseTax"] = o.IsTrackingPurchaseTax
	}
	if !IsNil(o.PurchaseTaxAccount) {
		toSerialize["purchaseTaxAccount"] = o.PurchaseTaxAccount
	}
	if !IsNil(o.IsTrackingSalesTax) {
		toSerialize["isTrackingSalesTax"] = o.IsTrackingSalesTax
	}
	if !IsNil(o.SalesTaxAccount) {
		toSerialize["salesTaxAccount"] = o.SalesTaxAccount
	}
	if !IsNil(o.IsCompoundingTax) {
		toSerialize["isCompoundingTax"] = o.IsCompoundingTax
	}
	toSerialize["defaultExpenseAccounts"] = o.DefaultExpenseAccounts
	if !IsNil(o.Currency) {
		toSerialize["currency"] = o.Currency
	}
	toSerialize["customFields"] = o.CustomFields

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *QbdVendor) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"objectType",
		"createdAt",
		"updatedAt",
		"revisionNumber",
		"name",
		"isActive",
		"customContactFields",
		"additionalContacts",
		"additionalNotes",
		"defaultExpenseAccounts",
		"customFields",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varQbdVendor := _QbdVendor{}

	err = json.Unmarshal(data, &varQbdVendor)

	if err != nil {
		return err
	}

	*o = QbdVendor(varQbdVendor)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "objectType")
		delete(additionalProperties, "createdAt")
		delete(additionalProperties, "updatedAt")
		delete(additionalProperties, "revisionNumber")
		delete(additionalProperties, "name")
		delete(additionalProperties, "isActive")
		delete(additionalProperties, "class")
		delete(additionalProperties, "companyName")
		delete(additionalProperties, "salutation")
		delete(additionalProperties, "firstName")
		delete(additionalProperties, "middleName")
		delete(additionalProperties, "lastName")
		delete(additionalProperties, "jobTitle")
		delete(additionalProperties, "billingAddress")
		delete(additionalProperties, "shippingAddress")
		delete(additionalProperties, "phone")
		delete(additionalProperties, "alternatePhone")
		delete(additionalProperties, "fax")
		delete(additionalProperties, "email")
		delete(additionalProperties, "ccEmail")
		delete(additionalProperties, "contact")
		delete(additionalProperties, "alternateContact")
		delete(additionalProperties, "customContactFields")
		delete(additionalProperties, "additionalContacts")
		delete(additionalProperties, "nameOnCheck")
		delete(additionalProperties, "accountNumber")
		delete(additionalProperties, "note")
		delete(additionalProperties, "additionalNotes")
		delete(additionalProperties, "vendorType")
		delete(additionalProperties, "terms")
		delete(additionalProperties, "creditLimit")
		delete(additionalProperties, "taxIdentificationNumber")
		delete(additionalProperties, "isEligibleFor1099")
		delete(additionalProperties, "balance")
		delete(additionalProperties, "billingRate")
		delete(additionalProperties, "externalId")
		delete(additionalProperties, "salesTaxCode")
		delete(additionalProperties, "salesTaxCountry")
		delete(additionalProperties, "isSalesTaxAgency")
		delete(additionalProperties, "salesTaxReturn")
		delete(additionalProperties, "taxRegistrationNumber")
		delete(additionalProperties, "reportingPeriod")
		delete(additionalProperties, "isTrackingPurchaseTax")
		delete(additionalProperties, "purchaseTaxAccount")
		delete(additionalProperties, "isTrackingSalesTax")
		delete(additionalProperties, "salesTaxAccount")
		delete(additionalProperties, "isCompoundingTax")
		delete(additionalProperties, "defaultExpenseAccounts")
		delete(additionalProperties, "currency")
		delete(additionalProperties, "customFields")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableQbdVendor struct {
	value *QbdVendor
	isSet bool
}

func (v NullableQbdVendor) Get() *QbdVendor {
	return v.value
}

func (v *NullableQbdVendor) Set(val *QbdVendor) {
	v.value = val
	v.isSet = true
}

func (v NullableQbdVendor) IsSet() bool {
	return v.isSet
}

func (v *NullableQbdVendor) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQbdVendor(val *QbdVendor) *NullableQbdVendor {
	return &NullableQbdVendor{value: val, isSet: true}
}

func (v NullableQbdVendor) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQbdVendor) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


