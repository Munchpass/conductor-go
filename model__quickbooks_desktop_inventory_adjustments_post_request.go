/*
Conductor API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package conductor

import (
	"encoding/json"
	"fmt"
)

// checks if the QuickbooksDesktopInventoryAdjustmentsPostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QuickbooksDesktopInventoryAdjustmentsPostRequest{}

// QuickbooksDesktopInventoryAdjustmentsPostRequest struct for QuickbooksDesktopInventoryAdjustmentsPostRequest
type QuickbooksDesktopInventoryAdjustmentsPostRequest struct {
	// The account to which this inventory adjustment is posted for tracking inventory value changes.
	AccountId string `json:"accountId"`
	// The date of this inventory adjustment, in ISO 8601 format (YYYY-MM-DD).
	TransactionDate string `json:"transactionDate"`
	// The case-sensitive user-defined reference number for this inventory adjustment, which can be used to identify the transaction in QuickBooks. This value is not required to be unique and can be arbitrarily changed by the QuickBooks user. When left blank in this create request, this field will be left blank in QuickBooks (i.e., it does *not* auto-increment).
	RefNumber *string `json:"refNumber,omitempty"`
	// The site location where inventory for the item associated with this inventory adjustment is stored.
	InventorySiteId *string `json:"inventorySiteId,omitempty"`
	// The customer or customer-job associated with this inventory adjustment.
	CustomerId *string `json:"customerId,omitempty"`
	// The inventory adjustment's class. Classes can be used to categorize objects into meaningful segments, such as department, location, or type of work. In QuickBooks, class tracking is off by default. A class defined here is automatically used in this inventory adjustment's line items unless overridden at the line item level.
	ClassId *string `json:"classId,omitempty"`
	// A memo or note for this inventory adjustment.
	Memo *string `json:"memo,omitempty"`
	// A globally unique identifier (GUID) you, the developer, can provide for tracking this object in your external system. This field is immutable and can only be set during object creation.  **IMPORTANT**: This field must be formatted as a valid GUID; otherwise, QuickBooks will return an error.
	ExternalId *string `json:"externalId,omitempty"`
	// The inventory adjustment's item lines, each representing the adjustment of an inventory item's quantity, value, serial number, or lot number.
	Lines []QuickbooksDesktopInventoryAdjustmentsPostRequestLinesInner `json:"lines,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _QuickbooksDesktopInventoryAdjustmentsPostRequest QuickbooksDesktopInventoryAdjustmentsPostRequest

// NewQuickbooksDesktopInventoryAdjustmentsPostRequest instantiates a new QuickbooksDesktopInventoryAdjustmentsPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQuickbooksDesktopInventoryAdjustmentsPostRequest(accountId string, transactionDate string) *QuickbooksDesktopInventoryAdjustmentsPostRequest {
	this := QuickbooksDesktopInventoryAdjustmentsPostRequest{}
	this.AccountId = accountId
	this.TransactionDate = transactionDate
	return &this
}

// NewQuickbooksDesktopInventoryAdjustmentsPostRequestWithDefaults instantiates a new QuickbooksDesktopInventoryAdjustmentsPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQuickbooksDesktopInventoryAdjustmentsPostRequestWithDefaults() *QuickbooksDesktopInventoryAdjustmentsPostRequest {
	this := QuickbooksDesktopInventoryAdjustmentsPostRequest{}
	return &this
}

// GetAccountId returns the AccountId field value
func (o *QuickbooksDesktopInventoryAdjustmentsPostRequest) GetAccountId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopInventoryAdjustmentsPostRequest) GetAccountIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountId, true
}

// SetAccountId sets field value
func (o *QuickbooksDesktopInventoryAdjustmentsPostRequest) SetAccountId(v string) {
	o.AccountId = v
}

// GetTransactionDate returns the TransactionDate field value
func (o *QuickbooksDesktopInventoryAdjustmentsPostRequest) GetTransactionDate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TransactionDate
}

// GetTransactionDateOk returns a tuple with the TransactionDate field value
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopInventoryAdjustmentsPostRequest) GetTransactionDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TransactionDate, true
}

// SetTransactionDate sets field value
func (o *QuickbooksDesktopInventoryAdjustmentsPostRequest) SetTransactionDate(v string) {
	o.TransactionDate = v
}

// GetRefNumber returns the RefNumber field value if set, zero value otherwise.
func (o *QuickbooksDesktopInventoryAdjustmentsPostRequest) GetRefNumber() string {
	if o == nil || IsNil(o.RefNumber) {
		var ret string
		return ret
	}
	return *o.RefNumber
}

// GetRefNumberOk returns a tuple with the RefNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopInventoryAdjustmentsPostRequest) GetRefNumberOk() (*string, bool) {
	if o == nil || IsNil(o.RefNumber) {
		return nil, false
	}
	return o.RefNumber, true
}

// HasRefNumber returns a boolean if a field has been set.
func (o *QuickbooksDesktopInventoryAdjustmentsPostRequest) HasRefNumber() bool {
	if o != nil && !IsNil(o.RefNumber) {
		return true
	}

	return false
}

// SetRefNumber gets a reference to the given string and assigns it to the RefNumber field.
func (o *QuickbooksDesktopInventoryAdjustmentsPostRequest) SetRefNumber(v string) {
	o.RefNumber = &v
}

// GetInventorySiteId returns the InventorySiteId field value if set, zero value otherwise.
func (o *QuickbooksDesktopInventoryAdjustmentsPostRequest) GetInventorySiteId() string {
	if o == nil || IsNil(o.InventorySiteId) {
		var ret string
		return ret
	}
	return *o.InventorySiteId
}

// GetInventorySiteIdOk returns a tuple with the InventorySiteId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopInventoryAdjustmentsPostRequest) GetInventorySiteIdOk() (*string, bool) {
	if o == nil || IsNil(o.InventorySiteId) {
		return nil, false
	}
	return o.InventorySiteId, true
}

// HasInventorySiteId returns a boolean if a field has been set.
func (o *QuickbooksDesktopInventoryAdjustmentsPostRequest) HasInventorySiteId() bool {
	if o != nil && !IsNil(o.InventorySiteId) {
		return true
	}

	return false
}

// SetInventorySiteId gets a reference to the given string and assigns it to the InventorySiteId field.
func (o *QuickbooksDesktopInventoryAdjustmentsPostRequest) SetInventorySiteId(v string) {
	o.InventorySiteId = &v
}

// GetCustomerId returns the CustomerId field value if set, zero value otherwise.
func (o *QuickbooksDesktopInventoryAdjustmentsPostRequest) GetCustomerId() string {
	if o == nil || IsNil(o.CustomerId) {
		var ret string
		return ret
	}
	return *o.CustomerId
}

// GetCustomerIdOk returns a tuple with the CustomerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopInventoryAdjustmentsPostRequest) GetCustomerIdOk() (*string, bool) {
	if o == nil || IsNil(o.CustomerId) {
		return nil, false
	}
	return o.CustomerId, true
}

// HasCustomerId returns a boolean if a field has been set.
func (o *QuickbooksDesktopInventoryAdjustmentsPostRequest) HasCustomerId() bool {
	if o != nil && !IsNil(o.CustomerId) {
		return true
	}

	return false
}

// SetCustomerId gets a reference to the given string and assigns it to the CustomerId field.
func (o *QuickbooksDesktopInventoryAdjustmentsPostRequest) SetCustomerId(v string) {
	o.CustomerId = &v
}

// GetClassId returns the ClassId field value if set, zero value otherwise.
func (o *QuickbooksDesktopInventoryAdjustmentsPostRequest) GetClassId() string {
	if o == nil || IsNil(o.ClassId) {
		var ret string
		return ret
	}
	return *o.ClassId
}

// GetClassIdOk returns a tuple with the ClassId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopInventoryAdjustmentsPostRequest) GetClassIdOk() (*string, bool) {
	if o == nil || IsNil(o.ClassId) {
		return nil, false
	}
	return o.ClassId, true
}

// HasClassId returns a boolean if a field has been set.
func (o *QuickbooksDesktopInventoryAdjustmentsPostRequest) HasClassId() bool {
	if o != nil && !IsNil(o.ClassId) {
		return true
	}

	return false
}

// SetClassId gets a reference to the given string and assigns it to the ClassId field.
func (o *QuickbooksDesktopInventoryAdjustmentsPostRequest) SetClassId(v string) {
	o.ClassId = &v
}

// GetMemo returns the Memo field value if set, zero value otherwise.
func (o *QuickbooksDesktopInventoryAdjustmentsPostRequest) GetMemo() string {
	if o == nil || IsNil(o.Memo) {
		var ret string
		return ret
	}
	return *o.Memo
}

// GetMemoOk returns a tuple with the Memo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopInventoryAdjustmentsPostRequest) GetMemoOk() (*string, bool) {
	if o == nil || IsNil(o.Memo) {
		return nil, false
	}
	return o.Memo, true
}

// HasMemo returns a boolean if a field has been set.
func (o *QuickbooksDesktopInventoryAdjustmentsPostRequest) HasMemo() bool {
	if o != nil && !IsNil(o.Memo) {
		return true
	}

	return false
}

// SetMemo gets a reference to the given string and assigns it to the Memo field.
func (o *QuickbooksDesktopInventoryAdjustmentsPostRequest) SetMemo(v string) {
	o.Memo = &v
}

// GetExternalId returns the ExternalId field value if set, zero value otherwise.
func (o *QuickbooksDesktopInventoryAdjustmentsPostRequest) GetExternalId() string {
	if o == nil || IsNil(o.ExternalId) {
		var ret string
		return ret
	}
	return *o.ExternalId
}

// GetExternalIdOk returns a tuple with the ExternalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopInventoryAdjustmentsPostRequest) GetExternalIdOk() (*string, bool) {
	if o == nil || IsNil(o.ExternalId) {
		return nil, false
	}
	return o.ExternalId, true
}

// HasExternalId returns a boolean if a field has been set.
func (o *QuickbooksDesktopInventoryAdjustmentsPostRequest) HasExternalId() bool {
	if o != nil && !IsNil(o.ExternalId) {
		return true
	}

	return false
}

// SetExternalId gets a reference to the given string and assigns it to the ExternalId field.
func (o *QuickbooksDesktopInventoryAdjustmentsPostRequest) SetExternalId(v string) {
	o.ExternalId = &v
}

// GetLines returns the Lines field value if set, zero value otherwise.
func (o *QuickbooksDesktopInventoryAdjustmentsPostRequest) GetLines() []QuickbooksDesktopInventoryAdjustmentsPostRequestLinesInner {
	if o == nil || IsNil(o.Lines) {
		var ret []QuickbooksDesktopInventoryAdjustmentsPostRequestLinesInner
		return ret
	}
	return o.Lines
}

// GetLinesOk returns a tuple with the Lines field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopInventoryAdjustmentsPostRequest) GetLinesOk() ([]QuickbooksDesktopInventoryAdjustmentsPostRequestLinesInner, bool) {
	if o == nil || IsNil(o.Lines) {
		return nil, false
	}
	return o.Lines, true
}

// HasLines returns a boolean if a field has been set.
func (o *QuickbooksDesktopInventoryAdjustmentsPostRequest) HasLines() bool {
	if o != nil && !IsNil(o.Lines) {
		return true
	}

	return false
}

// SetLines gets a reference to the given []QuickbooksDesktopInventoryAdjustmentsPostRequestLinesInner and assigns it to the Lines field.
func (o *QuickbooksDesktopInventoryAdjustmentsPostRequest) SetLines(v []QuickbooksDesktopInventoryAdjustmentsPostRequestLinesInner) {
	o.Lines = v
}

func (o QuickbooksDesktopInventoryAdjustmentsPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QuickbooksDesktopInventoryAdjustmentsPostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["accountId"] = o.AccountId
	toSerialize["transactionDate"] = o.TransactionDate
	if !IsNil(o.RefNumber) {
		toSerialize["refNumber"] = o.RefNumber
	}
	if !IsNil(o.InventorySiteId) {
		toSerialize["inventorySiteId"] = o.InventorySiteId
	}
	if !IsNil(o.CustomerId) {
		toSerialize["customerId"] = o.CustomerId
	}
	if !IsNil(o.ClassId) {
		toSerialize["classId"] = o.ClassId
	}
	if !IsNil(o.Memo) {
		toSerialize["memo"] = o.Memo
	}
	if !IsNil(o.ExternalId) {
		toSerialize["externalId"] = o.ExternalId
	}
	if !IsNil(o.Lines) {
		toSerialize["lines"] = o.Lines
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *QuickbooksDesktopInventoryAdjustmentsPostRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"accountId",
		"transactionDate",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varQuickbooksDesktopInventoryAdjustmentsPostRequest := _QuickbooksDesktopInventoryAdjustmentsPostRequest{}

	err = json.Unmarshal(data, &varQuickbooksDesktopInventoryAdjustmentsPostRequest)

	if err != nil {
		return err
	}

	*o = QuickbooksDesktopInventoryAdjustmentsPostRequest(varQuickbooksDesktopInventoryAdjustmentsPostRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "accountId")
		delete(additionalProperties, "transactionDate")
		delete(additionalProperties, "refNumber")
		delete(additionalProperties, "inventorySiteId")
		delete(additionalProperties, "customerId")
		delete(additionalProperties, "classId")
		delete(additionalProperties, "memo")
		delete(additionalProperties, "externalId")
		delete(additionalProperties, "lines")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableQuickbooksDesktopInventoryAdjustmentsPostRequest struct {
	value *QuickbooksDesktopInventoryAdjustmentsPostRequest
	isSet bool
}

func (v NullableQuickbooksDesktopInventoryAdjustmentsPostRequest) Get() *QuickbooksDesktopInventoryAdjustmentsPostRequest {
	return v.value
}

func (v *NullableQuickbooksDesktopInventoryAdjustmentsPostRequest) Set(val *QuickbooksDesktopInventoryAdjustmentsPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableQuickbooksDesktopInventoryAdjustmentsPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableQuickbooksDesktopInventoryAdjustmentsPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQuickbooksDesktopInventoryAdjustmentsPostRequest(val *QuickbooksDesktopInventoryAdjustmentsPostRequest) *NullableQuickbooksDesktopInventoryAdjustmentsPostRequest {
	return &NullableQuickbooksDesktopInventoryAdjustmentsPostRequest{value: val, isSet: true}
}

func (v NullableQuickbooksDesktopInventoryAdjustmentsPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQuickbooksDesktopInventoryAdjustmentsPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


