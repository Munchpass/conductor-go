/*
Conductor API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package conductor

import (
	"encoding/json"
	"fmt"
	"gopkg.in/validator.v2"
)

// QbdEmployeeEmergencyContact - The employee's emergency contacts.
type QbdEmployeeEmergencyContact struct {
	QbdEmergencyContactSet *QbdEmergencyContactSet
}

// QbdEmergencyContactSetAsQbdEmployeeEmergencyContact is a convenience function that returns QbdEmergencyContactSet wrapped in QbdEmployeeEmergencyContact
func QbdEmergencyContactSetAsQbdEmployeeEmergencyContact(v *QbdEmergencyContactSet) QbdEmployeeEmergencyContact {
	return QbdEmployeeEmergencyContact{
		QbdEmergencyContactSet: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *QbdEmployeeEmergencyContact) UnmarshalJSON(data []byte) error {
	var err error
	// this object is nullable so check if the payload is null or empty string
	if string(data) == "" || string(data) == "{}" {
		return nil
	}

	match := 0
	// try to unmarshal data into QbdEmergencyContactSet
	err = newStrictDecoder(data).Decode(&dst.QbdEmergencyContactSet)
	if err == nil {
		jsonQbdEmergencyContactSet, _ := json.Marshal(dst.QbdEmergencyContactSet)
		if string(jsonQbdEmergencyContactSet) == "{}" { // empty struct
			dst.QbdEmergencyContactSet = nil
		} else {
			if err = validator.Validate(dst.QbdEmergencyContactSet); err != nil {
				dst.QbdEmergencyContactSet = nil
			} else {
				match++
			}
		}
	} else {
		dst.QbdEmergencyContactSet = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.QbdEmergencyContactSet = nil

		return fmt.Errorf("data matches more than one schema in oneOf(QbdEmployeeEmergencyContact)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(QbdEmployeeEmergencyContact)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src QbdEmployeeEmergencyContact) MarshalJSON() ([]byte, error) {
	if src.QbdEmergencyContactSet != nil {
		return json.Marshal(&src.QbdEmergencyContactSet)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *QbdEmployeeEmergencyContact) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.QbdEmergencyContactSet != nil {
		return obj.QbdEmergencyContactSet
	}

	// all schemas are nil
	return nil
}

// Get the actual instance value
func (obj QbdEmployeeEmergencyContact) GetActualInstanceValue() (interface{}) {
	if obj.QbdEmergencyContactSet != nil {
		return *obj.QbdEmergencyContactSet
	}

	// all schemas are nil
	return nil
}

type NullableQbdEmployeeEmergencyContact struct {
	value *QbdEmployeeEmergencyContact
	isSet bool
}

func (v NullableQbdEmployeeEmergencyContact) Get() *QbdEmployeeEmergencyContact {
	return v.value
}

func (v *NullableQbdEmployeeEmergencyContact) Set(val *QbdEmployeeEmergencyContact) {
	v.value = val
	v.isSet = true
}

func (v NullableQbdEmployeeEmergencyContact) IsSet() bool {
	return v.isSet
}

func (v *NullableQbdEmployeeEmergencyContact) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQbdEmployeeEmergencyContact(val *QbdEmployeeEmergencyContact) *NullableQbdEmployeeEmergencyContact {
	return &NullableQbdEmployeeEmergencyContact{value: val, isSet: true}
}

func (v NullableQbdEmployeeEmergencyContact) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQbdEmployeeEmergencyContact) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


