/*
Conductor API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package conductor

import (
	"encoding/json"
	"fmt"
)

// checks if the QbdPerItemPriceLevel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QbdPerItemPriceLevel{}

// QbdPerItemPriceLevel struct for QbdPerItemPriceLevel
type QbdPerItemPriceLevel struct {
	Item QbdPerItemPriceLevelItem `json:"item"`
	// The fixed amount custom price for this per-item price level that overrides the standard price for the specified item. Used when setting an absolute price value for the item in this price level.
	CustomPrice string `json:"customPrice"`
	// The fixed discount percentage for this per-item price level that modifies the specified item's standard price. Used to create a fixed percentage markup or discount specific to this item within this price level.
	CustomPricePercent string `json:"customPricePercent"`
	AdditionalProperties map[string]interface{}
}

type _QbdPerItemPriceLevel QbdPerItemPriceLevel

// NewQbdPerItemPriceLevel instantiates a new QbdPerItemPriceLevel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQbdPerItemPriceLevel(item QbdPerItemPriceLevelItem, customPrice string, customPricePercent string) *QbdPerItemPriceLevel {
	this := QbdPerItemPriceLevel{}
	this.Item = item
	this.CustomPrice = customPrice
	this.CustomPricePercent = customPricePercent
	return &this
}

// NewQbdPerItemPriceLevelWithDefaults instantiates a new QbdPerItemPriceLevel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQbdPerItemPriceLevelWithDefaults() *QbdPerItemPriceLevel {
	this := QbdPerItemPriceLevel{}
	return &this
}

// GetItem returns the Item field value
func (o *QbdPerItemPriceLevel) GetItem() QbdPerItemPriceLevelItem {
	if o == nil {
		var ret QbdPerItemPriceLevelItem
		return ret
	}

	return o.Item
}

// GetItemOk returns a tuple with the Item field value
// and a boolean to check if the value has been set.
func (o *QbdPerItemPriceLevel) GetItemOk() (*QbdPerItemPriceLevelItem, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Item, true
}

// SetItem sets field value
func (o *QbdPerItemPriceLevel) SetItem(v QbdPerItemPriceLevelItem) {
	o.Item = v
}

// GetCustomPrice returns the CustomPrice field value
func (o *QbdPerItemPriceLevel) GetCustomPrice() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CustomPrice
}

// GetCustomPriceOk returns a tuple with the CustomPrice field value
// and a boolean to check if the value has been set.
func (o *QbdPerItemPriceLevel) GetCustomPriceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CustomPrice, true
}

// SetCustomPrice sets field value
func (o *QbdPerItemPriceLevel) SetCustomPrice(v string) {
	o.CustomPrice = v
}

// GetCustomPricePercent returns the CustomPricePercent field value
func (o *QbdPerItemPriceLevel) GetCustomPricePercent() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CustomPricePercent
}

// GetCustomPricePercentOk returns a tuple with the CustomPricePercent field value
// and a boolean to check if the value has been set.
func (o *QbdPerItemPriceLevel) GetCustomPricePercentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CustomPricePercent, true
}

// SetCustomPricePercent sets field value
func (o *QbdPerItemPriceLevel) SetCustomPricePercent(v string) {
	o.CustomPricePercent = v
}

func (o QbdPerItemPriceLevel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QbdPerItemPriceLevel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["item"] = o.Item
	toSerialize["customPrice"] = o.CustomPrice
	toSerialize["customPricePercent"] = o.CustomPricePercent

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *QbdPerItemPriceLevel) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"item",
		"customPrice",
		"customPricePercent",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varQbdPerItemPriceLevel := _QbdPerItemPriceLevel{}

	err = json.Unmarshal(data, &varQbdPerItemPriceLevel)

	if err != nil {
		return err
	}

	*o = QbdPerItemPriceLevel(varQbdPerItemPriceLevel)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "item")
		delete(additionalProperties, "customPrice")
		delete(additionalProperties, "customPricePercent")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableQbdPerItemPriceLevel struct {
	value *QbdPerItemPriceLevel
	isSet bool
}

func (v NullableQbdPerItemPriceLevel) Get() *QbdPerItemPriceLevel {
	return v.value
}

func (v *NullableQbdPerItemPriceLevel) Set(val *QbdPerItemPriceLevel) {
	v.value = val
	v.isSet = true
}

func (v NullableQbdPerItemPriceLevel) IsSet() bool {
	return v.isSet
}

func (v *NullableQbdPerItemPriceLevel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQbdPerItemPriceLevel(val *QbdPerItemPriceLevel) *NullableQbdPerItemPriceLevel {
	return &NullableQbdPerItemPriceLevel{value: val, isSet: true}
}

func (v NullableQbdPerItemPriceLevel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQbdPerItemPriceLevel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


