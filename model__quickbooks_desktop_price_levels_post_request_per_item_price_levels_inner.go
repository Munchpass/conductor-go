/*
Conductor API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package conductor

import (
	"encoding/json"
	"fmt"
)

// checks if the QuickbooksDesktopPriceLevelsPostRequestPerItemPriceLevelsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QuickbooksDesktopPriceLevelsPostRequestPerItemPriceLevelsInner{}

// QuickbooksDesktopPriceLevelsPostRequestPerItemPriceLevelsInner struct for QuickbooksDesktopPriceLevelsPostRequestPerItemPriceLevelsInner
type QuickbooksDesktopPriceLevelsPostRequestPerItemPriceLevelsInner struct {
	// The item associated with this per-item price level. This can refer to any good or service that the business buys or sells, including item types such as a service item, inventory item, or special calculation item like a discount item or sales-tax item.
	ItemId *string `json:"itemId,omitempty"`
	// The fixed amount custom price for this per-item price level that overrides the standard price for the specified item. Used when setting an absolute price value for the item in this price level.
	CustomPrice *string `json:"customPrice,omitempty"`
	// The fixed discount percentage for this per-item price level that modifies the specified item's standard price. Used to create a fixed percentage markup or discount specific to this item within this price level.
	CustomPricePercent *string `json:"customPricePercent,omitempty"`
	// The percentage adjustment for this per-item price level when using relative pricing. Specifies a percentage to modify pricing, using positive values (e.g., \"20\") to increase prices by that percentage, or negative values (e.g., \"-10\") to apply a discount.
	AdjustPercentage string `json:"adjustPercentage"`
	// The base value reference for this per-item price level's percentage adjustment. Specifies which price to use as the starting point for the adjustment calculation in the price level.  **NOTE:** The price level must use either a fixed pricing approach (`customPrice` or `customPricePercent`) or a relative adjustment approach (`adjustPercentage` with `adjustRelativeTo`) when configuring per-item price levels.
	AdjustRelativeTo string `json:"adjustRelativeTo"`
	AdditionalProperties map[string]interface{}
}

type _QuickbooksDesktopPriceLevelsPostRequestPerItemPriceLevelsInner QuickbooksDesktopPriceLevelsPostRequestPerItemPriceLevelsInner

// NewQuickbooksDesktopPriceLevelsPostRequestPerItemPriceLevelsInner instantiates a new QuickbooksDesktopPriceLevelsPostRequestPerItemPriceLevelsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQuickbooksDesktopPriceLevelsPostRequestPerItemPriceLevelsInner(adjustPercentage string, adjustRelativeTo string) *QuickbooksDesktopPriceLevelsPostRequestPerItemPriceLevelsInner {
	this := QuickbooksDesktopPriceLevelsPostRequestPerItemPriceLevelsInner{}
	this.AdjustPercentage = adjustPercentage
	this.AdjustRelativeTo = adjustRelativeTo
	return &this
}

// NewQuickbooksDesktopPriceLevelsPostRequestPerItemPriceLevelsInnerWithDefaults instantiates a new QuickbooksDesktopPriceLevelsPostRequestPerItemPriceLevelsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQuickbooksDesktopPriceLevelsPostRequestPerItemPriceLevelsInnerWithDefaults() *QuickbooksDesktopPriceLevelsPostRequestPerItemPriceLevelsInner {
	this := QuickbooksDesktopPriceLevelsPostRequestPerItemPriceLevelsInner{}
	return &this
}

// GetItemId returns the ItemId field value if set, zero value otherwise.
func (o *QuickbooksDesktopPriceLevelsPostRequestPerItemPriceLevelsInner) GetItemId() string {
	if o == nil || IsNil(o.ItemId) {
		var ret string
		return ret
	}
	return *o.ItemId
}

// GetItemIdOk returns a tuple with the ItemId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopPriceLevelsPostRequestPerItemPriceLevelsInner) GetItemIdOk() (*string, bool) {
	if o == nil || IsNil(o.ItemId) {
		return nil, false
	}
	return o.ItemId, true
}

// HasItemId returns a boolean if a field has been set.
func (o *QuickbooksDesktopPriceLevelsPostRequestPerItemPriceLevelsInner) HasItemId() bool {
	if o != nil && !IsNil(o.ItemId) {
		return true
	}

	return false
}

// SetItemId gets a reference to the given string and assigns it to the ItemId field.
func (o *QuickbooksDesktopPriceLevelsPostRequestPerItemPriceLevelsInner) SetItemId(v string) {
	o.ItemId = &v
}

// GetCustomPrice returns the CustomPrice field value if set, zero value otherwise.
func (o *QuickbooksDesktopPriceLevelsPostRequestPerItemPriceLevelsInner) GetCustomPrice() string {
	if o == nil || IsNil(o.CustomPrice) {
		var ret string
		return ret
	}
	return *o.CustomPrice
}

// GetCustomPriceOk returns a tuple with the CustomPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopPriceLevelsPostRequestPerItemPriceLevelsInner) GetCustomPriceOk() (*string, bool) {
	if o == nil || IsNil(o.CustomPrice) {
		return nil, false
	}
	return o.CustomPrice, true
}

// HasCustomPrice returns a boolean if a field has been set.
func (o *QuickbooksDesktopPriceLevelsPostRequestPerItemPriceLevelsInner) HasCustomPrice() bool {
	if o != nil && !IsNil(o.CustomPrice) {
		return true
	}

	return false
}

// SetCustomPrice gets a reference to the given string and assigns it to the CustomPrice field.
func (o *QuickbooksDesktopPriceLevelsPostRequestPerItemPriceLevelsInner) SetCustomPrice(v string) {
	o.CustomPrice = &v
}

// GetCustomPricePercent returns the CustomPricePercent field value if set, zero value otherwise.
func (o *QuickbooksDesktopPriceLevelsPostRequestPerItemPriceLevelsInner) GetCustomPricePercent() string {
	if o == nil || IsNil(o.CustomPricePercent) {
		var ret string
		return ret
	}
	return *o.CustomPricePercent
}

// GetCustomPricePercentOk returns a tuple with the CustomPricePercent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopPriceLevelsPostRequestPerItemPriceLevelsInner) GetCustomPricePercentOk() (*string, bool) {
	if o == nil || IsNil(o.CustomPricePercent) {
		return nil, false
	}
	return o.CustomPricePercent, true
}

// HasCustomPricePercent returns a boolean if a field has been set.
func (o *QuickbooksDesktopPriceLevelsPostRequestPerItemPriceLevelsInner) HasCustomPricePercent() bool {
	if o != nil && !IsNil(o.CustomPricePercent) {
		return true
	}

	return false
}

// SetCustomPricePercent gets a reference to the given string and assigns it to the CustomPricePercent field.
func (o *QuickbooksDesktopPriceLevelsPostRequestPerItemPriceLevelsInner) SetCustomPricePercent(v string) {
	o.CustomPricePercent = &v
}

// GetAdjustPercentage returns the AdjustPercentage field value
func (o *QuickbooksDesktopPriceLevelsPostRequestPerItemPriceLevelsInner) GetAdjustPercentage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AdjustPercentage
}

// GetAdjustPercentageOk returns a tuple with the AdjustPercentage field value
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopPriceLevelsPostRequestPerItemPriceLevelsInner) GetAdjustPercentageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AdjustPercentage, true
}

// SetAdjustPercentage sets field value
func (o *QuickbooksDesktopPriceLevelsPostRequestPerItemPriceLevelsInner) SetAdjustPercentage(v string) {
	o.AdjustPercentage = v
}

// GetAdjustRelativeTo returns the AdjustRelativeTo field value
func (o *QuickbooksDesktopPriceLevelsPostRequestPerItemPriceLevelsInner) GetAdjustRelativeTo() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AdjustRelativeTo
}

// GetAdjustRelativeToOk returns a tuple with the AdjustRelativeTo field value
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopPriceLevelsPostRequestPerItemPriceLevelsInner) GetAdjustRelativeToOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AdjustRelativeTo, true
}

// SetAdjustRelativeTo sets field value
func (o *QuickbooksDesktopPriceLevelsPostRequestPerItemPriceLevelsInner) SetAdjustRelativeTo(v string) {
	o.AdjustRelativeTo = v
}

func (o QuickbooksDesktopPriceLevelsPostRequestPerItemPriceLevelsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QuickbooksDesktopPriceLevelsPostRequestPerItemPriceLevelsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ItemId) {
		toSerialize["itemId"] = o.ItemId
	}
	if !IsNil(o.CustomPrice) {
		toSerialize["customPrice"] = o.CustomPrice
	}
	if !IsNil(o.CustomPricePercent) {
		toSerialize["customPricePercent"] = o.CustomPricePercent
	}
	toSerialize["adjustPercentage"] = o.AdjustPercentage
	toSerialize["adjustRelativeTo"] = o.AdjustRelativeTo

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *QuickbooksDesktopPriceLevelsPostRequestPerItemPriceLevelsInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"adjustPercentage",
		"adjustRelativeTo",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varQuickbooksDesktopPriceLevelsPostRequestPerItemPriceLevelsInner := _QuickbooksDesktopPriceLevelsPostRequestPerItemPriceLevelsInner{}

	err = json.Unmarshal(data, &varQuickbooksDesktopPriceLevelsPostRequestPerItemPriceLevelsInner)

	if err != nil {
		return err
	}

	*o = QuickbooksDesktopPriceLevelsPostRequestPerItemPriceLevelsInner(varQuickbooksDesktopPriceLevelsPostRequestPerItemPriceLevelsInner)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "itemId")
		delete(additionalProperties, "customPrice")
		delete(additionalProperties, "customPricePercent")
		delete(additionalProperties, "adjustPercentage")
		delete(additionalProperties, "adjustRelativeTo")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableQuickbooksDesktopPriceLevelsPostRequestPerItemPriceLevelsInner struct {
	value *QuickbooksDesktopPriceLevelsPostRequestPerItemPriceLevelsInner
	isSet bool
}

func (v NullableQuickbooksDesktopPriceLevelsPostRequestPerItemPriceLevelsInner) Get() *QuickbooksDesktopPriceLevelsPostRequestPerItemPriceLevelsInner {
	return v.value
}

func (v *NullableQuickbooksDesktopPriceLevelsPostRequestPerItemPriceLevelsInner) Set(val *QuickbooksDesktopPriceLevelsPostRequestPerItemPriceLevelsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableQuickbooksDesktopPriceLevelsPostRequestPerItemPriceLevelsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableQuickbooksDesktopPriceLevelsPostRequestPerItemPriceLevelsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQuickbooksDesktopPriceLevelsPostRequestPerItemPriceLevelsInner(val *QuickbooksDesktopPriceLevelsPostRequestPerItemPriceLevelsInner) *NullableQuickbooksDesktopPriceLevelsPostRequestPerItemPriceLevelsInner {
	return &NullableQuickbooksDesktopPriceLevelsPostRequestPerItemPriceLevelsInner{value: val, isSet: true}
}

func (v NullableQuickbooksDesktopPriceLevelsPostRequestPerItemPriceLevelsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQuickbooksDesktopPriceLevelsPostRequestPerItemPriceLevelsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


