/*
Conductor API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package conductor

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the TheCurrentAppAccessRightsObject type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TheCurrentAppAccessRightsObject{}

// TheCurrentAppAccessRightsObject The current application access rights for this company file.
type TheCurrentAppAccessRightsObject struct {
	// Indicates whether applications can use auto-login to access this company file.
	IsAutomaticLoginAllowed bool `json:"isAutomaticLoginAllowed"`
	// If auto-login is allowed for this company file, specifies the user name that is allowed to use auto-login.
	AutomaticLoginUserName string `json:"automaticLoginUserName"`
	// Indicates whether access is allowed to personal (sensitive) data in this company file.
	IsPersonalDataAccessAllowed bool `json:"isPersonalDataAccessAllowed"`
}

type _TheCurrentAppAccessRightsObject TheCurrentAppAccessRightsObject

// NewTheCurrentAppAccessRightsObject instantiates a new TheCurrentAppAccessRightsObject object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTheCurrentAppAccessRightsObject(isAutomaticLoginAllowed bool, automaticLoginUserName string, isPersonalDataAccessAllowed bool) *TheCurrentAppAccessRightsObject {
	this := TheCurrentAppAccessRightsObject{}
	this.IsAutomaticLoginAllowed = isAutomaticLoginAllowed
	this.AutomaticLoginUserName = automaticLoginUserName
	this.IsPersonalDataAccessAllowed = isPersonalDataAccessAllowed
	return &this
}

// NewTheCurrentAppAccessRightsObjectWithDefaults instantiates a new TheCurrentAppAccessRightsObject object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTheCurrentAppAccessRightsObjectWithDefaults() *TheCurrentAppAccessRightsObject {
	this := TheCurrentAppAccessRightsObject{}
	return &this
}

// GetIsAutomaticLoginAllowed returns the IsAutomaticLoginAllowed field value
func (o *TheCurrentAppAccessRightsObject) GetIsAutomaticLoginAllowed() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsAutomaticLoginAllowed
}

// GetIsAutomaticLoginAllowedOk returns a tuple with the IsAutomaticLoginAllowed field value
// and a boolean to check if the value has been set.
func (o *TheCurrentAppAccessRightsObject) GetIsAutomaticLoginAllowedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsAutomaticLoginAllowed, true
}

// SetIsAutomaticLoginAllowed sets field value
func (o *TheCurrentAppAccessRightsObject) SetIsAutomaticLoginAllowed(v bool) {
	o.IsAutomaticLoginAllowed = v
}

// GetAutomaticLoginUserName returns the AutomaticLoginUserName field value
func (o *TheCurrentAppAccessRightsObject) GetAutomaticLoginUserName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AutomaticLoginUserName
}

// GetAutomaticLoginUserNameOk returns a tuple with the AutomaticLoginUserName field value
// and a boolean to check if the value has been set.
func (o *TheCurrentAppAccessRightsObject) GetAutomaticLoginUserNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AutomaticLoginUserName, true
}

// SetAutomaticLoginUserName sets field value
func (o *TheCurrentAppAccessRightsObject) SetAutomaticLoginUserName(v string) {
	o.AutomaticLoginUserName = v
}

// GetIsPersonalDataAccessAllowed returns the IsPersonalDataAccessAllowed field value
func (o *TheCurrentAppAccessRightsObject) GetIsPersonalDataAccessAllowed() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsPersonalDataAccessAllowed
}

// GetIsPersonalDataAccessAllowedOk returns a tuple with the IsPersonalDataAccessAllowed field value
// and a boolean to check if the value has been set.
func (o *TheCurrentAppAccessRightsObject) GetIsPersonalDataAccessAllowedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsPersonalDataAccessAllowed, true
}

// SetIsPersonalDataAccessAllowed sets field value
func (o *TheCurrentAppAccessRightsObject) SetIsPersonalDataAccessAllowed(v bool) {
	o.IsPersonalDataAccessAllowed = v
}

func (o TheCurrentAppAccessRightsObject) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TheCurrentAppAccessRightsObject) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["isAutomaticLoginAllowed"] = o.IsAutomaticLoginAllowed
	toSerialize["automaticLoginUserName"] = o.AutomaticLoginUserName
	toSerialize["isPersonalDataAccessAllowed"] = o.IsPersonalDataAccessAllowed
	return toSerialize, nil
}

func (o *TheCurrentAppAccessRightsObject) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"isAutomaticLoginAllowed",
		"automaticLoginUserName",
		"isPersonalDataAccessAllowed",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varTheCurrentAppAccessRightsObject := _TheCurrentAppAccessRightsObject{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varTheCurrentAppAccessRightsObject)

	if err != nil {
		return err
	}

	*o = TheCurrentAppAccessRightsObject(varTheCurrentAppAccessRightsObject)

	return err
}

type NullableTheCurrentAppAccessRightsObject struct {
	value *TheCurrentAppAccessRightsObject
	isSet bool
}

func (v NullableTheCurrentAppAccessRightsObject) Get() *TheCurrentAppAccessRightsObject {
	return v.value
}

func (v *NullableTheCurrentAppAccessRightsObject) Set(val *TheCurrentAppAccessRightsObject) {
	v.value = val
	v.isSet = true
}

func (v NullableTheCurrentAppAccessRightsObject) IsSet() bool {
	return v.isSet
}

func (v *NullableTheCurrentAppAccessRightsObject) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTheCurrentAppAccessRightsObject(val *TheCurrentAppAccessRightsObject) *NullableTheCurrentAppAccessRightsObject {
	return &NullableTheCurrentAppAccessRightsObject{value: val, isSet: true}
}

func (v NullableTheCurrentAppAccessRightsObject) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTheCurrentAppAccessRightsObject) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


