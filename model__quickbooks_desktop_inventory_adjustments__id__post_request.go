/*
Conductor API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package conductor

import (
	"encoding/json"
	"fmt"
)

// checks if the QuickbooksDesktopInventoryAdjustmentsIdPostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QuickbooksDesktopInventoryAdjustmentsIdPostRequest{}

// QuickbooksDesktopInventoryAdjustmentsIdPostRequest struct for QuickbooksDesktopInventoryAdjustmentsIdPostRequest
type QuickbooksDesktopInventoryAdjustmentsIdPostRequest struct {
	// The current QuickBooks-assigned revision number of the inventory adjustment object you are updating, which you can get by fetching the object first. Provide the most recent `revisionNumber` to ensure you're working with the latest data; otherwise, the update will return an error.
	RevisionNumber string `json:"revisionNumber"`
	// The account to which this inventory adjustment is posted for tracking inventory value changes.
	AccountId *string `json:"accountId,omitempty"`
	// The site location where inventory for the item associated with this inventory adjustment is stored.
	InventorySiteId *string `json:"inventorySiteId,omitempty"`
	// The date of this inventory adjustment, in ISO 8601 format (YYYY-MM-DD).
	TransactionDate *string `json:"transactionDate,omitempty"`
	// The case-sensitive user-defined reference number for this inventory adjustment, which can be used to identify the transaction in QuickBooks. This value is not required to be unique and can be arbitrarily changed by the QuickBooks user.
	RefNumber *string `json:"refNumber,omitempty"`
	// The customer or customer-job associated with this inventory adjustment.
	CustomerId *string `json:"customerId,omitempty"`
	// The inventory adjustment's class. Classes can be used to categorize objects into meaningful segments, such as department, location, or type of work. In QuickBooks, class tracking is off by default. A class defined here is automatically used in this inventory adjustment's line items unless overridden at the line item level.
	ClassId *string `json:"classId,omitempty"`
	// A memo or note for this inventory adjustment.
	Memo *string `json:"memo,omitempty"`
	// The inventory adjustment's item lines, each representing the adjustment of an inventory item's quantity, value, serial number, or lot number.  **IMPORTANT**:  1. Including this array in your update request will **REPLACE** all existing item lines for the inventory adjustment with this array. To keep any existing item lines, you must include them in this array even if they have not changed. **Any item lines not included will be removed.**  2. To add a new item line, include it here with the `id` field set to `-1`.  3. If you do not wish to modify any item lines, omit this field entirely to keep them unchanged.
	Lines []QuickbooksDesktopInventoryAdjustmentsIdPostRequestLinesInner `json:"lines,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _QuickbooksDesktopInventoryAdjustmentsIdPostRequest QuickbooksDesktopInventoryAdjustmentsIdPostRequest

// NewQuickbooksDesktopInventoryAdjustmentsIdPostRequest instantiates a new QuickbooksDesktopInventoryAdjustmentsIdPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQuickbooksDesktopInventoryAdjustmentsIdPostRequest(revisionNumber string) *QuickbooksDesktopInventoryAdjustmentsIdPostRequest {
	this := QuickbooksDesktopInventoryAdjustmentsIdPostRequest{}
	this.RevisionNumber = revisionNumber
	return &this
}

// NewQuickbooksDesktopInventoryAdjustmentsIdPostRequestWithDefaults instantiates a new QuickbooksDesktopInventoryAdjustmentsIdPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQuickbooksDesktopInventoryAdjustmentsIdPostRequestWithDefaults() *QuickbooksDesktopInventoryAdjustmentsIdPostRequest {
	this := QuickbooksDesktopInventoryAdjustmentsIdPostRequest{}
	return &this
}

// GetRevisionNumber returns the RevisionNumber field value
func (o *QuickbooksDesktopInventoryAdjustmentsIdPostRequest) GetRevisionNumber() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RevisionNumber
}

// GetRevisionNumberOk returns a tuple with the RevisionNumber field value
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopInventoryAdjustmentsIdPostRequest) GetRevisionNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RevisionNumber, true
}

// SetRevisionNumber sets field value
func (o *QuickbooksDesktopInventoryAdjustmentsIdPostRequest) SetRevisionNumber(v string) {
	o.RevisionNumber = v
}

// GetAccountId returns the AccountId field value if set, zero value otherwise.
func (o *QuickbooksDesktopInventoryAdjustmentsIdPostRequest) GetAccountId() string {
	if o == nil || IsNil(o.AccountId) {
		var ret string
		return ret
	}
	return *o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopInventoryAdjustmentsIdPostRequest) GetAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.AccountId) {
		return nil, false
	}
	return o.AccountId, true
}

// HasAccountId returns a boolean if a field has been set.
func (o *QuickbooksDesktopInventoryAdjustmentsIdPostRequest) HasAccountId() bool {
	if o != nil && !IsNil(o.AccountId) {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given string and assigns it to the AccountId field.
func (o *QuickbooksDesktopInventoryAdjustmentsIdPostRequest) SetAccountId(v string) {
	o.AccountId = &v
}

// GetInventorySiteId returns the InventorySiteId field value if set, zero value otherwise.
func (o *QuickbooksDesktopInventoryAdjustmentsIdPostRequest) GetInventorySiteId() string {
	if o == nil || IsNil(o.InventorySiteId) {
		var ret string
		return ret
	}
	return *o.InventorySiteId
}

// GetInventorySiteIdOk returns a tuple with the InventorySiteId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopInventoryAdjustmentsIdPostRequest) GetInventorySiteIdOk() (*string, bool) {
	if o == nil || IsNil(o.InventorySiteId) {
		return nil, false
	}
	return o.InventorySiteId, true
}

// HasInventorySiteId returns a boolean if a field has been set.
func (o *QuickbooksDesktopInventoryAdjustmentsIdPostRequest) HasInventorySiteId() bool {
	if o != nil && !IsNil(o.InventorySiteId) {
		return true
	}

	return false
}

// SetInventorySiteId gets a reference to the given string and assigns it to the InventorySiteId field.
func (o *QuickbooksDesktopInventoryAdjustmentsIdPostRequest) SetInventorySiteId(v string) {
	o.InventorySiteId = &v
}

// GetTransactionDate returns the TransactionDate field value if set, zero value otherwise.
func (o *QuickbooksDesktopInventoryAdjustmentsIdPostRequest) GetTransactionDate() string {
	if o == nil || IsNil(o.TransactionDate) {
		var ret string
		return ret
	}
	return *o.TransactionDate
}

// GetTransactionDateOk returns a tuple with the TransactionDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopInventoryAdjustmentsIdPostRequest) GetTransactionDateOk() (*string, bool) {
	if o == nil || IsNil(o.TransactionDate) {
		return nil, false
	}
	return o.TransactionDate, true
}

// HasTransactionDate returns a boolean if a field has been set.
func (o *QuickbooksDesktopInventoryAdjustmentsIdPostRequest) HasTransactionDate() bool {
	if o != nil && !IsNil(o.TransactionDate) {
		return true
	}

	return false
}

// SetTransactionDate gets a reference to the given string and assigns it to the TransactionDate field.
func (o *QuickbooksDesktopInventoryAdjustmentsIdPostRequest) SetTransactionDate(v string) {
	o.TransactionDate = &v
}

// GetRefNumber returns the RefNumber field value if set, zero value otherwise.
func (o *QuickbooksDesktopInventoryAdjustmentsIdPostRequest) GetRefNumber() string {
	if o == nil || IsNil(o.RefNumber) {
		var ret string
		return ret
	}
	return *o.RefNumber
}

// GetRefNumberOk returns a tuple with the RefNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopInventoryAdjustmentsIdPostRequest) GetRefNumberOk() (*string, bool) {
	if o == nil || IsNil(o.RefNumber) {
		return nil, false
	}
	return o.RefNumber, true
}

// HasRefNumber returns a boolean if a field has been set.
func (o *QuickbooksDesktopInventoryAdjustmentsIdPostRequest) HasRefNumber() bool {
	if o != nil && !IsNil(o.RefNumber) {
		return true
	}

	return false
}

// SetRefNumber gets a reference to the given string and assigns it to the RefNumber field.
func (o *QuickbooksDesktopInventoryAdjustmentsIdPostRequest) SetRefNumber(v string) {
	o.RefNumber = &v
}

// GetCustomerId returns the CustomerId field value if set, zero value otherwise.
func (o *QuickbooksDesktopInventoryAdjustmentsIdPostRequest) GetCustomerId() string {
	if o == nil || IsNil(o.CustomerId) {
		var ret string
		return ret
	}
	return *o.CustomerId
}

// GetCustomerIdOk returns a tuple with the CustomerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopInventoryAdjustmentsIdPostRequest) GetCustomerIdOk() (*string, bool) {
	if o == nil || IsNil(o.CustomerId) {
		return nil, false
	}
	return o.CustomerId, true
}

// HasCustomerId returns a boolean if a field has been set.
func (o *QuickbooksDesktopInventoryAdjustmentsIdPostRequest) HasCustomerId() bool {
	if o != nil && !IsNil(o.CustomerId) {
		return true
	}

	return false
}

// SetCustomerId gets a reference to the given string and assigns it to the CustomerId field.
func (o *QuickbooksDesktopInventoryAdjustmentsIdPostRequest) SetCustomerId(v string) {
	o.CustomerId = &v
}

// GetClassId returns the ClassId field value if set, zero value otherwise.
func (o *QuickbooksDesktopInventoryAdjustmentsIdPostRequest) GetClassId() string {
	if o == nil || IsNil(o.ClassId) {
		var ret string
		return ret
	}
	return *o.ClassId
}

// GetClassIdOk returns a tuple with the ClassId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopInventoryAdjustmentsIdPostRequest) GetClassIdOk() (*string, bool) {
	if o == nil || IsNil(o.ClassId) {
		return nil, false
	}
	return o.ClassId, true
}

// HasClassId returns a boolean if a field has been set.
func (o *QuickbooksDesktopInventoryAdjustmentsIdPostRequest) HasClassId() bool {
	if o != nil && !IsNil(o.ClassId) {
		return true
	}

	return false
}

// SetClassId gets a reference to the given string and assigns it to the ClassId field.
func (o *QuickbooksDesktopInventoryAdjustmentsIdPostRequest) SetClassId(v string) {
	o.ClassId = &v
}

// GetMemo returns the Memo field value if set, zero value otherwise.
func (o *QuickbooksDesktopInventoryAdjustmentsIdPostRequest) GetMemo() string {
	if o == nil || IsNil(o.Memo) {
		var ret string
		return ret
	}
	return *o.Memo
}

// GetMemoOk returns a tuple with the Memo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopInventoryAdjustmentsIdPostRequest) GetMemoOk() (*string, bool) {
	if o == nil || IsNil(o.Memo) {
		return nil, false
	}
	return o.Memo, true
}

// HasMemo returns a boolean if a field has been set.
func (o *QuickbooksDesktopInventoryAdjustmentsIdPostRequest) HasMemo() bool {
	if o != nil && !IsNil(o.Memo) {
		return true
	}

	return false
}

// SetMemo gets a reference to the given string and assigns it to the Memo field.
func (o *QuickbooksDesktopInventoryAdjustmentsIdPostRequest) SetMemo(v string) {
	o.Memo = &v
}

// GetLines returns the Lines field value if set, zero value otherwise.
func (o *QuickbooksDesktopInventoryAdjustmentsIdPostRequest) GetLines() []QuickbooksDesktopInventoryAdjustmentsIdPostRequestLinesInner {
	if o == nil || IsNil(o.Lines) {
		var ret []QuickbooksDesktopInventoryAdjustmentsIdPostRequestLinesInner
		return ret
	}
	return o.Lines
}

// GetLinesOk returns a tuple with the Lines field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopInventoryAdjustmentsIdPostRequest) GetLinesOk() ([]QuickbooksDesktopInventoryAdjustmentsIdPostRequestLinesInner, bool) {
	if o == nil || IsNil(o.Lines) {
		return nil, false
	}
	return o.Lines, true
}

// HasLines returns a boolean if a field has been set.
func (o *QuickbooksDesktopInventoryAdjustmentsIdPostRequest) HasLines() bool {
	if o != nil && !IsNil(o.Lines) {
		return true
	}

	return false
}

// SetLines gets a reference to the given []QuickbooksDesktopInventoryAdjustmentsIdPostRequestLinesInner and assigns it to the Lines field.
func (o *QuickbooksDesktopInventoryAdjustmentsIdPostRequest) SetLines(v []QuickbooksDesktopInventoryAdjustmentsIdPostRequestLinesInner) {
	o.Lines = v
}

func (o QuickbooksDesktopInventoryAdjustmentsIdPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QuickbooksDesktopInventoryAdjustmentsIdPostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["revisionNumber"] = o.RevisionNumber
	if !IsNil(o.AccountId) {
		toSerialize["accountId"] = o.AccountId
	}
	if !IsNil(o.InventorySiteId) {
		toSerialize["inventorySiteId"] = o.InventorySiteId
	}
	if !IsNil(o.TransactionDate) {
		toSerialize["transactionDate"] = o.TransactionDate
	}
	if !IsNil(o.RefNumber) {
		toSerialize["refNumber"] = o.RefNumber
	}
	if !IsNil(o.CustomerId) {
		toSerialize["customerId"] = o.CustomerId
	}
	if !IsNil(o.ClassId) {
		toSerialize["classId"] = o.ClassId
	}
	if !IsNil(o.Memo) {
		toSerialize["memo"] = o.Memo
	}
	if !IsNil(o.Lines) {
		toSerialize["lines"] = o.Lines
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *QuickbooksDesktopInventoryAdjustmentsIdPostRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"revisionNumber",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varQuickbooksDesktopInventoryAdjustmentsIdPostRequest := _QuickbooksDesktopInventoryAdjustmentsIdPostRequest{}

	err = json.Unmarshal(data, &varQuickbooksDesktopInventoryAdjustmentsIdPostRequest)

	if err != nil {
		return err
	}

	*o = QuickbooksDesktopInventoryAdjustmentsIdPostRequest(varQuickbooksDesktopInventoryAdjustmentsIdPostRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "revisionNumber")
		delete(additionalProperties, "accountId")
		delete(additionalProperties, "inventorySiteId")
		delete(additionalProperties, "transactionDate")
		delete(additionalProperties, "refNumber")
		delete(additionalProperties, "customerId")
		delete(additionalProperties, "classId")
		delete(additionalProperties, "memo")
		delete(additionalProperties, "lines")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableQuickbooksDesktopInventoryAdjustmentsIdPostRequest struct {
	value *QuickbooksDesktopInventoryAdjustmentsIdPostRequest
	isSet bool
}

func (v NullableQuickbooksDesktopInventoryAdjustmentsIdPostRequest) Get() *QuickbooksDesktopInventoryAdjustmentsIdPostRequest {
	return v.value
}

func (v *NullableQuickbooksDesktopInventoryAdjustmentsIdPostRequest) Set(val *QuickbooksDesktopInventoryAdjustmentsIdPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableQuickbooksDesktopInventoryAdjustmentsIdPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableQuickbooksDesktopInventoryAdjustmentsIdPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQuickbooksDesktopInventoryAdjustmentsIdPostRequest(val *QuickbooksDesktopInventoryAdjustmentsIdPostRequest) *NullableQuickbooksDesktopInventoryAdjustmentsIdPostRequest {
	return &NullableQuickbooksDesktopInventoryAdjustmentsIdPostRequest{value: val, isSet: true}
}

func (v NullableQuickbooksDesktopInventoryAdjustmentsIdPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQuickbooksDesktopInventoryAdjustmentsIdPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


