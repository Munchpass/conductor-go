/*
Conductor API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package conductor

import (
	"encoding/json"
	"fmt"
)

// checks if the QuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionResponse{}

// QuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionResponse The transaction response data for this credit card transaction when using QuickBooks Merchant Services (QBMS).
type QuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionResponse struct {
	// The status code returned in the original QBMS transaction response for this credit card transaction.
	StatusCode float32 `json:"statusCode"`
	// The status message returned in the original QBMS transaction response for this credit card transaction.
	StatusMessage string `json:"statusMessage"`
	// The ID returned from the credit card processor for this credit card transaction.
	CreditCardTransactionId string `json:"creditCardTransactionId"`
	// The QBMS account number of the merchant who is running this transaction using the customer's credit card.
	MerchantAccountNumber string `json:"merchantAccountNumber"`
	// The authorization code returned from the credit card processor to indicate that this charge will be paid by the card issuer.
	AuthorizationCode *string `json:"authorizationCode,omitempty"`
	// Indicates whether the street address supplied in the transaction request matches the customer's address on file at the card issuer.
	AvsStreetStatus *string `json:"avsStreetStatus,omitempty"`
	// Indicates whether the customer postal ZIP code supplied in the transaction request matches the customer's postal code recognized at the card issuer.
	AvsZipStatus *string `json:"avsZipStatus,omitempty"`
	// Indicates whether the card security code supplied in the transaction request matches the card security code recognized for that credit card number at the card issuer.
	CardSecurityCodeMatch *string `json:"cardSecurityCodeMatch,omitempty"`
	// An internal ID returned by QuickBooks Merchant Services (QBMS) from the transaction request, needed for the QuickBooks reconciliation feature.
	ReconBatchId *string `json:"reconBatchId,omitempty"`
	// An internal code returned by QuickBooks Merchant Services (QBMS) from the transaction request, needed for the QuickBooks reconciliation feature.
	PaymentGroupingCode *float32 `json:"paymentGroupingCode,omitempty"`
	// Indicates whether this credit card transaction is known to have been successfully processed by the card issuer.
	PaymentStatus string `json:"paymentStatus"`
	// The date and time when the credit card processor authorized this credit card transaction.
	TransactionAuthorizedAt string `json:"transactionAuthorizedAt"`
	// An internal value for this credit card transaction, needed for the QuickBooks reconciliation feature.
	TransactionAuthorizationStamp *float32 `json:"transactionAuthorizationStamp,omitempty"`
	// A value returned from QBMS transactions for future use by the QuickBooks Reconciliation feature.
	ClientTransactionId *string `json:"clientTransactionId,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _QuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionResponse QuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionResponse

// NewQuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionResponse instantiates a new QuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionResponse(statusCode float32, statusMessage string, creditCardTransactionId string, merchantAccountNumber string, paymentStatus string, transactionAuthorizedAt string) *QuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionResponse {
	this := QuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionResponse{}
	this.StatusCode = statusCode
	this.StatusMessage = statusMessage
	this.CreditCardTransactionId = creditCardTransactionId
	this.MerchantAccountNumber = merchantAccountNumber
	this.PaymentStatus = paymentStatus
	this.TransactionAuthorizedAt = transactionAuthorizedAt
	return &this
}

// NewQuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionResponseWithDefaults instantiates a new QuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionResponseWithDefaults() *QuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionResponse {
	this := QuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionResponse{}
	return &this
}

// GetStatusCode returns the StatusCode field value
func (o *QuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionResponse) GetStatusCode() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.StatusCode
}

// GetStatusCodeOk returns a tuple with the StatusCode field value
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionResponse) GetStatusCodeOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StatusCode, true
}

// SetStatusCode sets field value
func (o *QuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionResponse) SetStatusCode(v float32) {
	o.StatusCode = v
}

// GetStatusMessage returns the StatusMessage field value
func (o *QuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionResponse) GetStatusMessage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.StatusMessage
}

// GetStatusMessageOk returns a tuple with the StatusMessage field value
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionResponse) GetStatusMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StatusMessage, true
}

// SetStatusMessage sets field value
func (o *QuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionResponse) SetStatusMessage(v string) {
	o.StatusMessage = v
}

// GetCreditCardTransactionId returns the CreditCardTransactionId field value
func (o *QuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionResponse) GetCreditCardTransactionId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreditCardTransactionId
}

// GetCreditCardTransactionIdOk returns a tuple with the CreditCardTransactionId field value
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionResponse) GetCreditCardTransactionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreditCardTransactionId, true
}

// SetCreditCardTransactionId sets field value
func (o *QuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionResponse) SetCreditCardTransactionId(v string) {
	o.CreditCardTransactionId = v
}

// GetMerchantAccountNumber returns the MerchantAccountNumber field value
func (o *QuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionResponse) GetMerchantAccountNumber() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MerchantAccountNumber
}

// GetMerchantAccountNumberOk returns a tuple with the MerchantAccountNumber field value
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionResponse) GetMerchantAccountNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MerchantAccountNumber, true
}

// SetMerchantAccountNumber sets field value
func (o *QuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionResponse) SetMerchantAccountNumber(v string) {
	o.MerchantAccountNumber = v
}

// GetAuthorizationCode returns the AuthorizationCode field value if set, zero value otherwise.
func (o *QuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionResponse) GetAuthorizationCode() string {
	if o == nil || IsNil(o.AuthorizationCode) {
		var ret string
		return ret
	}
	return *o.AuthorizationCode
}

// GetAuthorizationCodeOk returns a tuple with the AuthorizationCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionResponse) GetAuthorizationCodeOk() (*string, bool) {
	if o == nil || IsNil(o.AuthorizationCode) {
		return nil, false
	}
	return o.AuthorizationCode, true
}

// HasAuthorizationCode returns a boolean if a field has been set.
func (o *QuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionResponse) HasAuthorizationCode() bool {
	if o != nil && !IsNil(o.AuthorizationCode) {
		return true
	}

	return false
}

// SetAuthorizationCode gets a reference to the given string and assigns it to the AuthorizationCode field.
func (o *QuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionResponse) SetAuthorizationCode(v string) {
	o.AuthorizationCode = &v
}

// GetAvsStreetStatus returns the AvsStreetStatus field value if set, zero value otherwise.
func (o *QuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionResponse) GetAvsStreetStatus() string {
	if o == nil || IsNil(o.AvsStreetStatus) {
		var ret string
		return ret
	}
	return *o.AvsStreetStatus
}

// GetAvsStreetStatusOk returns a tuple with the AvsStreetStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionResponse) GetAvsStreetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.AvsStreetStatus) {
		return nil, false
	}
	return o.AvsStreetStatus, true
}

// HasAvsStreetStatus returns a boolean if a field has been set.
func (o *QuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionResponse) HasAvsStreetStatus() bool {
	if o != nil && !IsNil(o.AvsStreetStatus) {
		return true
	}

	return false
}

// SetAvsStreetStatus gets a reference to the given string and assigns it to the AvsStreetStatus field.
func (o *QuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionResponse) SetAvsStreetStatus(v string) {
	o.AvsStreetStatus = &v
}

// GetAvsZipStatus returns the AvsZipStatus field value if set, zero value otherwise.
func (o *QuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionResponse) GetAvsZipStatus() string {
	if o == nil || IsNil(o.AvsZipStatus) {
		var ret string
		return ret
	}
	return *o.AvsZipStatus
}

// GetAvsZipStatusOk returns a tuple with the AvsZipStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionResponse) GetAvsZipStatusOk() (*string, bool) {
	if o == nil || IsNil(o.AvsZipStatus) {
		return nil, false
	}
	return o.AvsZipStatus, true
}

// HasAvsZipStatus returns a boolean if a field has been set.
func (o *QuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionResponse) HasAvsZipStatus() bool {
	if o != nil && !IsNil(o.AvsZipStatus) {
		return true
	}

	return false
}

// SetAvsZipStatus gets a reference to the given string and assigns it to the AvsZipStatus field.
func (o *QuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionResponse) SetAvsZipStatus(v string) {
	o.AvsZipStatus = &v
}

// GetCardSecurityCodeMatch returns the CardSecurityCodeMatch field value if set, zero value otherwise.
func (o *QuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionResponse) GetCardSecurityCodeMatch() string {
	if o == nil || IsNil(o.CardSecurityCodeMatch) {
		var ret string
		return ret
	}
	return *o.CardSecurityCodeMatch
}

// GetCardSecurityCodeMatchOk returns a tuple with the CardSecurityCodeMatch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionResponse) GetCardSecurityCodeMatchOk() (*string, bool) {
	if o == nil || IsNil(o.CardSecurityCodeMatch) {
		return nil, false
	}
	return o.CardSecurityCodeMatch, true
}

// HasCardSecurityCodeMatch returns a boolean if a field has been set.
func (o *QuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionResponse) HasCardSecurityCodeMatch() bool {
	if o != nil && !IsNil(o.CardSecurityCodeMatch) {
		return true
	}

	return false
}

// SetCardSecurityCodeMatch gets a reference to the given string and assigns it to the CardSecurityCodeMatch field.
func (o *QuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionResponse) SetCardSecurityCodeMatch(v string) {
	o.CardSecurityCodeMatch = &v
}

// GetReconBatchId returns the ReconBatchId field value if set, zero value otherwise.
func (o *QuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionResponse) GetReconBatchId() string {
	if o == nil || IsNil(o.ReconBatchId) {
		var ret string
		return ret
	}
	return *o.ReconBatchId
}

// GetReconBatchIdOk returns a tuple with the ReconBatchId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionResponse) GetReconBatchIdOk() (*string, bool) {
	if o == nil || IsNil(o.ReconBatchId) {
		return nil, false
	}
	return o.ReconBatchId, true
}

// HasReconBatchId returns a boolean if a field has been set.
func (o *QuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionResponse) HasReconBatchId() bool {
	if o != nil && !IsNil(o.ReconBatchId) {
		return true
	}

	return false
}

// SetReconBatchId gets a reference to the given string and assigns it to the ReconBatchId field.
func (o *QuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionResponse) SetReconBatchId(v string) {
	o.ReconBatchId = &v
}

// GetPaymentGroupingCode returns the PaymentGroupingCode field value if set, zero value otherwise.
func (o *QuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionResponse) GetPaymentGroupingCode() float32 {
	if o == nil || IsNil(o.PaymentGroupingCode) {
		var ret float32
		return ret
	}
	return *o.PaymentGroupingCode
}

// GetPaymentGroupingCodeOk returns a tuple with the PaymentGroupingCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionResponse) GetPaymentGroupingCodeOk() (*float32, bool) {
	if o == nil || IsNil(o.PaymentGroupingCode) {
		return nil, false
	}
	return o.PaymentGroupingCode, true
}

// HasPaymentGroupingCode returns a boolean if a field has been set.
func (o *QuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionResponse) HasPaymentGroupingCode() bool {
	if o != nil && !IsNil(o.PaymentGroupingCode) {
		return true
	}

	return false
}

// SetPaymentGroupingCode gets a reference to the given float32 and assigns it to the PaymentGroupingCode field.
func (o *QuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionResponse) SetPaymentGroupingCode(v float32) {
	o.PaymentGroupingCode = &v
}

// GetPaymentStatus returns the PaymentStatus field value
func (o *QuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionResponse) GetPaymentStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PaymentStatus
}

// GetPaymentStatusOk returns a tuple with the PaymentStatus field value
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionResponse) GetPaymentStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PaymentStatus, true
}

// SetPaymentStatus sets field value
func (o *QuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionResponse) SetPaymentStatus(v string) {
	o.PaymentStatus = v
}

// GetTransactionAuthorizedAt returns the TransactionAuthorizedAt field value
func (o *QuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionResponse) GetTransactionAuthorizedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TransactionAuthorizedAt
}

// GetTransactionAuthorizedAtOk returns a tuple with the TransactionAuthorizedAt field value
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionResponse) GetTransactionAuthorizedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TransactionAuthorizedAt, true
}

// SetTransactionAuthorizedAt sets field value
func (o *QuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionResponse) SetTransactionAuthorizedAt(v string) {
	o.TransactionAuthorizedAt = v
}

// GetTransactionAuthorizationStamp returns the TransactionAuthorizationStamp field value if set, zero value otherwise.
func (o *QuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionResponse) GetTransactionAuthorizationStamp() float32 {
	if o == nil || IsNil(o.TransactionAuthorizationStamp) {
		var ret float32
		return ret
	}
	return *o.TransactionAuthorizationStamp
}

// GetTransactionAuthorizationStampOk returns a tuple with the TransactionAuthorizationStamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionResponse) GetTransactionAuthorizationStampOk() (*float32, bool) {
	if o == nil || IsNil(o.TransactionAuthorizationStamp) {
		return nil, false
	}
	return o.TransactionAuthorizationStamp, true
}

// HasTransactionAuthorizationStamp returns a boolean if a field has been set.
func (o *QuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionResponse) HasTransactionAuthorizationStamp() bool {
	if o != nil && !IsNil(o.TransactionAuthorizationStamp) {
		return true
	}

	return false
}

// SetTransactionAuthorizationStamp gets a reference to the given float32 and assigns it to the TransactionAuthorizationStamp field.
func (o *QuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionResponse) SetTransactionAuthorizationStamp(v float32) {
	o.TransactionAuthorizationStamp = &v
}

// GetClientTransactionId returns the ClientTransactionId field value if set, zero value otherwise.
func (o *QuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionResponse) GetClientTransactionId() string {
	if o == nil || IsNil(o.ClientTransactionId) {
		var ret string
		return ret
	}
	return *o.ClientTransactionId
}

// GetClientTransactionIdOk returns a tuple with the ClientTransactionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionResponse) GetClientTransactionIdOk() (*string, bool) {
	if o == nil || IsNil(o.ClientTransactionId) {
		return nil, false
	}
	return o.ClientTransactionId, true
}

// HasClientTransactionId returns a boolean if a field has been set.
func (o *QuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionResponse) HasClientTransactionId() bool {
	if o != nil && !IsNil(o.ClientTransactionId) {
		return true
	}

	return false
}

// SetClientTransactionId gets a reference to the given string and assigns it to the ClientTransactionId field.
func (o *QuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionResponse) SetClientTransactionId(v string) {
	o.ClientTransactionId = &v
}

func (o QuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["statusCode"] = o.StatusCode
	toSerialize["statusMessage"] = o.StatusMessage
	toSerialize["creditCardTransactionId"] = o.CreditCardTransactionId
	toSerialize["merchantAccountNumber"] = o.MerchantAccountNumber
	if !IsNil(o.AuthorizationCode) {
		toSerialize["authorizationCode"] = o.AuthorizationCode
	}
	if !IsNil(o.AvsStreetStatus) {
		toSerialize["avsStreetStatus"] = o.AvsStreetStatus
	}
	if !IsNil(o.AvsZipStatus) {
		toSerialize["avsZipStatus"] = o.AvsZipStatus
	}
	if !IsNil(o.CardSecurityCodeMatch) {
		toSerialize["cardSecurityCodeMatch"] = o.CardSecurityCodeMatch
	}
	if !IsNil(o.ReconBatchId) {
		toSerialize["reconBatchId"] = o.ReconBatchId
	}
	if !IsNil(o.PaymentGroupingCode) {
		toSerialize["paymentGroupingCode"] = o.PaymentGroupingCode
	}
	toSerialize["paymentStatus"] = o.PaymentStatus
	toSerialize["transactionAuthorizedAt"] = o.TransactionAuthorizedAt
	if !IsNil(o.TransactionAuthorizationStamp) {
		toSerialize["transactionAuthorizationStamp"] = o.TransactionAuthorizationStamp
	}
	if !IsNil(o.ClientTransactionId) {
		toSerialize["clientTransactionId"] = o.ClientTransactionId
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *QuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"statusCode",
		"statusMessage",
		"creditCardTransactionId",
		"merchantAccountNumber",
		"paymentStatus",
		"transactionAuthorizedAt",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varQuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionResponse := _QuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionResponse{}

	err = json.Unmarshal(data, &varQuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionResponse)

	if err != nil {
		return err
	}

	*o = QuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionResponse(varQuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionResponse)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "statusCode")
		delete(additionalProperties, "statusMessage")
		delete(additionalProperties, "creditCardTransactionId")
		delete(additionalProperties, "merchantAccountNumber")
		delete(additionalProperties, "authorizationCode")
		delete(additionalProperties, "avsStreetStatus")
		delete(additionalProperties, "avsZipStatus")
		delete(additionalProperties, "cardSecurityCodeMatch")
		delete(additionalProperties, "reconBatchId")
		delete(additionalProperties, "paymentGroupingCode")
		delete(additionalProperties, "paymentStatus")
		delete(additionalProperties, "transactionAuthorizedAt")
		delete(additionalProperties, "transactionAuthorizationStamp")
		delete(additionalProperties, "clientTransactionId")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableQuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionResponse struct {
	value *QuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionResponse
	isSet bool
}

func (v NullableQuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionResponse) Get() *QuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionResponse {
	return v.value
}

func (v *NullableQuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionResponse) Set(val *QuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableQuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableQuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionResponse(val *QuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionResponse) *NullableQuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionResponse {
	return &NullableQuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionResponse{value: val, isSet: true}
}

func (v NullableQuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


