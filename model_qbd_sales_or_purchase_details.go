/*
Conductor API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package conductor

import (
	"encoding/json"
	"fmt"
)

// checks if the QbdSalesOrPurchaseDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QbdSalesOrPurchaseDetails{}

// QbdSalesOrPurchaseDetails struct for QbdSalesOrPurchaseDetails
type QbdSalesOrPurchaseDetails struct {
	// A description of this item.
	Description string `json:"description"`
	// The price at which this item is purchased or sold, represented as a decimal string.
	Price string `json:"price"`
	// The price of this item expressed as a percentage, used instead of `price` when the item's cost is calculated as a percentage of another amount. For example, a service item that costs a percentage of another item's price.
	PricePercentage string `json:"pricePercentage"`
	PostingAccount QbdSalesOrPurchaseDetailsPostingAccount `json:"postingAccount"`
	AdditionalProperties map[string]interface{}
}

type _QbdSalesOrPurchaseDetails QbdSalesOrPurchaseDetails

// NewQbdSalesOrPurchaseDetails instantiates a new QbdSalesOrPurchaseDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQbdSalesOrPurchaseDetails(description string, price string, pricePercentage string, postingAccount QbdSalesOrPurchaseDetailsPostingAccount) *QbdSalesOrPurchaseDetails {
	this := QbdSalesOrPurchaseDetails{}
	this.Description = description
	this.Price = price
	this.PricePercentage = pricePercentage
	this.PostingAccount = postingAccount
	return &this
}

// NewQbdSalesOrPurchaseDetailsWithDefaults instantiates a new QbdSalesOrPurchaseDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQbdSalesOrPurchaseDetailsWithDefaults() *QbdSalesOrPurchaseDetails {
	this := QbdSalesOrPurchaseDetails{}
	return &this
}

// GetDescription returns the Description field value
func (o *QbdSalesOrPurchaseDetails) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *QbdSalesOrPurchaseDetails) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *QbdSalesOrPurchaseDetails) SetDescription(v string) {
	o.Description = v
}

// GetPrice returns the Price field value
func (o *QbdSalesOrPurchaseDetails) GetPrice() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Price
}

// GetPriceOk returns a tuple with the Price field value
// and a boolean to check if the value has been set.
func (o *QbdSalesOrPurchaseDetails) GetPriceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Price, true
}

// SetPrice sets field value
func (o *QbdSalesOrPurchaseDetails) SetPrice(v string) {
	o.Price = v
}

// GetPricePercentage returns the PricePercentage field value
func (o *QbdSalesOrPurchaseDetails) GetPricePercentage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PricePercentage
}

// GetPricePercentageOk returns a tuple with the PricePercentage field value
// and a boolean to check if the value has been set.
func (o *QbdSalesOrPurchaseDetails) GetPricePercentageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PricePercentage, true
}

// SetPricePercentage sets field value
func (o *QbdSalesOrPurchaseDetails) SetPricePercentage(v string) {
	o.PricePercentage = v
}

// GetPostingAccount returns the PostingAccount field value
func (o *QbdSalesOrPurchaseDetails) GetPostingAccount() QbdSalesOrPurchaseDetailsPostingAccount {
	if o == nil {
		var ret QbdSalesOrPurchaseDetailsPostingAccount
		return ret
	}

	return o.PostingAccount
}

// GetPostingAccountOk returns a tuple with the PostingAccount field value
// and a boolean to check if the value has been set.
func (o *QbdSalesOrPurchaseDetails) GetPostingAccountOk() (*QbdSalesOrPurchaseDetailsPostingAccount, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PostingAccount, true
}

// SetPostingAccount sets field value
func (o *QbdSalesOrPurchaseDetails) SetPostingAccount(v QbdSalesOrPurchaseDetailsPostingAccount) {
	o.PostingAccount = v
}

func (o QbdSalesOrPurchaseDetails) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QbdSalesOrPurchaseDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["description"] = o.Description
	toSerialize["price"] = o.Price
	toSerialize["pricePercentage"] = o.PricePercentage
	toSerialize["postingAccount"] = o.PostingAccount

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *QbdSalesOrPurchaseDetails) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"description",
		"price",
		"pricePercentage",
		"postingAccount",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varQbdSalesOrPurchaseDetails := _QbdSalesOrPurchaseDetails{}

	err = json.Unmarshal(data, &varQbdSalesOrPurchaseDetails)

	if err != nil {
		return err
	}

	*o = QbdSalesOrPurchaseDetails(varQbdSalesOrPurchaseDetails)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "description")
		delete(additionalProperties, "price")
		delete(additionalProperties, "pricePercentage")
		delete(additionalProperties, "postingAccount")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableQbdSalesOrPurchaseDetails struct {
	value *QbdSalesOrPurchaseDetails
	isSet bool
}

func (v NullableQbdSalesOrPurchaseDetails) Get() *QbdSalesOrPurchaseDetails {
	return v.value
}

func (v *NullableQbdSalesOrPurchaseDetails) Set(val *QbdSalesOrPurchaseDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableQbdSalesOrPurchaseDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableQbdSalesOrPurchaseDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQbdSalesOrPurchaseDetails(val *QbdSalesOrPurchaseDetails) *NullableQbdSalesOrPurchaseDetails {
	return &NullableQbdSalesOrPurchaseDetails{value: val, isSet: true}
}

func (v NullableQbdSalesOrPurchaseDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQbdSalesOrPurchaseDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


