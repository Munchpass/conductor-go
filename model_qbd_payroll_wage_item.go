/*
Conductor API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package conductor

import (
	"encoding/json"
	"fmt"
)

// checks if the QbdPayrollWageItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QbdPayrollWageItem{}

// QbdPayrollWageItem struct for QbdPayrollWageItem
type QbdPayrollWageItem struct {
	// The unique identifier assigned by QuickBooks to this payroll wage item. This ID is unique across all payroll wage items but not across different QuickBooks object types.
	Id string `json:"id"`
	// The type of object. This value is always `\"qbd_payroll_wage_item\"`.
	ObjectType string `json:"objectType"`
	// The date and time when this payroll wage item was created, in ISO 8601 format (YYYY-MM-DDThh:mm:ss±hh:mm). The time zone is the same as the user's time zone in QuickBooks.
	CreatedAt string `json:"createdAt"`
	// The date and time when this payroll wage item was last updated, in ISO 8601 format (YYYY-MM-DDThh:mm:ss±hh:mm). The time zone is the same as the user's time zone in QuickBooks.
	UpdatedAt string `json:"updatedAt"`
	// The current QuickBooks-assigned revision number of this payroll wage item object, which changes each time the object is modified. When updating this object, you must provide the most recent `revisionNumber` to ensure you're working with the latest data; otherwise, the update will return an error.
	RevisionNumber string `json:"revisionNumber"`
	// The case-insensitive unique name of this payroll wage item, unique across all payroll wage items.  **NOTE**: Payroll wage items do not have a `fullName` field because they are not hierarchical objects, which is why `name` is unique for them but not for objects that have parents.
	Name string `json:"name"`
	// Indicates whether this payroll wage item is active. Inactive objects are typically hidden from views and reports in QuickBooks. Defaults to `true`.
	IsActive bool `json:"isActive"`
	// Categorizes how this payroll wage item calculates pay - can be hourly (regular, overtime, sick, or vacation), salary (regular, sick, or vacation), bonus, or commission based.
	WageType string `json:"wageType"`
	ExpenseAccount QbdPayrollWageItemExpenseAccount `json:"expenseAccount"`
	AdditionalProperties map[string]interface{}
}

type _QbdPayrollWageItem QbdPayrollWageItem

// NewQbdPayrollWageItem instantiates a new QbdPayrollWageItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQbdPayrollWageItem(id string, objectType string, createdAt string, updatedAt string, revisionNumber string, name string, isActive bool, wageType string, expenseAccount QbdPayrollWageItemExpenseAccount) *QbdPayrollWageItem {
	this := QbdPayrollWageItem{}
	this.Id = id
	this.ObjectType = objectType
	this.CreatedAt = createdAt
	this.UpdatedAt = updatedAt
	this.RevisionNumber = revisionNumber
	this.Name = name
	this.IsActive = isActive
	this.WageType = wageType
	this.ExpenseAccount = expenseAccount
	return &this
}

// NewQbdPayrollWageItemWithDefaults instantiates a new QbdPayrollWageItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQbdPayrollWageItemWithDefaults() *QbdPayrollWageItem {
	this := QbdPayrollWageItem{}
	return &this
}

// GetId returns the Id field value
func (o *QbdPayrollWageItem) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *QbdPayrollWageItem) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *QbdPayrollWageItem) SetId(v string) {
	o.Id = v
}

// GetObjectType returns the ObjectType field value
func (o *QbdPayrollWageItem) GetObjectType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ObjectType
}

// GetObjectTypeOk returns a tuple with the ObjectType field value
// and a boolean to check if the value has been set.
func (o *QbdPayrollWageItem) GetObjectTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ObjectType, true
}

// SetObjectType sets field value
func (o *QbdPayrollWageItem) SetObjectType(v string) {
	o.ObjectType = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *QbdPayrollWageItem) GetCreatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *QbdPayrollWageItem) GetCreatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *QbdPayrollWageItem) SetCreatedAt(v string) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *QbdPayrollWageItem) GetUpdatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *QbdPayrollWageItem) GetUpdatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *QbdPayrollWageItem) SetUpdatedAt(v string) {
	o.UpdatedAt = v
}

// GetRevisionNumber returns the RevisionNumber field value
func (o *QbdPayrollWageItem) GetRevisionNumber() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RevisionNumber
}

// GetRevisionNumberOk returns a tuple with the RevisionNumber field value
// and a boolean to check if the value has been set.
func (o *QbdPayrollWageItem) GetRevisionNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RevisionNumber, true
}

// SetRevisionNumber sets field value
func (o *QbdPayrollWageItem) SetRevisionNumber(v string) {
	o.RevisionNumber = v
}

// GetName returns the Name field value
func (o *QbdPayrollWageItem) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *QbdPayrollWageItem) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *QbdPayrollWageItem) SetName(v string) {
	o.Name = v
}

// GetIsActive returns the IsActive field value
func (o *QbdPayrollWageItem) GetIsActive() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsActive
}

// GetIsActiveOk returns a tuple with the IsActive field value
// and a boolean to check if the value has been set.
func (o *QbdPayrollWageItem) GetIsActiveOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsActive, true
}

// SetIsActive sets field value
func (o *QbdPayrollWageItem) SetIsActive(v bool) {
	o.IsActive = v
}

// GetWageType returns the WageType field value
func (o *QbdPayrollWageItem) GetWageType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.WageType
}

// GetWageTypeOk returns a tuple with the WageType field value
// and a boolean to check if the value has been set.
func (o *QbdPayrollWageItem) GetWageTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WageType, true
}

// SetWageType sets field value
func (o *QbdPayrollWageItem) SetWageType(v string) {
	o.WageType = v
}

// GetExpenseAccount returns the ExpenseAccount field value
func (o *QbdPayrollWageItem) GetExpenseAccount() QbdPayrollWageItemExpenseAccount {
	if o == nil {
		var ret QbdPayrollWageItemExpenseAccount
		return ret
	}

	return o.ExpenseAccount
}

// GetExpenseAccountOk returns a tuple with the ExpenseAccount field value
// and a boolean to check if the value has been set.
func (o *QbdPayrollWageItem) GetExpenseAccountOk() (*QbdPayrollWageItemExpenseAccount, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExpenseAccount, true
}

// SetExpenseAccount sets field value
func (o *QbdPayrollWageItem) SetExpenseAccount(v QbdPayrollWageItemExpenseAccount) {
	o.ExpenseAccount = v
}

func (o QbdPayrollWageItem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QbdPayrollWageItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["objectType"] = o.ObjectType
	toSerialize["createdAt"] = o.CreatedAt
	toSerialize["updatedAt"] = o.UpdatedAt
	toSerialize["revisionNumber"] = o.RevisionNumber
	toSerialize["name"] = o.Name
	toSerialize["isActive"] = o.IsActive
	toSerialize["wageType"] = o.WageType
	toSerialize["expenseAccount"] = o.ExpenseAccount

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *QbdPayrollWageItem) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"objectType",
		"createdAt",
		"updatedAt",
		"revisionNumber",
		"name",
		"isActive",
		"wageType",
		"expenseAccount",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varQbdPayrollWageItem := _QbdPayrollWageItem{}

	err = json.Unmarshal(data, &varQbdPayrollWageItem)

	if err != nil {
		return err
	}

	*o = QbdPayrollWageItem(varQbdPayrollWageItem)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "objectType")
		delete(additionalProperties, "createdAt")
		delete(additionalProperties, "updatedAt")
		delete(additionalProperties, "revisionNumber")
		delete(additionalProperties, "name")
		delete(additionalProperties, "isActive")
		delete(additionalProperties, "wageType")
		delete(additionalProperties, "expenseAccount")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableQbdPayrollWageItem struct {
	value *QbdPayrollWageItem
	isSet bool
}

func (v NullableQbdPayrollWageItem) Get() *QbdPayrollWageItem {
	return v.value
}

func (v *NullableQbdPayrollWageItem) Set(val *QbdPayrollWageItem) {
	v.value = val
	v.isSet = true
}

func (v NullableQbdPayrollWageItem) IsSet() bool {
	return v.isSet
}

func (v *NullableQbdPayrollWageItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQbdPayrollWageItem(val *QbdPayrollWageItem) *NullableQbdPayrollWageItem {
	return &NullableQbdPayrollWageItem{value: val, isSet: true}
}

func (v NullableQbdPayrollWageItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQbdPayrollWageItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


