/*
Conductor API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package conductor

import (
	"encoding/json"
)

// checks if the QuickbooksDesktopEmployeesPostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QuickbooksDesktopEmployeesPostRequest{}

// QuickbooksDesktopEmployeesPostRequest struct for QuickbooksDesktopEmployeesPostRequest
type QuickbooksDesktopEmployeesPostRequest struct {
	// Indicates whether this employee is active. Inactive objects are typically hidden from views and reports in QuickBooks. Defaults to `true`.
	IsActive *bool `json:"isActive,omitempty"`
	// The employee's formal salutation title that precedes their name, such as \"Mr.\", \"Ms.\", or \"Dr.\".
	Salutation *string `json:"salutation,omitempty"`
	// The employee's first name.  Maximum length: 25 characters.
	FirstName *string `json:"firstName,omitempty"`
	// The employee's middle name.  Maximum length: 5 characters.
	MiddleName *string `json:"middleName,omitempty"`
	// The employee's last name.  Maximum length: 25 characters.
	LastName *string `json:"lastName,omitempty"`
	// The employee's job title.
	JobTitle *string `json:"jobTitle,omitempty"`
	// The employee's supervisor. Found in the \"employment job details\" section of the employee's record in QuickBooks.
	SupervisorId *string `json:"supervisorId,omitempty"`
	// The employee's department. Found in the \"employment job details\" section of the employee's record in QuickBooks.
	Department *string `json:"department,omitempty"`
	// A description of this employee. Found in the \"employment job details\" section of the employee's record in QuickBooks.
	Description *string `json:"description,omitempty"`
	// The target bonus for this employee, represented as a decimal string. Found in the \"employment job details\" section of the employee's record in QuickBooks.
	TargetBonus *string `json:"targetBonus,omitempty"`
	Address *QuickbooksDesktopEmployeesPostRequestAddress `json:"address,omitempty"`
	// The name to use when printing this employee from QuickBooks. By default, this is the same as the `name` field.
	PrintAs *string `json:"printAs,omitempty"`
	// The employee's primary telephone number.
	Phone *string `json:"phone,omitempty"`
	// The employee's mobile phone number.
	Mobile *string `json:"mobile,omitempty"`
	// The employee's pager number.
	Pager *string `json:"pager,omitempty"`
	// The employee's pager PIN.
	PagerPin *string `json:"pagerPin,omitempty"`
	// The employee's alternate telephone number.
	AlternatePhone *string `json:"alternatePhone,omitempty"`
	// The employee's fax number.
	Fax *string `json:"fax,omitempty"`
	// The employee's Social Security Number. The value can be with or without dashes.  **NOTE**: This field cannot be changed after the employee is created.
	Ssn *string `json:"ssn,omitempty"`
	// The employee's email address.
	Email *string `json:"email,omitempty"`
	// Additional custom contact fields for this employee, such as phone numbers or email addresses.
	CustomContactFields []QuickbooksDesktopCustomersPostRequestCustomContactFieldsInner `json:"customContactFields,omitempty"`
	EmergencyContact *QuickbooksDesktopEmployeesPostRequestEmergencyContact `json:"emergencyContact,omitempty"`
	// The employee type. This affects payroll taxes - a statutory employee is defined as an employee by statute. Note that owners/partners are typically on the \"Other Names\" list in QuickBooks, but if listed as an employee their type will be `owner`.
	EmployeeType *string `json:"employeeType,omitempty"`
	// Indicates whether this employee is a part-time or full-time employee.
	EmploymentStatus *string `json:"employmentStatus,omitempty"`
	// Indicates whether this employee is exempt from overtime pay. This classification is based on U.S. labor laws (FLSA). 
	OvertimeExemptStatus *string `json:"overtimeExemptStatus,omitempty"`
	// Indicates whether this employee is a key employee.
	KeyEmployeeStatus *string `json:"keyEmployeeStatus,omitempty"`
	// This employee's gender.
	Gender *string `json:"gender,omitempty"`
	// The date this employee was hired, in ISO 8601 format (YYYY-MM-DD).
	HiredDate *string `json:"hiredDate,omitempty"`
	// The original hire date for this employee, in ISO 8601 format (YYYY-MM-DD).
	OriginalHireDate *string `json:"originalHireDate,omitempty"`
	// The adjusted service date for this employee, in ISO 8601 format (YYYY-MM-DD). This date accounts for previous employment periods or leaves that affect seniority.
	AdjustedServiceDate *string `json:"adjustedServiceDate,omitempty"`
	// The date this employee's employment ended with the company, in ISO 8601 format (YYYY-MM-DD). This is also known as the released date or separation date.
	TerminationDate *string `json:"terminationDate,omitempty"`
	// This employee's date of birth, in ISO 8601 format (YYYY-MM-DD).
	BirthDate *string `json:"birthDate,omitempty"`
	// Indicates whether this employee is a U.S. citizen.
	UsCitizenshipStatus *string `json:"usCitizenshipStatus,omitempty"`
	// This employee's ethnicity.
	Ethnicity *string `json:"ethnicity,omitempty"`
	// Indicates whether this employee is disabled.
	DisabilityStatus *string `json:"disabilityStatus,omitempty"`
	// A description of this employee's disability.
	DisabilityDescription *string `json:"disabilityDescription,omitempty"`
	// Indicates whether this employee's I-9 is on file.
	I9OnFileStatus *string `json:"i9OnFileStatus,omitempty"`
	// The date this employee's work authorization expires, in ISO 8601 format (YYYY-MM-DD).
	WorkAuthorizationExpirationDate *string `json:"workAuthorizationExpirationDate,omitempty"`
	// Indicates whether this employee is a U.S. veteran.
	UsVeteranStatus *string `json:"usVeteranStatus,omitempty"`
	// This employee's military status if they are a U.S. veteran.
	MilitaryStatus *string `json:"militaryStatus,omitempty"`
	// The employee's account number, which appears in the QuickBooks chart of accounts, reports, and graphs.  Note that if the \"Use Account Numbers\" preference is turned off in QuickBooks, the account number may not be visible in the user interface, but it can still be set and retrieved through the API.
	AccountNumber *string `json:"accountNumber,omitempty"`
	// A note or comment about this employee.
	Note *string `json:"note,omitempty"`
	// Additional notes about this employee.
	AdditionalNotes []QuickbooksDesktopCustomersPostRequestAdditionalNotesInner `json:"additionalNotes,omitempty"`
	// The employee's billing rate, used to override service item rates in time tracking activities.
	BillingRateId *string `json:"billingRateId,omitempty"`
	EmployeePayroll *QuickbooksDesktopEmployeesPostRequestEmployeePayroll `json:"employeePayroll,omitempty"`
	// A globally unique identifier (GUID) you, the developer, can provide for tracking this object in your external system. This field is immutable and can only be set during object creation.  **IMPORTANT**: This field must be formatted as a valid GUID; otherwise, QuickBooks will return an error.
	ExternalId *string `json:"externalId,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _QuickbooksDesktopEmployeesPostRequest QuickbooksDesktopEmployeesPostRequest

// NewQuickbooksDesktopEmployeesPostRequest instantiates a new QuickbooksDesktopEmployeesPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQuickbooksDesktopEmployeesPostRequest() *QuickbooksDesktopEmployeesPostRequest {
	this := QuickbooksDesktopEmployeesPostRequest{}
	var isActive bool = true
	this.IsActive = &isActive
	var employeeType string = "regular"
	this.EmployeeType = &employeeType
	return &this
}

// NewQuickbooksDesktopEmployeesPostRequestWithDefaults instantiates a new QuickbooksDesktopEmployeesPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQuickbooksDesktopEmployeesPostRequestWithDefaults() *QuickbooksDesktopEmployeesPostRequest {
	this := QuickbooksDesktopEmployeesPostRequest{}
	var isActive bool = true
	this.IsActive = &isActive
	var employeeType string = "regular"
	this.EmployeeType = &employeeType
	return &this
}

// GetIsActive returns the IsActive field value if set, zero value otherwise.
func (o *QuickbooksDesktopEmployeesPostRequest) GetIsActive() bool {
	if o == nil || IsNil(o.IsActive) {
		var ret bool
		return ret
	}
	return *o.IsActive
}

// GetIsActiveOk returns a tuple with the IsActive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopEmployeesPostRequest) GetIsActiveOk() (*bool, bool) {
	if o == nil || IsNil(o.IsActive) {
		return nil, false
	}
	return o.IsActive, true
}

// HasIsActive returns a boolean if a field has been set.
func (o *QuickbooksDesktopEmployeesPostRequest) HasIsActive() bool {
	if o != nil && !IsNil(o.IsActive) {
		return true
	}

	return false
}

// SetIsActive gets a reference to the given bool and assigns it to the IsActive field.
func (o *QuickbooksDesktopEmployeesPostRequest) SetIsActive(v bool) {
	o.IsActive = &v
}

// GetSalutation returns the Salutation field value if set, zero value otherwise.
func (o *QuickbooksDesktopEmployeesPostRequest) GetSalutation() string {
	if o == nil || IsNil(o.Salutation) {
		var ret string
		return ret
	}
	return *o.Salutation
}

// GetSalutationOk returns a tuple with the Salutation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopEmployeesPostRequest) GetSalutationOk() (*string, bool) {
	if o == nil || IsNil(o.Salutation) {
		return nil, false
	}
	return o.Salutation, true
}

// HasSalutation returns a boolean if a field has been set.
func (o *QuickbooksDesktopEmployeesPostRequest) HasSalutation() bool {
	if o != nil && !IsNil(o.Salutation) {
		return true
	}

	return false
}

// SetSalutation gets a reference to the given string and assigns it to the Salutation field.
func (o *QuickbooksDesktopEmployeesPostRequest) SetSalutation(v string) {
	o.Salutation = &v
}

// GetFirstName returns the FirstName field value if set, zero value otherwise.
func (o *QuickbooksDesktopEmployeesPostRequest) GetFirstName() string {
	if o == nil || IsNil(o.FirstName) {
		var ret string
		return ret
	}
	return *o.FirstName
}

// GetFirstNameOk returns a tuple with the FirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopEmployeesPostRequest) GetFirstNameOk() (*string, bool) {
	if o == nil || IsNil(o.FirstName) {
		return nil, false
	}
	return o.FirstName, true
}

// HasFirstName returns a boolean if a field has been set.
func (o *QuickbooksDesktopEmployeesPostRequest) HasFirstName() bool {
	if o != nil && !IsNil(o.FirstName) {
		return true
	}

	return false
}

// SetFirstName gets a reference to the given string and assigns it to the FirstName field.
func (o *QuickbooksDesktopEmployeesPostRequest) SetFirstName(v string) {
	o.FirstName = &v
}

// GetMiddleName returns the MiddleName field value if set, zero value otherwise.
func (o *QuickbooksDesktopEmployeesPostRequest) GetMiddleName() string {
	if o == nil || IsNil(o.MiddleName) {
		var ret string
		return ret
	}
	return *o.MiddleName
}

// GetMiddleNameOk returns a tuple with the MiddleName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopEmployeesPostRequest) GetMiddleNameOk() (*string, bool) {
	if o == nil || IsNil(o.MiddleName) {
		return nil, false
	}
	return o.MiddleName, true
}

// HasMiddleName returns a boolean if a field has been set.
func (o *QuickbooksDesktopEmployeesPostRequest) HasMiddleName() bool {
	if o != nil && !IsNil(o.MiddleName) {
		return true
	}

	return false
}

// SetMiddleName gets a reference to the given string and assigns it to the MiddleName field.
func (o *QuickbooksDesktopEmployeesPostRequest) SetMiddleName(v string) {
	o.MiddleName = &v
}

// GetLastName returns the LastName field value if set, zero value otherwise.
func (o *QuickbooksDesktopEmployeesPostRequest) GetLastName() string {
	if o == nil || IsNil(o.LastName) {
		var ret string
		return ret
	}
	return *o.LastName
}

// GetLastNameOk returns a tuple with the LastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopEmployeesPostRequest) GetLastNameOk() (*string, bool) {
	if o == nil || IsNil(o.LastName) {
		return nil, false
	}
	return o.LastName, true
}

// HasLastName returns a boolean if a field has been set.
func (o *QuickbooksDesktopEmployeesPostRequest) HasLastName() bool {
	if o != nil && !IsNil(o.LastName) {
		return true
	}

	return false
}

// SetLastName gets a reference to the given string and assigns it to the LastName field.
func (o *QuickbooksDesktopEmployeesPostRequest) SetLastName(v string) {
	o.LastName = &v
}

// GetJobTitle returns the JobTitle field value if set, zero value otherwise.
func (o *QuickbooksDesktopEmployeesPostRequest) GetJobTitle() string {
	if o == nil || IsNil(o.JobTitle) {
		var ret string
		return ret
	}
	return *o.JobTitle
}

// GetJobTitleOk returns a tuple with the JobTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopEmployeesPostRequest) GetJobTitleOk() (*string, bool) {
	if o == nil || IsNil(o.JobTitle) {
		return nil, false
	}
	return o.JobTitle, true
}

// HasJobTitle returns a boolean if a field has been set.
func (o *QuickbooksDesktopEmployeesPostRequest) HasJobTitle() bool {
	if o != nil && !IsNil(o.JobTitle) {
		return true
	}

	return false
}

// SetJobTitle gets a reference to the given string and assigns it to the JobTitle field.
func (o *QuickbooksDesktopEmployeesPostRequest) SetJobTitle(v string) {
	o.JobTitle = &v
}

// GetSupervisorId returns the SupervisorId field value if set, zero value otherwise.
func (o *QuickbooksDesktopEmployeesPostRequest) GetSupervisorId() string {
	if o == nil || IsNil(o.SupervisorId) {
		var ret string
		return ret
	}
	return *o.SupervisorId
}

// GetSupervisorIdOk returns a tuple with the SupervisorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopEmployeesPostRequest) GetSupervisorIdOk() (*string, bool) {
	if o == nil || IsNil(o.SupervisorId) {
		return nil, false
	}
	return o.SupervisorId, true
}

// HasSupervisorId returns a boolean if a field has been set.
func (o *QuickbooksDesktopEmployeesPostRequest) HasSupervisorId() bool {
	if o != nil && !IsNil(o.SupervisorId) {
		return true
	}

	return false
}

// SetSupervisorId gets a reference to the given string and assigns it to the SupervisorId field.
func (o *QuickbooksDesktopEmployeesPostRequest) SetSupervisorId(v string) {
	o.SupervisorId = &v
}

// GetDepartment returns the Department field value if set, zero value otherwise.
func (o *QuickbooksDesktopEmployeesPostRequest) GetDepartment() string {
	if o == nil || IsNil(o.Department) {
		var ret string
		return ret
	}
	return *o.Department
}

// GetDepartmentOk returns a tuple with the Department field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopEmployeesPostRequest) GetDepartmentOk() (*string, bool) {
	if o == nil || IsNil(o.Department) {
		return nil, false
	}
	return o.Department, true
}

// HasDepartment returns a boolean if a field has been set.
func (o *QuickbooksDesktopEmployeesPostRequest) HasDepartment() bool {
	if o != nil && !IsNil(o.Department) {
		return true
	}

	return false
}

// SetDepartment gets a reference to the given string and assigns it to the Department field.
func (o *QuickbooksDesktopEmployeesPostRequest) SetDepartment(v string) {
	o.Department = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *QuickbooksDesktopEmployeesPostRequest) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopEmployeesPostRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *QuickbooksDesktopEmployeesPostRequest) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *QuickbooksDesktopEmployeesPostRequest) SetDescription(v string) {
	o.Description = &v
}

// GetTargetBonus returns the TargetBonus field value if set, zero value otherwise.
func (o *QuickbooksDesktopEmployeesPostRequest) GetTargetBonus() string {
	if o == nil || IsNil(o.TargetBonus) {
		var ret string
		return ret
	}
	return *o.TargetBonus
}

// GetTargetBonusOk returns a tuple with the TargetBonus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopEmployeesPostRequest) GetTargetBonusOk() (*string, bool) {
	if o == nil || IsNil(o.TargetBonus) {
		return nil, false
	}
	return o.TargetBonus, true
}

// HasTargetBonus returns a boolean if a field has been set.
func (o *QuickbooksDesktopEmployeesPostRequest) HasTargetBonus() bool {
	if o != nil && !IsNil(o.TargetBonus) {
		return true
	}

	return false
}

// SetTargetBonus gets a reference to the given string and assigns it to the TargetBonus field.
func (o *QuickbooksDesktopEmployeesPostRequest) SetTargetBonus(v string) {
	o.TargetBonus = &v
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *QuickbooksDesktopEmployeesPostRequest) GetAddress() QuickbooksDesktopEmployeesPostRequestAddress {
	if o == nil || IsNil(o.Address) {
		var ret QuickbooksDesktopEmployeesPostRequestAddress
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopEmployeesPostRequest) GetAddressOk() (*QuickbooksDesktopEmployeesPostRequestAddress, bool) {
	if o == nil || IsNil(o.Address) {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *QuickbooksDesktopEmployeesPostRequest) HasAddress() bool {
	if o != nil && !IsNil(o.Address) {
		return true
	}

	return false
}

// SetAddress gets a reference to the given QuickbooksDesktopEmployeesPostRequestAddress and assigns it to the Address field.
func (o *QuickbooksDesktopEmployeesPostRequest) SetAddress(v QuickbooksDesktopEmployeesPostRequestAddress) {
	o.Address = &v
}

// GetPrintAs returns the PrintAs field value if set, zero value otherwise.
func (o *QuickbooksDesktopEmployeesPostRequest) GetPrintAs() string {
	if o == nil || IsNil(o.PrintAs) {
		var ret string
		return ret
	}
	return *o.PrintAs
}

// GetPrintAsOk returns a tuple with the PrintAs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopEmployeesPostRequest) GetPrintAsOk() (*string, bool) {
	if o == nil || IsNil(o.PrintAs) {
		return nil, false
	}
	return o.PrintAs, true
}

// HasPrintAs returns a boolean if a field has been set.
func (o *QuickbooksDesktopEmployeesPostRequest) HasPrintAs() bool {
	if o != nil && !IsNil(o.PrintAs) {
		return true
	}

	return false
}

// SetPrintAs gets a reference to the given string and assigns it to the PrintAs field.
func (o *QuickbooksDesktopEmployeesPostRequest) SetPrintAs(v string) {
	o.PrintAs = &v
}

// GetPhone returns the Phone field value if set, zero value otherwise.
func (o *QuickbooksDesktopEmployeesPostRequest) GetPhone() string {
	if o == nil || IsNil(o.Phone) {
		var ret string
		return ret
	}
	return *o.Phone
}

// GetPhoneOk returns a tuple with the Phone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopEmployeesPostRequest) GetPhoneOk() (*string, bool) {
	if o == nil || IsNil(o.Phone) {
		return nil, false
	}
	return o.Phone, true
}

// HasPhone returns a boolean if a field has been set.
func (o *QuickbooksDesktopEmployeesPostRequest) HasPhone() bool {
	if o != nil && !IsNil(o.Phone) {
		return true
	}

	return false
}

// SetPhone gets a reference to the given string and assigns it to the Phone field.
func (o *QuickbooksDesktopEmployeesPostRequest) SetPhone(v string) {
	o.Phone = &v
}

// GetMobile returns the Mobile field value if set, zero value otherwise.
func (o *QuickbooksDesktopEmployeesPostRequest) GetMobile() string {
	if o == nil || IsNil(o.Mobile) {
		var ret string
		return ret
	}
	return *o.Mobile
}

// GetMobileOk returns a tuple with the Mobile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopEmployeesPostRequest) GetMobileOk() (*string, bool) {
	if o == nil || IsNil(o.Mobile) {
		return nil, false
	}
	return o.Mobile, true
}

// HasMobile returns a boolean if a field has been set.
func (o *QuickbooksDesktopEmployeesPostRequest) HasMobile() bool {
	if o != nil && !IsNil(o.Mobile) {
		return true
	}

	return false
}

// SetMobile gets a reference to the given string and assigns it to the Mobile field.
func (o *QuickbooksDesktopEmployeesPostRequest) SetMobile(v string) {
	o.Mobile = &v
}

// GetPager returns the Pager field value if set, zero value otherwise.
func (o *QuickbooksDesktopEmployeesPostRequest) GetPager() string {
	if o == nil || IsNil(o.Pager) {
		var ret string
		return ret
	}
	return *o.Pager
}

// GetPagerOk returns a tuple with the Pager field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopEmployeesPostRequest) GetPagerOk() (*string, bool) {
	if o == nil || IsNil(o.Pager) {
		return nil, false
	}
	return o.Pager, true
}

// HasPager returns a boolean if a field has been set.
func (o *QuickbooksDesktopEmployeesPostRequest) HasPager() bool {
	if o != nil && !IsNil(o.Pager) {
		return true
	}

	return false
}

// SetPager gets a reference to the given string and assigns it to the Pager field.
func (o *QuickbooksDesktopEmployeesPostRequest) SetPager(v string) {
	o.Pager = &v
}

// GetPagerPin returns the PagerPin field value if set, zero value otherwise.
func (o *QuickbooksDesktopEmployeesPostRequest) GetPagerPin() string {
	if o == nil || IsNil(o.PagerPin) {
		var ret string
		return ret
	}
	return *o.PagerPin
}

// GetPagerPinOk returns a tuple with the PagerPin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopEmployeesPostRequest) GetPagerPinOk() (*string, bool) {
	if o == nil || IsNil(o.PagerPin) {
		return nil, false
	}
	return o.PagerPin, true
}

// HasPagerPin returns a boolean if a field has been set.
func (o *QuickbooksDesktopEmployeesPostRequest) HasPagerPin() bool {
	if o != nil && !IsNil(o.PagerPin) {
		return true
	}

	return false
}

// SetPagerPin gets a reference to the given string and assigns it to the PagerPin field.
func (o *QuickbooksDesktopEmployeesPostRequest) SetPagerPin(v string) {
	o.PagerPin = &v
}

// GetAlternatePhone returns the AlternatePhone field value if set, zero value otherwise.
func (o *QuickbooksDesktopEmployeesPostRequest) GetAlternatePhone() string {
	if o == nil || IsNil(o.AlternatePhone) {
		var ret string
		return ret
	}
	return *o.AlternatePhone
}

// GetAlternatePhoneOk returns a tuple with the AlternatePhone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopEmployeesPostRequest) GetAlternatePhoneOk() (*string, bool) {
	if o == nil || IsNil(o.AlternatePhone) {
		return nil, false
	}
	return o.AlternatePhone, true
}

// HasAlternatePhone returns a boolean if a field has been set.
func (o *QuickbooksDesktopEmployeesPostRequest) HasAlternatePhone() bool {
	if o != nil && !IsNil(o.AlternatePhone) {
		return true
	}

	return false
}

// SetAlternatePhone gets a reference to the given string and assigns it to the AlternatePhone field.
func (o *QuickbooksDesktopEmployeesPostRequest) SetAlternatePhone(v string) {
	o.AlternatePhone = &v
}

// GetFax returns the Fax field value if set, zero value otherwise.
func (o *QuickbooksDesktopEmployeesPostRequest) GetFax() string {
	if o == nil || IsNil(o.Fax) {
		var ret string
		return ret
	}
	return *o.Fax
}

// GetFaxOk returns a tuple with the Fax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopEmployeesPostRequest) GetFaxOk() (*string, bool) {
	if o == nil || IsNil(o.Fax) {
		return nil, false
	}
	return o.Fax, true
}

// HasFax returns a boolean if a field has been set.
func (o *QuickbooksDesktopEmployeesPostRequest) HasFax() bool {
	if o != nil && !IsNil(o.Fax) {
		return true
	}

	return false
}

// SetFax gets a reference to the given string and assigns it to the Fax field.
func (o *QuickbooksDesktopEmployeesPostRequest) SetFax(v string) {
	o.Fax = &v
}

// GetSsn returns the Ssn field value if set, zero value otherwise.
func (o *QuickbooksDesktopEmployeesPostRequest) GetSsn() string {
	if o == nil || IsNil(o.Ssn) {
		var ret string
		return ret
	}
	return *o.Ssn
}

// GetSsnOk returns a tuple with the Ssn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopEmployeesPostRequest) GetSsnOk() (*string, bool) {
	if o == nil || IsNil(o.Ssn) {
		return nil, false
	}
	return o.Ssn, true
}

// HasSsn returns a boolean if a field has been set.
func (o *QuickbooksDesktopEmployeesPostRequest) HasSsn() bool {
	if o != nil && !IsNil(o.Ssn) {
		return true
	}

	return false
}

// SetSsn gets a reference to the given string and assigns it to the Ssn field.
func (o *QuickbooksDesktopEmployeesPostRequest) SetSsn(v string) {
	o.Ssn = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *QuickbooksDesktopEmployeesPostRequest) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopEmployeesPostRequest) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *QuickbooksDesktopEmployeesPostRequest) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *QuickbooksDesktopEmployeesPostRequest) SetEmail(v string) {
	o.Email = &v
}

// GetCustomContactFields returns the CustomContactFields field value if set, zero value otherwise.
func (o *QuickbooksDesktopEmployeesPostRequest) GetCustomContactFields() []QuickbooksDesktopCustomersPostRequestCustomContactFieldsInner {
	if o == nil || IsNil(o.CustomContactFields) {
		var ret []QuickbooksDesktopCustomersPostRequestCustomContactFieldsInner
		return ret
	}
	return o.CustomContactFields
}

// GetCustomContactFieldsOk returns a tuple with the CustomContactFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopEmployeesPostRequest) GetCustomContactFieldsOk() ([]QuickbooksDesktopCustomersPostRequestCustomContactFieldsInner, bool) {
	if o == nil || IsNil(o.CustomContactFields) {
		return nil, false
	}
	return o.CustomContactFields, true
}

// HasCustomContactFields returns a boolean if a field has been set.
func (o *QuickbooksDesktopEmployeesPostRequest) HasCustomContactFields() bool {
	if o != nil && !IsNil(o.CustomContactFields) {
		return true
	}

	return false
}

// SetCustomContactFields gets a reference to the given []QuickbooksDesktopCustomersPostRequestCustomContactFieldsInner and assigns it to the CustomContactFields field.
func (o *QuickbooksDesktopEmployeesPostRequest) SetCustomContactFields(v []QuickbooksDesktopCustomersPostRequestCustomContactFieldsInner) {
	o.CustomContactFields = v
}

// GetEmergencyContact returns the EmergencyContact field value if set, zero value otherwise.
func (o *QuickbooksDesktopEmployeesPostRequest) GetEmergencyContact() QuickbooksDesktopEmployeesPostRequestEmergencyContact {
	if o == nil || IsNil(o.EmergencyContact) {
		var ret QuickbooksDesktopEmployeesPostRequestEmergencyContact
		return ret
	}
	return *o.EmergencyContact
}

// GetEmergencyContactOk returns a tuple with the EmergencyContact field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopEmployeesPostRequest) GetEmergencyContactOk() (*QuickbooksDesktopEmployeesPostRequestEmergencyContact, bool) {
	if o == nil || IsNil(o.EmergencyContact) {
		return nil, false
	}
	return o.EmergencyContact, true
}

// HasEmergencyContact returns a boolean if a field has been set.
func (o *QuickbooksDesktopEmployeesPostRequest) HasEmergencyContact() bool {
	if o != nil && !IsNil(o.EmergencyContact) {
		return true
	}

	return false
}

// SetEmergencyContact gets a reference to the given QuickbooksDesktopEmployeesPostRequestEmergencyContact and assigns it to the EmergencyContact field.
func (o *QuickbooksDesktopEmployeesPostRequest) SetEmergencyContact(v QuickbooksDesktopEmployeesPostRequestEmergencyContact) {
	o.EmergencyContact = &v
}

// GetEmployeeType returns the EmployeeType field value if set, zero value otherwise.
func (o *QuickbooksDesktopEmployeesPostRequest) GetEmployeeType() string {
	if o == nil || IsNil(o.EmployeeType) {
		var ret string
		return ret
	}
	return *o.EmployeeType
}

// GetEmployeeTypeOk returns a tuple with the EmployeeType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopEmployeesPostRequest) GetEmployeeTypeOk() (*string, bool) {
	if o == nil || IsNil(o.EmployeeType) {
		return nil, false
	}
	return o.EmployeeType, true
}

// HasEmployeeType returns a boolean if a field has been set.
func (o *QuickbooksDesktopEmployeesPostRequest) HasEmployeeType() bool {
	if o != nil && !IsNil(o.EmployeeType) {
		return true
	}

	return false
}

// SetEmployeeType gets a reference to the given string and assigns it to the EmployeeType field.
func (o *QuickbooksDesktopEmployeesPostRequest) SetEmployeeType(v string) {
	o.EmployeeType = &v
}

// GetEmploymentStatus returns the EmploymentStatus field value if set, zero value otherwise.
func (o *QuickbooksDesktopEmployeesPostRequest) GetEmploymentStatus() string {
	if o == nil || IsNil(o.EmploymentStatus) {
		var ret string
		return ret
	}
	return *o.EmploymentStatus
}

// GetEmploymentStatusOk returns a tuple with the EmploymentStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopEmployeesPostRequest) GetEmploymentStatusOk() (*string, bool) {
	if o == nil || IsNil(o.EmploymentStatus) {
		return nil, false
	}
	return o.EmploymentStatus, true
}

// HasEmploymentStatus returns a boolean if a field has been set.
func (o *QuickbooksDesktopEmployeesPostRequest) HasEmploymentStatus() bool {
	if o != nil && !IsNil(o.EmploymentStatus) {
		return true
	}

	return false
}

// SetEmploymentStatus gets a reference to the given string and assigns it to the EmploymentStatus field.
func (o *QuickbooksDesktopEmployeesPostRequest) SetEmploymentStatus(v string) {
	o.EmploymentStatus = &v
}

// GetOvertimeExemptStatus returns the OvertimeExemptStatus field value if set, zero value otherwise.
func (o *QuickbooksDesktopEmployeesPostRequest) GetOvertimeExemptStatus() string {
	if o == nil || IsNil(o.OvertimeExemptStatus) {
		var ret string
		return ret
	}
	return *o.OvertimeExemptStatus
}

// GetOvertimeExemptStatusOk returns a tuple with the OvertimeExemptStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopEmployeesPostRequest) GetOvertimeExemptStatusOk() (*string, bool) {
	if o == nil || IsNil(o.OvertimeExemptStatus) {
		return nil, false
	}
	return o.OvertimeExemptStatus, true
}

// HasOvertimeExemptStatus returns a boolean if a field has been set.
func (o *QuickbooksDesktopEmployeesPostRequest) HasOvertimeExemptStatus() bool {
	if o != nil && !IsNil(o.OvertimeExemptStatus) {
		return true
	}

	return false
}

// SetOvertimeExemptStatus gets a reference to the given string and assigns it to the OvertimeExemptStatus field.
func (o *QuickbooksDesktopEmployeesPostRequest) SetOvertimeExemptStatus(v string) {
	o.OvertimeExemptStatus = &v
}

// GetKeyEmployeeStatus returns the KeyEmployeeStatus field value if set, zero value otherwise.
func (o *QuickbooksDesktopEmployeesPostRequest) GetKeyEmployeeStatus() string {
	if o == nil || IsNil(o.KeyEmployeeStatus) {
		var ret string
		return ret
	}
	return *o.KeyEmployeeStatus
}

// GetKeyEmployeeStatusOk returns a tuple with the KeyEmployeeStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopEmployeesPostRequest) GetKeyEmployeeStatusOk() (*string, bool) {
	if o == nil || IsNil(o.KeyEmployeeStatus) {
		return nil, false
	}
	return o.KeyEmployeeStatus, true
}

// HasKeyEmployeeStatus returns a boolean if a field has been set.
func (o *QuickbooksDesktopEmployeesPostRequest) HasKeyEmployeeStatus() bool {
	if o != nil && !IsNil(o.KeyEmployeeStatus) {
		return true
	}

	return false
}

// SetKeyEmployeeStatus gets a reference to the given string and assigns it to the KeyEmployeeStatus field.
func (o *QuickbooksDesktopEmployeesPostRequest) SetKeyEmployeeStatus(v string) {
	o.KeyEmployeeStatus = &v
}

// GetGender returns the Gender field value if set, zero value otherwise.
func (o *QuickbooksDesktopEmployeesPostRequest) GetGender() string {
	if o == nil || IsNil(o.Gender) {
		var ret string
		return ret
	}
	return *o.Gender
}

// GetGenderOk returns a tuple with the Gender field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopEmployeesPostRequest) GetGenderOk() (*string, bool) {
	if o == nil || IsNil(o.Gender) {
		return nil, false
	}
	return o.Gender, true
}

// HasGender returns a boolean if a field has been set.
func (o *QuickbooksDesktopEmployeesPostRequest) HasGender() bool {
	if o != nil && !IsNil(o.Gender) {
		return true
	}

	return false
}

// SetGender gets a reference to the given string and assigns it to the Gender field.
func (o *QuickbooksDesktopEmployeesPostRequest) SetGender(v string) {
	o.Gender = &v
}

// GetHiredDate returns the HiredDate field value if set, zero value otherwise.
func (o *QuickbooksDesktopEmployeesPostRequest) GetHiredDate() string {
	if o == nil || IsNil(o.HiredDate) {
		var ret string
		return ret
	}
	return *o.HiredDate
}

// GetHiredDateOk returns a tuple with the HiredDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopEmployeesPostRequest) GetHiredDateOk() (*string, bool) {
	if o == nil || IsNil(o.HiredDate) {
		return nil, false
	}
	return o.HiredDate, true
}

// HasHiredDate returns a boolean if a field has been set.
func (o *QuickbooksDesktopEmployeesPostRequest) HasHiredDate() bool {
	if o != nil && !IsNil(o.HiredDate) {
		return true
	}

	return false
}

// SetHiredDate gets a reference to the given string and assigns it to the HiredDate field.
func (o *QuickbooksDesktopEmployeesPostRequest) SetHiredDate(v string) {
	o.HiredDate = &v
}

// GetOriginalHireDate returns the OriginalHireDate field value if set, zero value otherwise.
func (o *QuickbooksDesktopEmployeesPostRequest) GetOriginalHireDate() string {
	if o == nil || IsNil(o.OriginalHireDate) {
		var ret string
		return ret
	}
	return *o.OriginalHireDate
}

// GetOriginalHireDateOk returns a tuple with the OriginalHireDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopEmployeesPostRequest) GetOriginalHireDateOk() (*string, bool) {
	if o == nil || IsNil(o.OriginalHireDate) {
		return nil, false
	}
	return o.OriginalHireDate, true
}

// HasOriginalHireDate returns a boolean if a field has been set.
func (o *QuickbooksDesktopEmployeesPostRequest) HasOriginalHireDate() bool {
	if o != nil && !IsNil(o.OriginalHireDate) {
		return true
	}

	return false
}

// SetOriginalHireDate gets a reference to the given string and assigns it to the OriginalHireDate field.
func (o *QuickbooksDesktopEmployeesPostRequest) SetOriginalHireDate(v string) {
	o.OriginalHireDate = &v
}

// GetAdjustedServiceDate returns the AdjustedServiceDate field value if set, zero value otherwise.
func (o *QuickbooksDesktopEmployeesPostRequest) GetAdjustedServiceDate() string {
	if o == nil || IsNil(o.AdjustedServiceDate) {
		var ret string
		return ret
	}
	return *o.AdjustedServiceDate
}

// GetAdjustedServiceDateOk returns a tuple with the AdjustedServiceDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopEmployeesPostRequest) GetAdjustedServiceDateOk() (*string, bool) {
	if o == nil || IsNil(o.AdjustedServiceDate) {
		return nil, false
	}
	return o.AdjustedServiceDate, true
}

// HasAdjustedServiceDate returns a boolean if a field has been set.
func (o *QuickbooksDesktopEmployeesPostRequest) HasAdjustedServiceDate() bool {
	if o != nil && !IsNil(o.AdjustedServiceDate) {
		return true
	}

	return false
}

// SetAdjustedServiceDate gets a reference to the given string and assigns it to the AdjustedServiceDate field.
func (o *QuickbooksDesktopEmployeesPostRequest) SetAdjustedServiceDate(v string) {
	o.AdjustedServiceDate = &v
}

// GetTerminationDate returns the TerminationDate field value if set, zero value otherwise.
func (o *QuickbooksDesktopEmployeesPostRequest) GetTerminationDate() string {
	if o == nil || IsNil(o.TerminationDate) {
		var ret string
		return ret
	}
	return *o.TerminationDate
}

// GetTerminationDateOk returns a tuple with the TerminationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopEmployeesPostRequest) GetTerminationDateOk() (*string, bool) {
	if o == nil || IsNil(o.TerminationDate) {
		return nil, false
	}
	return o.TerminationDate, true
}

// HasTerminationDate returns a boolean if a field has been set.
func (o *QuickbooksDesktopEmployeesPostRequest) HasTerminationDate() bool {
	if o != nil && !IsNil(o.TerminationDate) {
		return true
	}

	return false
}

// SetTerminationDate gets a reference to the given string and assigns it to the TerminationDate field.
func (o *QuickbooksDesktopEmployeesPostRequest) SetTerminationDate(v string) {
	o.TerminationDate = &v
}

// GetBirthDate returns the BirthDate field value if set, zero value otherwise.
func (o *QuickbooksDesktopEmployeesPostRequest) GetBirthDate() string {
	if o == nil || IsNil(o.BirthDate) {
		var ret string
		return ret
	}
	return *o.BirthDate
}

// GetBirthDateOk returns a tuple with the BirthDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopEmployeesPostRequest) GetBirthDateOk() (*string, bool) {
	if o == nil || IsNil(o.BirthDate) {
		return nil, false
	}
	return o.BirthDate, true
}

// HasBirthDate returns a boolean if a field has been set.
func (o *QuickbooksDesktopEmployeesPostRequest) HasBirthDate() bool {
	if o != nil && !IsNil(o.BirthDate) {
		return true
	}

	return false
}

// SetBirthDate gets a reference to the given string and assigns it to the BirthDate field.
func (o *QuickbooksDesktopEmployeesPostRequest) SetBirthDate(v string) {
	o.BirthDate = &v
}

// GetUsCitizenshipStatus returns the UsCitizenshipStatus field value if set, zero value otherwise.
func (o *QuickbooksDesktopEmployeesPostRequest) GetUsCitizenshipStatus() string {
	if o == nil || IsNil(o.UsCitizenshipStatus) {
		var ret string
		return ret
	}
	return *o.UsCitizenshipStatus
}

// GetUsCitizenshipStatusOk returns a tuple with the UsCitizenshipStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopEmployeesPostRequest) GetUsCitizenshipStatusOk() (*string, bool) {
	if o == nil || IsNil(o.UsCitizenshipStatus) {
		return nil, false
	}
	return o.UsCitizenshipStatus, true
}

// HasUsCitizenshipStatus returns a boolean if a field has been set.
func (o *QuickbooksDesktopEmployeesPostRequest) HasUsCitizenshipStatus() bool {
	if o != nil && !IsNil(o.UsCitizenshipStatus) {
		return true
	}

	return false
}

// SetUsCitizenshipStatus gets a reference to the given string and assigns it to the UsCitizenshipStatus field.
func (o *QuickbooksDesktopEmployeesPostRequest) SetUsCitizenshipStatus(v string) {
	o.UsCitizenshipStatus = &v
}

// GetEthnicity returns the Ethnicity field value if set, zero value otherwise.
func (o *QuickbooksDesktopEmployeesPostRequest) GetEthnicity() string {
	if o == nil || IsNil(o.Ethnicity) {
		var ret string
		return ret
	}
	return *o.Ethnicity
}

// GetEthnicityOk returns a tuple with the Ethnicity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopEmployeesPostRequest) GetEthnicityOk() (*string, bool) {
	if o == nil || IsNil(o.Ethnicity) {
		return nil, false
	}
	return o.Ethnicity, true
}

// HasEthnicity returns a boolean if a field has been set.
func (o *QuickbooksDesktopEmployeesPostRequest) HasEthnicity() bool {
	if o != nil && !IsNil(o.Ethnicity) {
		return true
	}

	return false
}

// SetEthnicity gets a reference to the given string and assigns it to the Ethnicity field.
func (o *QuickbooksDesktopEmployeesPostRequest) SetEthnicity(v string) {
	o.Ethnicity = &v
}

// GetDisabilityStatus returns the DisabilityStatus field value if set, zero value otherwise.
func (o *QuickbooksDesktopEmployeesPostRequest) GetDisabilityStatus() string {
	if o == nil || IsNil(o.DisabilityStatus) {
		var ret string
		return ret
	}
	return *o.DisabilityStatus
}

// GetDisabilityStatusOk returns a tuple with the DisabilityStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopEmployeesPostRequest) GetDisabilityStatusOk() (*string, bool) {
	if o == nil || IsNil(o.DisabilityStatus) {
		return nil, false
	}
	return o.DisabilityStatus, true
}

// HasDisabilityStatus returns a boolean if a field has been set.
func (o *QuickbooksDesktopEmployeesPostRequest) HasDisabilityStatus() bool {
	if o != nil && !IsNil(o.DisabilityStatus) {
		return true
	}

	return false
}

// SetDisabilityStatus gets a reference to the given string and assigns it to the DisabilityStatus field.
func (o *QuickbooksDesktopEmployeesPostRequest) SetDisabilityStatus(v string) {
	o.DisabilityStatus = &v
}

// GetDisabilityDescription returns the DisabilityDescription field value if set, zero value otherwise.
func (o *QuickbooksDesktopEmployeesPostRequest) GetDisabilityDescription() string {
	if o == nil || IsNil(o.DisabilityDescription) {
		var ret string
		return ret
	}
	return *o.DisabilityDescription
}

// GetDisabilityDescriptionOk returns a tuple with the DisabilityDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopEmployeesPostRequest) GetDisabilityDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.DisabilityDescription) {
		return nil, false
	}
	return o.DisabilityDescription, true
}

// HasDisabilityDescription returns a boolean if a field has been set.
func (o *QuickbooksDesktopEmployeesPostRequest) HasDisabilityDescription() bool {
	if o != nil && !IsNil(o.DisabilityDescription) {
		return true
	}

	return false
}

// SetDisabilityDescription gets a reference to the given string and assigns it to the DisabilityDescription field.
func (o *QuickbooksDesktopEmployeesPostRequest) SetDisabilityDescription(v string) {
	o.DisabilityDescription = &v
}

// GetI9OnFileStatus returns the I9OnFileStatus field value if set, zero value otherwise.
func (o *QuickbooksDesktopEmployeesPostRequest) GetI9OnFileStatus() string {
	if o == nil || IsNil(o.I9OnFileStatus) {
		var ret string
		return ret
	}
	return *o.I9OnFileStatus
}

// GetI9OnFileStatusOk returns a tuple with the I9OnFileStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopEmployeesPostRequest) GetI9OnFileStatusOk() (*string, bool) {
	if o == nil || IsNil(o.I9OnFileStatus) {
		return nil, false
	}
	return o.I9OnFileStatus, true
}

// HasI9OnFileStatus returns a boolean if a field has been set.
func (o *QuickbooksDesktopEmployeesPostRequest) HasI9OnFileStatus() bool {
	if o != nil && !IsNil(o.I9OnFileStatus) {
		return true
	}

	return false
}

// SetI9OnFileStatus gets a reference to the given string and assigns it to the I9OnFileStatus field.
func (o *QuickbooksDesktopEmployeesPostRequest) SetI9OnFileStatus(v string) {
	o.I9OnFileStatus = &v
}

// GetWorkAuthorizationExpirationDate returns the WorkAuthorizationExpirationDate field value if set, zero value otherwise.
func (o *QuickbooksDesktopEmployeesPostRequest) GetWorkAuthorizationExpirationDate() string {
	if o == nil || IsNil(o.WorkAuthorizationExpirationDate) {
		var ret string
		return ret
	}
	return *o.WorkAuthorizationExpirationDate
}

// GetWorkAuthorizationExpirationDateOk returns a tuple with the WorkAuthorizationExpirationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopEmployeesPostRequest) GetWorkAuthorizationExpirationDateOk() (*string, bool) {
	if o == nil || IsNil(o.WorkAuthorizationExpirationDate) {
		return nil, false
	}
	return o.WorkAuthorizationExpirationDate, true
}

// HasWorkAuthorizationExpirationDate returns a boolean if a field has been set.
func (o *QuickbooksDesktopEmployeesPostRequest) HasWorkAuthorizationExpirationDate() bool {
	if o != nil && !IsNil(o.WorkAuthorizationExpirationDate) {
		return true
	}

	return false
}

// SetWorkAuthorizationExpirationDate gets a reference to the given string and assigns it to the WorkAuthorizationExpirationDate field.
func (o *QuickbooksDesktopEmployeesPostRequest) SetWorkAuthorizationExpirationDate(v string) {
	o.WorkAuthorizationExpirationDate = &v
}

// GetUsVeteranStatus returns the UsVeteranStatus field value if set, zero value otherwise.
func (o *QuickbooksDesktopEmployeesPostRequest) GetUsVeteranStatus() string {
	if o == nil || IsNil(o.UsVeteranStatus) {
		var ret string
		return ret
	}
	return *o.UsVeteranStatus
}

// GetUsVeteranStatusOk returns a tuple with the UsVeteranStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopEmployeesPostRequest) GetUsVeteranStatusOk() (*string, bool) {
	if o == nil || IsNil(o.UsVeteranStatus) {
		return nil, false
	}
	return o.UsVeteranStatus, true
}

// HasUsVeteranStatus returns a boolean if a field has been set.
func (o *QuickbooksDesktopEmployeesPostRequest) HasUsVeteranStatus() bool {
	if o != nil && !IsNil(o.UsVeteranStatus) {
		return true
	}

	return false
}

// SetUsVeteranStatus gets a reference to the given string and assigns it to the UsVeteranStatus field.
func (o *QuickbooksDesktopEmployeesPostRequest) SetUsVeteranStatus(v string) {
	o.UsVeteranStatus = &v
}

// GetMilitaryStatus returns the MilitaryStatus field value if set, zero value otherwise.
func (o *QuickbooksDesktopEmployeesPostRequest) GetMilitaryStatus() string {
	if o == nil || IsNil(o.MilitaryStatus) {
		var ret string
		return ret
	}
	return *o.MilitaryStatus
}

// GetMilitaryStatusOk returns a tuple with the MilitaryStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopEmployeesPostRequest) GetMilitaryStatusOk() (*string, bool) {
	if o == nil || IsNil(o.MilitaryStatus) {
		return nil, false
	}
	return o.MilitaryStatus, true
}

// HasMilitaryStatus returns a boolean if a field has been set.
func (o *QuickbooksDesktopEmployeesPostRequest) HasMilitaryStatus() bool {
	if o != nil && !IsNil(o.MilitaryStatus) {
		return true
	}

	return false
}

// SetMilitaryStatus gets a reference to the given string and assigns it to the MilitaryStatus field.
func (o *QuickbooksDesktopEmployeesPostRequest) SetMilitaryStatus(v string) {
	o.MilitaryStatus = &v
}

// GetAccountNumber returns the AccountNumber field value if set, zero value otherwise.
func (o *QuickbooksDesktopEmployeesPostRequest) GetAccountNumber() string {
	if o == nil || IsNil(o.AccountNumber) {
		var ret string
		return ret
	}
	return *o.AccountNumber
}

// GetAccountNumberOk returns a tuple with the AccountNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopEmployeesPostRequest) GetAccountNumberOk() (*string, bool) {
	if o == nil || IsNil(o.AccountNumber) {
		return nil, false
	}
	return o.AccountNumber, true
}

// HasAccountNumber returns a boolean if a field has been set.
func (o *QuickbooksDesktopEmployeesPostRequest) HasAccountNumber() bool {
	if o != nil && !IsNil(o.AccountNumber) {
		return true
	}

	return false
}

// SetAccountNumber gets a reference to the given string and assigns it to the AccountNumber field.
func (o *QuickbooksDesktopEmployeesPostRequest) SetAccountNumber(v string) {
	o.AccountNumber = &v
}

// GetNote returns the Note field value if set, zero value otherwise.
func (o *QuickbooksDesktopEmployeesPostRequest) GetNote() string {
	if o == nil || IsNil(o.Note) {
		var ret string
		return ret
	}
	return *o.Note
}

// GetNoteOk returns a tuple with the Note field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopEmployeesPostRequest) GetNoteOk() (*string, bool) {
	if o == nil || IsNil(o.Note) {
		return nil, false
	}
	return o.Note, true
}

// HasNote returns a boolean if a field has been set.
func (o *QuickbooksDesktopEmployeesPostRequest) HasNote() bool {
	if o != nil && !IsNil(o.Note) {
		return true
	}

	return false
}

// SetNote gets a reference to the given string and assigns it to the Note field.
func (o *QuickbooksDesktopEmployeesPostRequest) SetNote(v string) {
	o.Note = &v
}

// GetAdditionalNotes returns the AdditionalNotes field value if set, zero value otherwise.
func (o *QuickbooksDesktopEmployeesPostRequest) GetAdditionalNotes() []QuickbooksDesktopCustomersPostRequestAdditionalNotesInner {
	if o == nil || IsNil(o.AdditionalNotes) {
		var ret []QuickbooksDesktopCustomersPostRequestAdditionalNotesInner
		return ret
	}
	return o.AdditionalNotes
}

// GetAdditionalNotesOk returns a tuple with the AdditionalNotes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopEmployeesPostRequest) GetAdditionalNotesOk() ([]QuickbooksDesktopCustomersPostRequestAdditionalNotesInner, bool) {
	if o == nil || IsNil(o.AdditionalNotes) {
		return nil, false
	}
	return o.AdditionalNotes, true
}

// HasAdditionalNotes returns a boolean if a field has been set.
func (o *QuickbooksDesktopEmployeesPostRequest) HasAdditionalNotes() bool {
	if o != nil && !IsNil(o.AdditionalNotes) {
		return true
	}

	return false
}

// SetAdditionalNotes gets a reference to the given []QuickbooksDesktopCustomersPostRequestAdditionalNotesInner and assigns it to the AdditionalNotes field.
func (o *QuickbooksDesktopEmployeesPostRequest) SetAdditionalNotes(v []QuickbooksDesktopCustomersPostRequestAdditionalNotesInner) {
	o.AdditionalNotes = v
}

// GetBillingRateId returns the BillingRateId field value if set, zero value otherwise.
func (o *QuickbooksDesktopEmployeesPostRequest) GetBillingRateId() string {
	if o == nil || IsNil(o.BillingRateId) {
		var ret string
		return ret
	}
	return *o.BillingRateId
}

// GetBillingRateIdOk returns a tuple with the BillingRateId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopEmployeesPostRequest) GetBillingRateIdOk() (*string, bool) {
	if o == nil || IsNil(o.BillingRateId) {
		return nil, false
	}
	return o.BillingRateId, true
}

// HasBillingRateId returns a boolean if a field has been set.
func (o *QuickbooksDesktopEmployeesPostRequest) HasBillingRateId() bool {
	if o != nil && !IsNil(o.BillingRateId) {
		return true
	}

	return false
}

// SetBillingRateId gets a reference to the given string and assigns it to the BillingRateId field.
func (o *QuickbooksDesktopEmployeesPostRequest) SetBillingRateId(v string) {
	o.BillingRateId = &v
}

// GetEmployeePayroll returns the EmployeePayroll field value if set, zero value otherwise.
func (o *QuickbooksDesktopEmployeesPostRequest) GetEmployeePayroll() QuickbooksDesktopEmployeesPostRequestEmployeePayroll {
	if o == nil || IsNil(o.EmployeePayroll) {
		var ret QuickbooksDesktopEmployeesPostRequestEmployeePayroll
		return ret
	}
	return *o.EmployeePayroll
}

// GetEmployeePayrollOk returns a tuple with the EmployeePayroll field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopEmployeesPostRequest) GetEmployeePayrollOk() (*QuickbooksDesktopEmployeesPostRequestEmployeePayroll, bool) {
	if o == nil || IsNil(o.EmployeePayroll) {
		return nil, false
	}
	return o.EmployeePayroll, true
}

// HasEmployeePayroll returns a boolean if a field has been set.
func (o *QuickbooksDesktopEmployeesPostRequest) HasEmployeePayroll() bool {
	if o != nil && !IsNil(o.EmployeePayroll) {
		return true
	}

	return false
}

// SetEmployeePayroll gets a reference to the given QuickbooksDesktopEmployeesPostRequestEmployeePayroll and assigns it to the EmployeePayroll field.
func (o *QuickbooksDesktopEmployeesPostRequest) SetEmployeePayroll(v QuickbooksDesktopEmployeesPostRequestEmployeePayroll) {
	o.EmployeePayroll = &v
}

// GetExternalId returns the ExternalId field value if set, zero value otherwise.
func (o *QuickbooksDesktopEmployeesPostRequest) GetExternalId() string {
	if o == nil || IsNil(o.ExternalId) {
		var ret string
		return ret
	}
	return *o.ExternalId
}

// GetExternalIdOk returns a tuple with the ExternalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopEmployeesPostRequest) GetExternalIdOk() (*string, bool) {
	if o == nil || IsNil(o.ExternalId) {
		return nil, false
	}
	return o.ExternalId, true
}

// HasExternalId returns a boolean if a field has been set.
func (o *QuickbooksDesktopEmployeesPostRequest) HasExternalId() bool {
	if o != nil && !IsNil(o.ExternalId) {
		return true
	}

	return false
}

// SetExternalId gets a reference to the given string and assigns it to the ExternalId field.
func (o *QuickbooksDesktopEmployeesPostRequest) SetExternalId(v string) {
	o.ExternalId = &v
}

func (o QuickbooksDesktopEmployeesPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QuickbooksDesktopEmployeesPostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.IsActive) {
		toSerialize["isActive"] = o.IsActive
	}
	if !IsNil(o.Salutation) {
		toSerialize["salutation"] = o.Salutation
	}
	if !IsNil(o.FirstName) {
		toSerialize["firstName"] = o.FirstName
	}
	if !IsNil(o.MiddleName) {
		toSerialize["middleName"] = o.MiddleName
	}
	if !IsNil(o.LastName) {
		toSerialize["lastName"] = o.LastName
	}
	if !IsNil(o.JobTitle) {
		toSerialize["jobTitle"] = o.JobTitle
	}
	if !IsNil(o.SupervisorId) {
		toSerialize["supervisorId"] = o.SupervisorId
	}
	if !IsNil(o.Department) {
		toSerialize["department"] = o.Department
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.TargetBonus) {
		toSerialize["targetBonus"] = o.TargetBonus
	}
	if !IsNil(o.Address) {
		toSerialize["address"] = o.Address
	}
	if !IsNil(o.PrintAs) {
		toSerialize["printAs"] = o.PrintAs
	}
	if !IsNil(o.Phone) {
		toSerialize["phone"] = o.Phone
	}
	if !IsNil(o.Mobile) {
		toSerialize["mobile"] = o.Mobile
	}
	if !IsNil(o.Pager) {
		toSerialize["pager"] = o.Pager
	}
	if !IsNil(o.PagerPin) {
		toSerialize["pagerPin"] = o.PagerPin
	}
	if !IsNil(o.AlternatePhone) {
		toSerialize["alternatePhone"] = o.AlternatePhone
	}
	if !IsNil(o.Fax) {
		toSerialize["fax"] = o.Fax
	}
	if !IsNil(o.Ssn) {
		toSerialize["ssn"] = o.Ssn
	}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.CustomContactFields) {
		toSerialize["customContactFields"] = o.CustomContactFields
	}
	if !IsNil(o.EmergencyContact) {
		toSerialize["emergencyContact"] = o.EmergencyContact
	}
	if !IsNil(o.EmployeeType) {
		toSerialize["employeeType"] = o.EmployeeType
	}
	if !IsNil(o.EmploymentStatus) {
		toSerialize["employmentStatus"] = o.EmploymentStatus
	}
	if !IsNil(o.OvertimeExemptStatus) {
		toSerialize["overtimeExemptStatus"] = o.OvertimeExemptStatus
	}
	if !IsNil(o.KeyEmployeeStatus) {
		toSerialize["keyEmployeeStatus"] = o.KeyEmployeeStatus
	}
	if !IsNil(o.Gender) {
		toSerialize["gender"] = o.Gender
	}
	if !IsNil(o.HiredDate) {
		toSerialize["hiredDate"] = o.HiredDate
	}
	if !IsNil(o.OriginalHireDate) {
		toSerialize["originalHireDate"] = o.OriginalHireDate
	}
	if !IsNil(o.AdjustedServiceDate) {
		toSerialize["adjustedServiceDate"] = o.AdjustedServiceDate
	}
	if !IsNil(o.TerminationDate) {
		toSerialize["terminationDate"] = o.TerminationDate
	}
	if !IsNil(o.BirthDate) {
		toSerialize["birthDate"] = o.BirthDate
	}
	if !IsNil(o.UsCitizenshipStatus) {
		toSerialize["usCitizenshipStatus"] = o.UsCitizenshipStatus
	}
	if !IsNil(o.Ethnicity) {
		toSerialize["ethnicity"] = o.Ethnicity
	}
	if !IsNil(o.DisabilityStatus) {
		toSerialize["disabilityStatus"] = o.DisabilityStatus
	}
	if !IsNil(o.DisabilityDescription) {
		toSerialize["disabilityDescription"] = o.DisabilityDescription
	}
	if !IsNil(o.I9OnFileStatus) {
		toSerialize["i9OnFileStatus"] = o.I9OnFileStatus
	}
	if !IsNil(o.WorkAuthorizationExpirationDate) {
		toSerialize["workAuthorizationExpirationDate"] = o.WorkAuthorizationExpirationDate
	}
	if !IsNil(o.UsVeteranStatus) {
		toSerialize["usVeteranStatus"] = o.UsVeteranStatus
	}
	if !IsNil(o.MilitaryStatus) {
		toSerialize["militaryStatus"] = o.MilitaryStatus
	}
	if !IsNil(o.AccountNumber) {
		toSerialize["accountNumber"] = o.AccountNumber
	}
	if !IsNil(o.Note) {
		toSerialize["note"] = o.Note
	}
	if !IsNil(o.AdditionalNotes) {
		toSerialize["additionalNotes"] = o.AdditionalNotes
	}
	if !IsNil(o.BillingRateId) {
		toSerialize["billingRateId"] = o.BillingRateId
	}
	if !IsNil(o.EmployeePayroll) {
		toSerialize["employeePayroll"] = o.EmployeePayroll
	}
	if !IsNil(o.ExternalId) {
		toSerialize["externalId"] = o.ExternalId
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *QuickbooksDesktopEmployeesPostRequest) UnmarshalJSON(data []byte) (err error) {
	varQuickbooksDesktopEmployeesPostRequest := _QuickbooksDesktopEmployeesPostRequest{}

	err = json.Unmarshal(data, &varQuickbooksDesktopEmployeesPostRequest)

	if err != nil {
		return err
	}

	*o = QuickbooksDesktopEmployeesPostRequest(varQuickbooksDesktopEmployeesPostRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "isActive")
		delete(additionalProperties, "salutation")
		delete(additionalProperties, "firstName")
		delete(additionalProperties, "middleName")
		delete(additionalProperties, "lastName")
		delete(additionalProperties, "jobTitle")
		delete(additionalProperties, "supervisorId")
		delete(additionalProperties, "department")
		delete(additionalProperties, "description")
		delete(additionalProperties, "targetBonus")
		delete(additionalProperties, "address")
		delete(additionalProperties, "printAs")
		delete(additionalProperties, "phone")
		delete(additionalProperties, "mobile")
		delete(additionalProperties, "pager")
		delete(additionalProperties, "pagerPin")
		delete(additionalProperties, "alternatePhone")
		delete(additionalProperties, "fax")
		delete(additionalProperties, "ssn")
		delete(additionalProperties, "email")
		delete(additionalProperties, "customContactFields")
		delete(additionalProperties, "emergencyContact")
		delete(additionalProperties, "employeeType")
		delete(additionalProperties, "employmentStatus")
		delete(additionalProperties, "overtimeExemptStatus")
		delete(additionalProperties, "keyEmployeeStatus")
		delete(additionalProperties, "gender")
		delete(additionalProperties, "hiredDate")
		delete(additionalProperties, "originalHireDate")
		delete(additionalProperties, "adjustedServiceDate")
		delete(additionalProperties, "terminationDate")
		delete(additionalProperties, "birthDate")
		delete(additionalProperties, "usCitizenshipStatus")
		delete(additionalProperties, "ethnicity")
		delete(additionalProperties, "disabilityStatus")
		delete(additionalProperties, "disabilityDescription")
		delete(additionalProperties, "i9OnFileStatus")
		delete(additionalProperties, "workAuthorizationExpirationDate")
		delete(additionalProperties, "usVeteranStatus")
		delete(additionalProperties, "militaryStatus")
		delete(additionalProperties, "accountNumber")
		delete(additionalProperties, "note")
		delete(additionalProperties, "additionalNotes")
		delete(additionalProperties, "billingRateId")
		delete(additionalProperties, "employeePayroll")
		delete(additionalProperties, "externalId")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableQuickbooksDesktopEmployeesPostRequest struct {
	value *QuickbooksDesktopEmployeesPostRequest
	isSet bool
}

func (v NullableQuickbooksDesktopEmployeesPostRequest) Get() *QuickbooksDesktopEmployeesPostRequest {
	return v.value
}

func (v *NullableQuickbooksDesktopEmployeesPostRequest) Set(val *QuickbooksDesktopEmployeesPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableQuickbooksDesktopEmployeesPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableQuickbooksDesktopEmployeesPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQuickbooksDesktopEmployeesPostRequest(val *QuickbooksDesktopEmployeesPostRequest) *NullableQuickbooksDesktopEmployeesPostRequest {
	return &NullableQuickbooksDesktopEmployeesPostRequest{value: val, isSet: true}
}

func (v NullableQuickbooksDesktopEmployeesPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQuickbooksDesktopEmployeesPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


