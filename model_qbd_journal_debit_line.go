/*
Conductor API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package conductor

import (
	"encoding/json"
	"fmt"
)

// checks if the QbdJournalDebitLine type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QbdJournalDebitLine{}

// QbdJournalDebitLine struct for QbdJournalDebitLine
type QbdJournalDebitLine struct {
	// The unique identifier assigned by QuickBooks to this journal debit line. This ID is unique across all transaction line types.
	Id string `json:"id"`
	// The type of object. This value is always `\"qbd_journal_debit_line\"`.
	ObjectType string `json:"objectType"`
	Account *QbdJournalDebitLineAccount `json:"account,omitempty"`
	// The monetary amount of this journal debit line, represented as a decimal string.
	Amount *string `json:"amount,omitempty"`
	// A memo or note for this journal debit line.
	Memo *string `json:"memo,omitempty"`
	Entity *QbdJournalDebitLineEntity `json:"entity,omitempty"`
	Class *QbdJournalDebitLineClass `json:"class,omitempty"`
	SalesTaxItem *QbdJournalDebitLineSalesTaxItem `json:"salesTaxItem,omitempty"`
	// The billing status of this journal debit line.
	BillingStatus *string `json:"billingStatus,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _QbdJournalDebitLine QbdJournalDebitLine

// NewQbdJournalDebitLine instantiates a new QbdJournalDebitLine object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQbdJournalDebitLine(id string, objectType string) *QbdJournalDebitLine {
	this := QbdJournalDebitLine{}
	this.Id = id
	this.ObjectType = objectType
	return &this
}

// NewQbdJournalDebitLineWithDefaults instantiates a new QbdJournalDebitLine object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQbdJournalDebitLineWithDefaults() *QbdJournalDebitLine {
	this := QbdJournalDebitLine{}
	return &this
}

// GetId returns the Id field value
func (o *QbdJournalDebitLine) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *QbdJournalDebitLine) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *QbdJournalDebitLine) SetId(v string) {
	o.Id = v
}

// GetObjectType returns the ObjectType field value
func (o *QbdJournalDebitLine) GetObjectType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ObjectType
}

// GetObjectTypeOk returns a tuple with the ObjectType field value
// and a boolean to check if the value has been set.
func (o *QbdJournalDebitLine) GetObjectTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ObjectType, true
}

// SetObjectType sets field value
func (o *QbdJournalDebitLine) SetObjectType(v string) {
	o.ObjectType = v
}

// GetAccount returns the Account field value if set, zero value otherwise.
func (o *QbdJournalDebitLine) GetAccount() QbdJournalDebitLineAccount {
	if o == nil || IsNil(o.Account) {
		var ret QbdJournalDebitLineAccount
		return ret
	}
	return *o.Account
}

// GetAccountOk returns a tuple with the Account field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QbdJournalDebitLine) GetAccountOk() (*QbdJournalDebitLineAccount, bool) {
	if o == nil || IsNil(o.Account) {
		return nil, false
	}
	return o.Account, true
}

// HasAccount returns a boolean if a field has been set.
func (o *QbdJournalDebitLine) HasAccount() bool {
	if o != nil && !IsNil(o.Account) {
		return true
	}

	return false
}

// SetAccount gets a reference to the given QbdJournalDebitLineAccount and assigns it to the Account field.
func (o *QbdJournalDebitLine) SetAccount(v QbdJournalDebitLineAccount) {
	o.Account = &v
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *QbdJournalDebitLine) GetAmount() string {
	if o == nil || IsNil(o.Amount) {
		var ret string
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QbdJournalDebitLine) GetAmountOk() (*string, bool) {
	if o == nil || IsNil(o.Amount) {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *QbdJournalDebitLine) HasAmount() bool {
	if o != nil && !IsNil(o.Amount) {
		return true
	}

	return false
}

// SetAmount gets a reference to the given string and assigns it to the Amount field.
func (o *QbdJournalDebitLine) SetAmount(v string) {
	o.Amount = &v
}

// GetMemo returns the Memo field value if set, zero value otherwise.
func (o *QbdJournalDebitLine) GetMemo() string {
	if o == nil || IsNil(o.Memo) {
		var ret string
		return ret
	}
	return *o.Memo
}

// GetMemoOk returns a tuple with the Memo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QbdJournalDebitLine) GetMemoOk() (*string, bool) {
	if o == nil || IsNil(o.Memo) {
		return nil, false
	}
	return o.Memo, true
}

// HasMemo returns a boolean if a field has been set.
func (o *QbdJournalDebitLine) HasMemo() bool {
	if o != nil && !IsNil(o.Memo) {
		return true
	}

	return false
}

// SetMemo gets a reference to the given string and assigns it to the Memo field.
func (o *QbdJournalDebitLine) SetMemo(v string) {
	o.Memo = &v
}

// GetEntity returns the Entity field value if set, zero value otherwise.
func (o *QbdJournalDebitLine) GetEntity() QbdJournalDebitLineEntity {
	if o == nil || IsNil(o.Entity) {
		var ret QbdJournalDebitLineEntity
		return ret
	}
	return *o.Entity
}

// GetEntityOk returns a tuple with the Entity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QbdJournalDebitLine) GetEntityOk() (*QbdJournalDebitLineEntity, bool) {
	if o == nil || IsNil(o.Entity) {
		return nil, false
	}
	return o.Entity, true
}

// HasEntity returns a boolean if a field has been set.
func (o *QbdJournalDebitLine) HasEntity() bool {
	if o != nil && !IsNil(o.Entity) {
		return true
	}

	return false
}

// SetEntity gets a reference to the given QbdJournalDebitLineEntity and assigns it to the Entity field.
func (o *QbdJournalDebitLine) SetEntity(v QbdJournalDebitLineEntity) {
	o.Entity = &v
}

// GetClass returns the Class field value if set, zero value otherwise.
func (o *QbdJournalDebitLine) GetClass() QbdJournalDebitLineClass {
	if o == nil || IsNil(o.Class) {
		var ret QbdJournalDebitLineClass
		return ret
	}
	return *o.Class
}

// GetClassOk returns a tuple with the Class field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QbdJournalDebitLine) GetClassOk() (*QbdJournalDebitLineClass, bool) {
	if o == nil || IsNil(o.Class) {
		return nil, false
	}
	return o.Class, true
}

// HasClass returns a boolean if a field has been set.
func (o *QbdJournalDebitLine) HasClass() bool {
	if o != nil && !IsNil(o.Class) {
		return true
	}

	return false
}

// SetClass gets a reference to the given QbdJournalDebitLineClass and assigns it to the Class field.
func (o *QbdJournalDebitLine) SetClass(v QbdJournalDebitLineClass) {
	o.Class = &v
}

// GetSalesTaxItem returns the SalesTaxItem field value if set, zero value otherwise.
func (o *QbdJournalDebitLine) GetSalesTaxItem() QbdJournalDebitLineSalesTaxItem {
	if o == nil || IsNil(o.SalesTaxItem) {
		var ret QbdJournalDebitLineSalesTaxItem
		return ret
	}
	return *o.SalesTaxItem
}

// GetSalesTaxItemOk returns a tuple with the SalesTaxItem field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QbdJournalDebitLine) GetSalesTaxItemOk() (*QbdJournalDebitLineSalesTaxItem, bool) {
	if o == nil || IsNil(o.SalesTaxItem) {
		return nil, false
	}
	return o.SalesTaxItem, true
}

// HasSalesTaxItem returns a boolean if a field has been set.
func (o *QbdJournalDebitLine) HasSalesTaxItem() bool {
	if o != nil && !IsNil(o.SalesTaxItem) {
		return true
	}

	return false
}

// SetSalesTaxItem gets a reference to the given QbdJournalDebitLineSalesTaxItem and assigns it to the SalesTaxItem field.
func (o *QbdJournalDebitLine) SetSalesTaxItem(v QbdJournalDebitLineSalesTaxItem) {
	o.SalesTaxItem = &v
}

// GetBillingStatus returns the BillingStatus field value if set, zero value otherwise.
func (o *QbdJournalDebitLine) GetBillingStatus() string {
	if o == nil || IsNil(o.BillingStatus) {
		var ret string
		return ret
	}
	return *o.BillingStatus
}

// GetBillingStatusOk returns a tuple with the BillingStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QbdJournalDebitLine) GetBillingStatusOk() (*string, bool) {
	if o == nil || IsNil(o.BillingStatus) {
		return nil, false
	}
	return o.BillingStatus, true
}

// HasBillingStatus returns a boolean if a field has been set.
func (o *QbdJournalDebitLine) HasBillingStatus() bool {
	if o != nil && !IsNil(o.BillingStatus) {
		return true
	}

	return false
}

// SetBillingStatus gets a reference to the given string and assigns it to the BillingStatus field.
func (o *QbdJournalDebitLine) SetBillingStatus(v string) {
	o.BillingStatus = &v
}

func (o QbdJournalDebitLine) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QbdJournalDebitLine) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["objectType"] = o.ObjectType
	if !IsNil(o.Account) {
		toSerialize["account"] = o.Account
	}
	if !IsNil(o.Amount) {
		toSerialize["amount"] = o.Amount
	}
	if !IsNil(o.Memo) {
		toSerialize["memo"] = o.Memo
	}
	if !IsNil(o.Entity) {
		toSerialize["entity"] = o.Entity
	}
	if !IsNil(o.Class) {
		toSerialize["class"] = o.Class
	}
	if !IsNil(o.SalesTaxItem) {
		toSerialize["salesTaxItem"] = o.SalesTaxItem
	}
	if !IsNil(o.BillingStatus) {
		toSerialize["billingStatus"] = o.BillingStatus
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *QbdJournalDebitLine) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"objectType",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varQbdJournalDebitLine := _QbdJournalDebitLine{}

	err = json.Unmarshal(data, &varQbdJournalDebitLine)

	if err != nil {
		return err
	}

	*o = QbdJournalDebitLine(varQbdJournalDebitLine)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "objectType")
		delete(additionalProperties, "account")
		delete(additionalProperties, "amount")
		delete(additionalProperties, "memo")
		delete(additionalProperties, "entity")
		delete(additionalProperties, "class")
		delete(additionalProperties, "salesTaxItem")
		delete(additionalProperties, "billingStatus")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableQbdJournalDebitLine struct {
	value *QbdJournalDebitLine
	isSet bool
}

func (v NullableQbdJournalDebitLine) Get() *QbdJournalDebitLine {
	return v.value
}

func (v *NullableQbdJournalDebitLine) Set(val *QbdJournalDebitLine) {
	v.value = val
	v.isSet = true
}

func (v NullableQbdJournalDebitLine) IsSet() bool {
	return v.isSet
}

func (v *NullableQbdJournalDebitLine) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQbdJournalDebitLine(val *QbdJournalDebitLine) *NullableQbdJournalDebitLine {
	return &NullableQbdJournalDebitLine{value: val, isSet: true}
}

func (v NullableQbdJournalDebitLine) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQbdJournalDebitLine) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


