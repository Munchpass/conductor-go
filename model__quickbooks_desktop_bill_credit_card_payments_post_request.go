/*
Conductor API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package conductor

import (
	"encoding/json"
	"fmt"
)

// checks if the QuickbooksDesktopBillCreditCardPaymentsPostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QuickbooksDesktopBillCreditCardPaymentsPostRequest{}

// QuickbooksDesktopBillCreditCardPaymentsPostRequest struct for QuickbooksDesktopBillCreditCardPaymentsPostRequest
type QuickbooksDesktopBillCreditCardPaymentsPostRequest struct {
	// The vendor who sent the bill(s) that this bill credit card payment is paying and who will receive this payment.  **IMPORTANT**: This vendor must match the `vendor` on the bill(s) specified in `applyToTransactions`; otherwise, QuickBooks will say the `transactionId` in `applyToTransactions` \"does not exist\".
	VendorId string `json:"vendorId"`
	// The Accounts-Payable (A/P) account to which this bill credit card payment is assigned, used to track the amount owed. If not specified, QuickBooks Desktop will use its default A/P account.  **IMPORTANT**: If this bill credit card payment is linked to other transactions, this A/P account must match the `payablesAccount` used in those other transactions.
	PayablesAccountId *string `json:"payablesAccountId,omitempty"`
	// The date of this bill credit card payment, in ISO 8601 format (YYYY-MM-DD).
	TransactionDate string `json:"transactionDate"`
	// The credit card account to which this bill credit card payment is being charged. This bill credit card payment will decrease the balance of this account.
	CreditCardAccountId string `json:"creditCardAccountId"`
	// The case-sensitive user-defined reference number for this bill credit card payment, which can be used to identify the transaction in QuickBooks. This value is not required to be unique and can be arbitrarily changed by the QuickBooks user. When left blank in this create request, this field will be left blank in QuickBooks (i.e., it does *not* auto-increment).
	RefNumber *string `json:"refNumber,omitempty"`
	// A memo or note for this bill credit card payment.
	Memo *string `json:"memo,omitempty"`
	// The market exchange rate between this bill credit card payment's currency and the home currency in QuickBooks at the time of this transaction. Represented as a decimal value (e.g., 1.2345 for 1 EUR = 1.2345 USD if USD is the home currency).
	ExchangeRate *float32 `json:"exchangeRate,omitempty"`
	// A globally unique identifier (GUID) you, the developer, can provide for tracking this object in your external system. This field is immutable and can only be set during object creation.  **IMPORTANT**: This field must be formatted as a valid GUID; otherwise, QuickBooks will return an error.
	ExternalId *string `json:"externalId,omitempty"`
	// The bills to be paid by this bill credit card payment. This will create a link between this bill credit card payment and the specified bills.  **IMPORTANT**: In each `applyToTransactions` object, you must specify either `paymentAmount`, `applyCredits`, `discountAmount`, or any combination of these; if none of these are specified, you will receive an error for an empty transaction.  **IMPORTANT**: The target bill must have `isPaid=false`, otherwise, QuickBooks will report this object as \"cannot be found\".
	ApplyToTransactions []QuickbooksDesktopBillCheckPaymentsPostRequestApplyToTransactionsInner `json:"applyToTransactions"`
	AdditionalProperties map[string]interface{}
}

type _QuickbooksDesktopBillCreditCardPaymentsPostRequest QuickbooksDesktopBillCreditCardPaymentsPostRequest

// NewQuickbooksDesktopBillCreditCardPaymentsPostRequest instantiates a new QuickbooksDesktopBillCreditCardPaymentsPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQuickbooksDesktopBillCreditCardPaymentsPostRequest(vendorId string, transactionDate string, creditCardAccountId string, applyToTransactions []QuickbooksDesktopBillCheckPaymentsPostRequestApplyToTransactionsInner) *QuickbooksDesktopBillCreditCardPaymentsPostRequest {
	this := QuickbooksDesktopBillCreditCardPaymentsPostRequest{}
	this.VendorId = vendorId
	this.TransactionDate = transactionDate
	this.CreditCardAccountId = creditCardAccountId
	this.ApplyToTransactions = applyToTransactions
	return &this
}

// NewQuickbooksDesktopBillCreditCardPaymentsPostRequestWithDefaults instantiates a new QuickbooksDesktopBillCreditCardPaymentsPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQuickbooksDesktopBillCreditCardPaymentsPostRequestWithDefaults() *QuickbooksDesktopBillCreditCardPaymentsPostRequest {
	this := QuickbooksDesktopBillCreditCardPaymentsPostRequest{}
	return &this
}

// GetVendorId returns the VendorId field value
func (o *QuickbooksDesktopBillCreditCardPaymentsPostRequest) GetVendorId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.VendorId
}

// GetVendorIdOk returns a tuple with the VendorId field value
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopBillCreditCardPaymentsPostRequest) GetVendorIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VendorId, true
}

// SetVendorId sets field value
func (o *QuickbooksDesktopBillCreditCardPaymentsPostRequest) SetVendorId(v string) {
	o.VendorId = v
}

// GetPayablesAccountId returns the PayablesAccountId field value if set, zero value otherwise.
func (o *QuickbooksDesktopBillCreditCardPaymentsPostRequest) GetPayablesAccountId() string {
	if o == nil || IsNil(o.PayablesAccountId) {
		var ret string
		return ret
	}
	return *o.PayablesAccountId
}

// GetPayablesAccountIdOk returns a tuple with the PayablesAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopBillCreditCardPaymentsPostRequest) GetPayablesAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.PayablesAccountId) {
		return nil, false
	}
	return o.PayablesAccountId, true
}

// HasPayablesAccountId returns a boolean if a field has been set.
func (o *QuickbooksDesktopBillCreditCardPaymentsPostRequest) HasPayablesAccountId() bool {
	if o != nil && !IsNil(o.PayablesAccountId) {
		return true
	}

	return false
}

// SetPayablesAccountId gets a reference to the given string and assigns it to the PayablesAccountId field.
func (o *QuickbooksDesktopBillCreditCardPaymentsPostRequest) SetPayablesAccountId(v string) {
	o.PayablesAccountId = &v
}

// GetTransactionDate returns the TransactionDate field value
func (o *QuickbooksDesktopBillCreditCardPaymentsPostRequest) GetTransactionDate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TransactionDate
}

// GetTransactionDateOk returns a tuple with the TransactionDate field value
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopBillCreditCardPaymentsPostRequest) GetTransactionDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TransactionDate, true
}

// SetTransactionDate sets field value
func (o *QuickbooksDesktopBillCreditCardPaymentsPostRequest) SetTransactionDate(v string) {
	o.TransactionDate = v
}

// GetCreditCardAccountId returns the CreditCardAccountId field value
func (o *QuickbooksDesktopBillCreditCardPaymentsPostRequest) GetCreditCardAccountId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreditCardAccountId
}

// GetCreditCardAccountIdOk returns a tuple with the CreditCardAccountId field value
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopBillCreditCardPaymentsPostRequest) GetCreditCardAccountIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreditCardAccountId, true
}

// SetCreditCardAccountId sets field value
func (o *QuickbooksDesktopBillCreditCardPaymentsPostRequest) SetCreditCardAccountId(v string) {
	o.CreditCardAccountId = v
}

// GetRefNumber returns the RefNumber field value if set, zero value otherwise.
func (o *QuickbooksDesktopBillCreditCardPaymentsPostRequest) GetRefNumber() string {
	if o == nil || IsNil(o.RefNumber) {
		var ret string
		return ret
	}
	return *o.RefNumber
}

// GetRefNumberOk returns a tuple with the RefNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopBillCreditCardPaymentsPostRequest) GetRefNumberOk() (*string, bool) {
	if o == nil || IsNil(o.RefNumber) {
		return nil, false
	}
	return o.RefNumber, true
}

// HasRefNumber returns a boolean if a field has been set.
func (o *QuickbooksDesktopBillCreditCardPaymentsPostRequest) HasRefNumber() bool {
	if o != nil && !IsNil(o.RefNumber) {
		return true
	}

	return false
}

// SetRefNumber gets a reference to the given string and assigns it to the RefNumber field.
func (o *QuickbooksDesktopBillCreditCardPaymentsPostRequest) SetRefNumber(v string) {
	o.RefNumber = &v
}

// GetMemo returns the Memo field value if set, zero value otherwise.
func (o *QuickbooksDesktopBillCreditCardPaymentsPostRequest) GetMemo() string {
	if o == nil || IsNil(o.Memo) {
		var ret string
		return ret
	}
	return *o.Memo
}

// GetMemoOk returns a tuple with the Memo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopBillCreditCardPaymentsPostRequest) GetMemoOk() (*string, bool) {
	if o == nil || IsNil(o.Memo) {
		return nil, false
	}
	return o.Memo, true
}

// HasMemo returns a boolean if a field has been set.
func (o *QuickbooksDesktopBillCreditCardPaymentsPostRequest) HasMemo() bool {
	if o != nil && !IsNil(o.Memo) {
		return true
	}

	return false
}

// SetMemo gets a reference to the given string and assigns it to the Memo field.
func (o *QuickbooksDesktopBillCreditCardPaymentsPostRequest) SetMemo(v string) {
	o.Memo = &v
}

// GetExchangeRate returns the ExchangeRate field value if set, zero value otherwise.
func (o *QuickbooksDesktopBillCreditCardPaymentsPostRequest) GetExchangeRate() float32 {
	if o == nil || IsNil(o.ExchangeRate) {
		var ret float32
		return ret
	}
	return *o.ExchangeRate
}

// GetExchangeRateOk returns a tuple with the ExchangeRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopBillCreditCardPaymentsPostRequest) GetExchangeRateOk() (*float32, bool) {
	if o == nil || IsNil(o.ExchangeRate) {
		return nil, false
	}
	return o.ExchangeRate, true
}

// HasExchangeRate returns a boolean if a field has been set.
func (o *QuickbooksDesktopBillCreditCardPaymentsPostRequest) HasExchangeRate() bool {
	if o != nil && !IsNil(o.ExchangeRate) {
		return true
	}

	return false
}

// SetExchangeRate gets a reference to the given float32 and assigns it to the ExchangeRate field.
func (o *QuickbooksDesktopBillCreditCardPaymentsPostRequest) SetExchangeRate(v float32) {
	o.ExchangeRate = &v
}

// GetExternalId returns the ExternalId field value if set, zero value otherwise.
func (o *QuickbooksDesktopBillCreditCardPaymentsPostRequest) GetExternalId() string {
	if o == nil || IsNil(o.ExternalId) {
		var ret string
		return ret
	}
	return *o.ExternalId
}

// GetExternalIdOk returns a tuple with the ExternalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopBillCreditCardPaymentsPostRequest) GetExternalIdOk() (*string, bool) {
	if o == nil || IsNil(o.ExternalId) {
		return nil, false
	}
	return o.ExternalId, true
}

// HasExternalId returns a boolean if a field has been set.
func (o *QuickbooksDesktopBillCreditCardPaymentsPostRequest) HasExternalId() bool {
	if o != nil && !IsNil(o.ExternalId) {
		return true
	}

	return false
}

// SetExternalId gets a reference to the given string and assigns it to the ExternalId field.
func (o *QuickbooksDesktopBillCreditCardPaymentsPostRequest) SetExternalId(v string) {
	o.ExternalId = &v
}

// GetApplyToTransactions returns the ApplyToTransactions field value
func (o *QuickbooksDesktopBillCreditCardPaymentsPostRequest) GetApplyToTransactions() []QuickbooksDesktopBillCheckPaymentsPostRequestApplyToTransactionsInner {
	if o == nil {
		var ret []QuickbooksDesktopBillCheckPaymentsPostRequestApplyToTransactionsInner
		return ret
	}

	return o.ApplyToTransactions
}

// GetApplyToTransactionsOk returns a tuple with the ApplyToTransactions field value
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopBillCreditCardPaymentsPostRequest) GetApplyToTransactionsOk() ([]QuickbooksDesktopBillCheckPaymentsPostRequestApplyToTransactionsInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.ApplyToTransactions, true
}

// SetApplyToTransactions sets field value
func (o *QuickbooksDesktopBillCreditCardPaymentsPostRequest) SetApplyToTransactions(v []QuickbooksDesktopBillCheckPaymentsPostRequestApplyToTransactionsInner) {
	o.ApplyToTransactions = v
}

func (o QuickbooksDesktopBillCreditCardPaymentsPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QuickbooksDesktopBillCreditCardPaymentsPostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["vendorId"] = o.VendorId
	if !IsNil(o.PayablesAccountId) {
		toSerialize["payablesAccountId"] = o.PayablesAccountId
	}
	toSerialize["transactionDate"] = o.TransactionDate
	toSerialize["creditCardAccountId"] = o.CreditCardAccountId
	if !IsNil(o.RefNumber) {
		toSerialize["refNumber"] = o.RefNumber
	}
	if !IsNil(o.Memo) {
		toSerialize["memo"] = o.Memo
	}
	if !IsNil(o.ExchangeRate) {
		toSerialize["exchangeRate"] = o.ExchangeRate
	}
	if !IsNil(o.ExternalId) {
		toSerialize["externalId"] = o.ExternalId
	}
	toSerialize["applyToTransactions"] = o.ApplyToTransactions

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *QuickbooksDesktopBillCreditCardPaymentsPostRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"vendorId",
		"transactionDate",
		"creditCardAccountId",
		"applyToTransactions",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varQuickbooksDesktopBillCreditCardPaymentsPostRequest := _QuickbooksDesktopBillCreditCardPaymentsPostRequest{}

	err = json.Unmarshal(data, &varQuickbooksDesktopBillCreditCardPaymentsPostRequest)

	if err != nil {
		return err
	}

	*o = QuickbooksDesktopBillCreditCardPaymentsPostRequest(varQuickbooksDesktopBillCreditCardPaymentsPostRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "vendorId")
		delete(additionalProperties, "payablesAccountId")
		delete(additionalProperties, "transactionDate")
		delete(additionalProperties, "creditCardAccountId")
		delete(additionalProperties, "refNumber")
		delete(additionalProperties, "memo")
		delete(additionalProperties, "exchangeRate")
		delete(additionalProperties, "externalId")
		delete(additionalProperties, "applyToTransactions")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableQuickbooksDesktopBillCreditCardPaymentsPostRequest struct {
	value *QuickbooksDesktopBillCreditCardPaymentsPostRequest
	isSet bool
}

func (v NullableQuickbooksDesktopBillCreditCardPaymentsPostRequest) Get() *QuickbooksDesktopBillCreditCardPaymentsPostRequest {
	return v.value
}

func (v *NullableQuickbooksDesktopBillCreditCardPaymentsPostRequest) Set(val *QuickbooksDesktopBillCreditCardPaymentsPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableQuickbooksDesktopBillCreditCardPaymentsPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableQuickbooksDesktopBillCreditCardPaymentsPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQuickbooksDesktopBillCreditCardPaymentsPostRequest(val *QuickbooksDesktopBillCreditCardPaymentsPostRequest) *NullableQuickbooksDesktopBillCreditCardPaymentsPostRequest {
	return &NullableQuickbooksDesktopBillCreditCardPaymentsPostRequest{value: val, isSet: true}
}

func (v NullableQuickbooksDesktopBillCreditCardPaymentsPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQuickbooksDesktopBillCreditCardPaymentsPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


