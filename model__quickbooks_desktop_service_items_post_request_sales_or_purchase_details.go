/*
Conductor API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package conductor

import (
	"encoding/json"
	"fmt"
)

// checks if the QuickbooksDesktopServiceItemsPostRequestSalesOrPurchaseDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QuickbooksDesktopServiceItemsPostRequestSalesOrPurchaseDetails{}

// QuickbooksDesktopServiceItemsPostRequestSalesOrPurchaseDetails Details for service items that are exclusively sold or exclusively purchased, but not both. This typically applies to non-inventory items (like a purchased office supply that isn't resold) or service items (like consulting services that are sold but not purchased).  **IMPORTANT**: You must specify either `salesOrPurchaseDetails` or `salesAndPurchaseDetails` when creating a service item, but never both because an item cannot have both configurations.
type QuickbooksDesktopServiceItemsPostRequestSalesOrPurchaseDetails struct {
	// A description of this item.
	Description *string `json:"description,omitempty"`
	// The price at which this item is purchased or sold, represented as a decimal string.
	Price *string `json:"price,omitempty"`
	// The price of this item expressed as a percentage, used instead of `price` when the item's cost is calculated as a percentage of another amount. For example, a service item that costs a percentage of another item's price.
	PricePercentage *string `json:"pricePercentage,omitempty"`
	// The posting account to which transactions involving this item are posted. This could be an income account when selling or an expense account when purchasing.
	PostingAccountId string `json:"postingAccountId"`
	AdditionalProperties map[string]interface{}
}

type _QuickbooksDesktopServiceItemsPostRequestSalesOrPurchaseDetails QuickbooksDesktopServiceItemsPostRequestSalesOrPurchaseDetails

// NewQuickbooksDesktopServiceItemsPostRequestSalesOrPurchaseDetails instantiates a new QuickbooksDesktopServiceItemsPostRequestSalesOrPurchaseDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQuickbooksDesktopServiceItemsPostRequestSalesOrPurchaseDetails(postingAccountId string) *QuickbooksDesktopServiceItemsPostRequestSalesOrPurchaseDetails {
	this := QuickbooksDesktopServiceItemsPostRequestSalesOrPurchaseDetails{}
	this.PostingAccountId = postingAccountId
	return &this
}

// NewQuickbooksDesktopServiceItemsPostRequestSalesOrPurchaseDetailsWithDefaults instantiates a new QuickbooksDesktopServiceItemsPostRequestSalesOrPurchaseDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQuickbooksDesktopServiceItemsPostRequestSalesOrPurchaseDetailsWithDefaults() *QuickbooksDesktopServiceItemsPostRequestSalesOrPurchaseDetails {
	this := QuickbooksDesktopServiceItemsPostRequestSalesOrPurchaseDetails{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *QuickbooksDesktopServiceItemsPostRequestSalesOrPurchaseDetails) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopServiceItemsPostRequestSalesOrPurchaseDetails) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *QuickbooksDesktopServiceItemsPostRequestSalesOrPurchaseDetails) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *QuickbooksDesktopServiceItemsPostRequestSalesOrPurchaseDetails) SetDescription(v string) {
	o.Description = &v
}

// GetPrice returns the Price field value if set, zero value otherwise.
func (o *QuickbooksDesktopServiceItemsPostRequestSalesOrPurchaseDetails) GetPrice() string {
	if o == nil || IsNil(o.Price) {
		var ret string
		return ret
	}
	return *o.Price
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopServiceItemsPostRequestSalesOrPurchaseDetails) GetPriceOk() (*string, bool) {
	if o == nil || IsNil(o.Price) {
		return nil, false
	}
	return o.Price, true
}

// HasPrice returns a boolean if a field has been set.
func (o *QuickbooksDesktopServiceItemsPostRequestSalesOrPurchaseDetails) HasPrice() bool {
	if o != nil && !IsNil(o.Price) {
		return true
	}

	return false
}

// SetPrice gets a reference to the given string and assigns it to the Price field.
func (o *QuickbooksDesktopServiceItemsPostRequestSalesOrPurchaseDetails) SetPrice(v string) {
	o.Price = &v
}

// GetPricePercentage returns the PricePercentage field value if set, zero value otherwise.
func (o *QuickbooksDesktopServiceItemsPostRequestSalesOrPurchaseDetails) GetPricePercentage() string {
	if o == nil || IsNil(o.PricePercentage) {
		var ret string
		return ret
	}
	return *o.PricePercentage
}

// GetPricePercentageOk returns a tuple with the PricePercentage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopServiceItemsPostRequestSalesOrPurchaseDetails) GetPricePercentageOk() (*string, bool) {
	if o == nil || IsNil(o.PricePercentage) {
		return nil, false
	}
	return o.PricePercentage, true
}

// HasPricePercentage returns a boolean if a field has been set.
func (o *QuickbooksDesktopServiceItemsPostRequestSalesOrPurchaseDetails) HasPricePercentage() bool {
	if o != nil && !IsNil(o.PricePercentage) {
		return true
	}

	return false
}

// SetPricePercentage gets a reference to the given string and assigns it to the PricePercentage field.
func (o *QuickbooksDesktopServiceItemsPostRequestSalesOrPurchaseDetails) SetPricePercentage(v string) {
	o.PricePercentage = &v
}

// GetPostingAccountId returns the PostingAccountId field value
func (o *QuickbooksDesktopServiceItemsPostRequestSalesOrPurchaseDetails) GetPostingAccountId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PostingAccountId
}

// GetPostingAccountIdOk returns a tuple with the PostingAccountId field value
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopServiceItemsPostRequestSalesOrPurchaseDetails) GetPostingAccountIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PostingAccountId, true
}

// SetPostingAccountId sets field value
func (o *QuickbooksDesktopServiceItemsPostRequestSalesOrPurchaseDetails) SetPostingAccountId(v string) {
	o.PostingAccountId = v
}

func (o QuickbooksDesktopServiceItemsPostRequestSalesOrPurchaseDetails) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QuickbooksDesktopServiceItemsPostRequestSalesOrPurchaseDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Price) {
		toSerialize["price"] = o.Price
	}
	if !IsNil(o.PricePercentage) {
		toSerialize["pricePercentage"] = o.PricePercentage
	}
	toSerialize["postingAccountId"] = o.PostingAccountId

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *QuickbooksDesktopServiceItemsPostRequestSalesOrPurchaseDetails) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"postingAccountId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varQuickbooksDesktopServiceItemsPostRequestSalesOrPurchaseDetails := _QuickbooksDesktopServiceItemsPostRequestSalesOrPurchaseDetails{}

	err = json.Unmarshal(data, &varQuickbooksDesktopServiceItemsPostRequestSalesOrPurchaseDetails)

	if err != nil {
		return err
	}

	*o = QuickbooksDesktopServiceItemsPostRequestSalesOrPurchaseDetails(varQuickbooksDesktopServiceItemsPostRequestSalesOrPurchaseDetails)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "description")
		delete(additionalProperties, "price")
		delete(additionalProperties, "pricePercentage")
		delete(additionalProperties, "postingAccountId")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableQuickbooksDesktopServiceItemsPostRequestSalesOrPurchaseDetails struct {
	value *QuickbooksDesktopServiceItemsPostRequestSalesOrPurchaseDetails
	isSet bool
}

func (v NullableQuickbooksDesktopServiceItemsPostRequestSalesOrPurchaseDetails) Get() *QuickbooksDesktopServiceItemsPostRequestSalesOrPurchaseDetails {
	return v.value
}

func (v *NullableQuickbooksDesktopServiceItemsPostRequestSalesOrPurchaseDetails) Set(val *QuickbooksDesktopServiceItemsPostRequestSalesOrPurchaseDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableQuickbooksDesktopServiceItemsPostRequestSalesOrPurchaseDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableQuickbooksDesktopServiceItemsPostRequestSalesOrPurchaseDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQuickbooksDesktopServiceItemsPostRequestSalesOrPurchaseDetails(val *QuickbooksDesktopServiceItemsPostRequestSalesOrPurchaseDetails) *NullableQuickbooksDesktopServiceItemsPostRequestSalesOrPurchaseDetails {
	return &NullableQuickbooksDesktopServiceItemsPostRequestSalesOrPurchaseDetails{value: val, isSet: true}
}

func (v NullableQuickbooksDesktopServiceItemsPostRequestSalesOrPurchaseDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQuickbooksDesktopServiceItemsPostRequestSalesOrPurchaseDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


