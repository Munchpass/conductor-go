/*
Conductor API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package conductor

import (
	"encoding/json"
	"fmt"
)

// checks if the QbdExpenseLine type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QbdExpenseLine{}

// QbdExpenseLine struct for QbdExpenseLine
type QbdExpenseLine struct {
	// The unique identifier assigned by QuickBooks to this expense line. This ID is unique across all transaction line types.
	Id string `json:"id"`
	// The type of object. This value is always `\"qbd_expense_line\"`.
	ObjectType string `json:"objectType"`
	Account QbdExpenseLineAccount `json:"account"`
	// The monetary amount of this expense line, represented as a decimal string.
	Amount string `json:"amount"`
	// A memo or note for this expense line.
	Memo string `json:"memo"`
	Payee QbdExpenseLinePayee `json:"payee"`
	Class QbdExpenseLineClass `json:"class"`
	SalesTaxCode QbdExpenseLineSalesTaxCode `json:"salesTaxCode"`
	// The billing status of this expense line.
	BillingStatus string `json:"billingStatus"`
	SalesRepresentative QbdExpenseLineSalesRepresentative `json:"salesRepresentative"`
	// The custom fields for the expense line object, added as user-defined data extensions, not included in the standard QuickBooks object.
	CustomFields []QbdCustomField `json:"customFields"`
	AdditionalProperties map[string]interface{}
}

type _QbdExpenseLine QbdExpenseLine

// NewQbdExpenseLine instantiates a new QbdExpenseLine object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQbdExpenseLine(id string, objectType string, account QbdExpenseLineAccount, amount string, memo string, payee QbdExpenseLinePayee, class QbdExpenseLineClass, salesTaxCode QbdExpenseLineSalesTaxCode, billingStatus string, salesRepresentative QbdExpenseLineSalesRepresentative, customFields []QbdCustomField) *QbdExpenseLine {
	this := QbdExpenseLine{}
	this.Id = id
	this.ObjectType = objectType
	this.Account = account
	this.Amount = amount
	this.Memo = memo
	this.Payee = payee
	this.Class = class
	this.SalesTaxCode = salesTaxCode
	this.BillingStatus = billingStatus
	this.SalesRepresentative = salesRepresentative
	this.CustomFields = customFields
	return &this
}

// NewQbdExpenseLineWithDefaults instantiates a new QbdExpenseLine object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQbdExpenseLineWithDefaults() *QbdExpenseLine {
	this := QbdExpenseLine{}
	return &this
}

// GetId returns the Id field value
func (o *QbdExpenseLine) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *QbdExpenseLine) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *QbdExpenseLine) SetId(v string) {
	o.Id = v
}

// GetObjectType returns the ObjectType field value
func (o *QbdExpenseLine) GetObjectType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ObjectType
}

// GetObjectTypeOk returns a tuple with the ObjectType field value
// and a boolean to check if the value has been set.
func (o *QbdExpenseLine) GetObjectTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ObjectType, true
}

// SetObjectType sets field value
func (o *QbdExpenseLine) SetObjectType(v string) {
	o.ObjectType = v
}

// GetAccount returns the Account field value
func (o *QbdExpenseLine) GetAccount() QbdExpenseLineAccount {
	if o == nil {
		var ret QbdExpenseLineAccount
		return ret
	}

	return o.Account
}

// GetAccountOk returns a tuple with the Account field value
// and a boolean to check if the value has been set.
func (o *QbdExpenseLine) GetAccountOk() (*QbdExpenseLineAccount, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Account, true
}

// SetAccount sets field value
func (o *QbdExpenseLine) SetAccount(v QbdExpenseLineAccount) {
	o.Account = v
}

// GetAmount returns the Amount field value
func (o *QbdExpenseLine) GetAmount() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Amount
}

// GetAmountOk returns a tuple with the Amount field value
// and a boolean to check if the value has been set.
func (o *QbdExpenseLine) GetAmountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Amount, true
}

// SetAmount sets field value
func (o *QbdExpenseLine) SetAmount(v string) {
	o.Amount = v
}

// GetMemo returns the Memo field value
func (o *QbdExpenseLine) GetMemo() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Memo
}

// GetMemoOk returns a tuple with the Memo field value
// and a boolean to check if the value has been set.
func (o *QbdExpenseLine) GetMemoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Memo, true
}

// SetMemo sets field value
func (o *QbdExpenseLine) SetMemo(v string) {
	o.Memo = v
}

// GetPayee returns the Payee field value
func (o *QbdExpenseLine) GetPayee() QbdExpenseLinePayee {
	if o == nil {
		var ret QbdExpenseLinePayee
		return ret
	}

	return o.Payee
}

// GetPayeeOk returns a tuple with the Payee field value
// and a boolean to check if the value has been set.
func (o *QbdExpenseLine) GetPayeeOk() (*QbdExpenseLinePayee, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Payee, true
}

// SetPayee sets field value
func (o *QbdExpenseLine) SetPayee(v QbdExpenseLinePayee) {
	o.Payee = v
}

// GetClass returns the Class field value
func (o *QbdExpenseLine) GetClass() QbdExpenseLineClass {
	if o == nil {
		var ret QbdExpenseLineClass
		return ret
	}

	return o.Class
}

// GetClassOk returns a tuple with the Class field value
// and a boolean to check if the value has been set.
func (o *QbdExpenseLine) GetClassOk() (*QbdExpenseLineClass, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Class, true
}

// SetClass sets field value
func (o *QbdExpenseLine) SetClass(v QbdExpenseLineClass) {
	o.Class = v
}

// GetSalesTaxCode returns the SalesTaxCode field value
func (o *QbdExpenseLine) GetSalesTaxCode() QbdExpenseLineSalesTaxCode {
	if o == nil {
		var ret QbdExpenseLineSalesTaxCode
		return ret
	}

	return o.SalesTaxCode
}

// GetSalesTaxCodeOk returns a tuple with the SalesTaxCode field value
// and a boolean to check if the value has been set.
func (o *QbdExpenseLine) GetSalesTaxCodeOk() (*QbdExpenseLineSalesTaxCode, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SalesTaxCode, true
}

// SetSalesTaxCode sets field value
func (o *QbdExpenseLine) SetSalesTaxCode(v QbdExpenseLineSalesTaxCode) {
	o.SalesTaxCode = v
}

// GetBillingStatus returns the BillingStatus field value
func (o *QbdExpenseLine) GetBillingStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BillingStatus
}

// GetBillingStatusOk returns a tuple with the BillingStatus field value
// and a boolean to check if the value has been set.
func (o *QbdExpenseLine) GetBillingStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BillingStatus, true
}

// SetBillingStatus sets field value
func (o *QbdExpenseLine) SetBillingStatus(v string) {
	o.BillingStatus = v
}

// GetSalesRepresentative returns the SalesRepresentative field value
func (o *QbdExpenseLine) GetSalesRepresentative() QbdExpenseLineSalesRepresentative {
	if o == nil {
		var ret QbdExpenseLineSalesRepresentative
		return ret
	}

	return o.SalesRepresentative
}

// GetSalesRepresentativeOk returns a tuple with the SalesRepresentative field value
// and a boolean to check if the value has been set.
func (o *QbdExpenseLine) GetSalesRepresentativeOk() (*QbdExpenseLineSalesRepresentative, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SalesRepresentative, true
}

// SetSalesRepresentative sets field value
func (o *QbdExpenseLine) SetSalesRepresentative(v QbdExpenseLineSalesRepresentative) {
	o.SalesRepresentative = v
}

// GetCustomFields returns the CustomFields field value
func (o *QbdExpenseLine) GetCustomFields() []QbdCustomField {
	if o == nil {
		var ret []QbdCustomField
		return ret
	}

	return o.CustomFields
}

// GetCustomFieldsOk returns a tuple with the CustomFields field value
// and a boolean to check if the value has been set.
func (o *QbdExpenseLine) GetCustomFieldsOk() ([]QbdCustomField, bool) {
	if o == nil {
		return nil, false
	}
	return o.CustomFields, true
}

// SetCustomFields sets field value
func (o *QbdExpenseLine) SetCustomFields(v []QbdCustomField) {
	o.CustomFields = v
}

func (o QbdExpenseLine) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QbdExpenseLine) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["objectType"] = o.ObjectType
	toSerialize["account"] = o.Account
	toSerialize["amount"] = o.Amount
	toSerialize["memo"] = o.Memo
	toSerialize["payee"] = o.Payee
	toSerialize["class"] = o.Class
	toSerialize["salesTaxCode"] = o.SalesTaxCode
	toSerialize["billingStatus"] = o.BillingStatus
	toSerialize["salesRepresentative"] = o.SalesRepresentative
	toSerialize["customFields"] = o.CustomFields

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *QbdExpenseLine) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"objectType",
		"account",
		"amount",
		"memo",
		"payee",
		"class",
		"salesTaxCode",
		"billingStatus",
		"salesRepresentative",
		"customFields",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varQbdExpenseLine := _QbdExpenseLine{}

	err = json.Unmarshal(data, &varQbdExpenseLine)

	if err != nil {
		return err
	}

	*o = QbdExpenseLine(varQbdExpenseLine)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "objectType")
		delete(additionalProperties, "account")
		delete(additionalProperties, "amount")
		delete(additionalProperties, "memo")
		delete(additionalProperties, "payee")
		delete(additionalProperties, "class")
		delete(additionalProperties, "salesTaxCode")
		delete(additionalProperties, "billingStatus")
		delete(additionalProperties, "salesRepresentative")
		delete(additionalProperties, "customFields")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableQbdExpenseLine struct {
	value *QbdExpenseLine
	isSet bool
}

func (v NullableQbdExpenseLine) Get() *QbdExpenseLine {
	return v.value
}

func (v *NullableQbdExpenseLine) Set(val *QbdExpenseLine) {
	v.value = val
	v.isSet = true
}

func (v NullableQbdExpenseLine) IsSet() bool {
	return v.isSet
}

func (v *NullableQbdExpenseLine) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQbdExpenseLine(val *QbdExpenseLine) *NullableQbdExpenseLine {
	return &NullableQbdExpenseLine{value: val, isSet: true}
}

func (v NullableQbdExpenseLine) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQbdExpenseLine) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


