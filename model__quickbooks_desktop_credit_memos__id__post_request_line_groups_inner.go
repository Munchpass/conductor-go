/*
Conductor API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package conductor

import (
	"encoding/json"
	"fmt"
)

// checks if the QuickbooksDesktopCreditMemosIdPostRequestLineGroupsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QuickbooksDesktopCreditMemosIdPostRequestLineGroupsInner{}

// QuickbooksDesktopCreditMemosIdPostRequestLineGroupsInner struct for QuickbooksDesktopCreditMemosIdPostRequestLineGroupsInner
type QuickbooksDesktopCreditMemosIdPostRequestLineGroupsInner struct {
	// The QuickBooks-assigned unique identifier of an existing credit memo line group you wish to retain or update.  **IMPORTANT**: Set this field to `-1` for new credit memo line groups you wish to add.
	Id string `json:"id"`
	// The credit memo line group's item group, representing a predefined set of items bundled because they are commonly purchased together or grouped for faster entry.
	ItemGroupId *string `json:"itemGroupId,omitempty"`
	// The quantity of the item group associated with this credit memo line group. This field cannot be cleared.  **NOTE**: Do not use this field if the associated item group is a discount item group.
	Quantity *float32 `json:"quantity,omitempty"`
	// The unit-of-measure used for the `quantity` in this credit memo line group. Must be a valid unit within the item's available units of measure.
	UnitOfMeasure *string `json:"unitOfMeasure,omitempty"`
	// Specifies an alternative unit-of-measure set when updating this credit memo line group's `unitOfMeasure` field (e.g., \"pound\" or \"kilogram\"). This allows you to select units from a different set than the item's default unit-of-measure set, which remains unchanged on the item itself. The override applies only to this specific line. For example, you can sell an item typically measured in volume units using weight units in a specific transaction by specifying a different unit-of-measure set with this field.
	OverrideUnitOfMeasureSetId *string `json:"overrideUnitOfMeasureSetId,omitempty"`
	// The credit memo line group's line items, each representing a single product or service sold.  **IMPORTANT**:  1. Including this array in your update request will **REPLACE** all existing line items for the credit memo line group with this array. To keep any existing line items, you must include them in this array even if they have not changed. **Any line items not included will be removed.**  2. To add a new line item, include it here with the `id` field set to `-1`.  3. If you do not wish to modify any line items, omit this field entirely to keep them unchanged.
	Lines []QuickbooksDesktopCreditMemosIdPostRequestLinesInner `json:"lines,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _QuickbooksDesktopCreditMemosIdPostRequestLineGroupsInner QuickbooksDesktopCreditMemosIdPostRequestLineGroupsInner

// NewQuickbooksDesktopCreditMemosIdPostRequestLineGroupsInner instantiates a new QuickbooksDesktopCreditMemosIdPostRequestLineGroupsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQuickbooksDesktopCreditMemosIdPostRequestLineGroupsInner(id string) *QuickbooksDesktopCreditMemosIdPostRequestLineGroupsInner {
	this := QuickbooksDesktopCreditMemosIdPostRequestLineGroupsInner{}
	this.Id = id
	return &this
}

// NewQuickbooksDesktopCreditMemosIdPostRequestLineGroupsInnerWithDefaults instantiates a new QuickbooksDesktopCreditMemosIdPostRequestLineGroupsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQuickbooksDesktopCreditMemosIdPostRequestLineGroupsInnerWithDefaults() *QuickbooksDesktopCreditMemosIdPostRequestLineGroupsInner {
	this := QuickbooksDesktopCreditMemosIdPostRequestLineGroupsInner{}
	return &this
}

// GetId returns the Id field value
func (o *QuickbooksDesktopCreditMemosIdPostRequestLineGroupsInner) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopCreditMemosIdPostRequestLineGroupsInner) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *QuickbooksDesktopCreditMemosIdPostRequestLineGroupsInner) SetId(v string) {
	o.Id = v
}

// GetItemGroupId returns the ItemGroupId field value if set, zero value otherwise.
func (o *QuickbooksDesktopCreditMemosIdPostRequestLineGroupsInner) GetItemGroupId() string {
	if o == nil || IsNil(o.ItemGroupId) {
		var ret string
		return ret
	}
	return *o.ItemGroupId
}

// GetItemGroupIdOk returns a tuple with the ItemGroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopCreditMemosIdPostRequestLineGroupsInner) GetItemGroupIdOk() (*string, bool) {
	if o == nil || IsNil(o.ItemGroupId) {
		return nil, false
	}
	return o.ItemGroupId, true
}

// HasItemGroupId returns a boolean if a field has been set.
func (o *QuickbooksDesktopCreditMemosIdPostRequestLineGroupsInner) HasItemGroupId() bool {
	if o != nil && !IsNil(o.ItemGroupId) {
		return true
	}

	return false
}

// SetItemGroupId gets a reference to the given string and assigns it to the ItemGroupId field.
func (o *QuickbooksDesktopCreditMemosIdPostRequestLineGroupsInner) SetItemGroupId(v string) {
	o.ItemGroupId = &v
}

// GetQuantity returns the Quantity field value if set, zero value otherwise.
func (o *QuickbooksDesktopCreditMemosIdPostRequestLineGroupsInner) GetQuantity() float32 {
	if o == nil || IsNil(o.Quantity) {
		var ret float32
		return ret
	}
	return *o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopCreditMemosIdPostRequestLineGroupsInner) GetQuantityOk() (*float32, bool) {
	if o == nil || IsNil(o.Quantity) {
		return nil, false
	}
	return o.Quantity, true
}

// HasQuantity returns a boolean if a field has been set.
func (o *QuickbooksDesktopCreditMemosIdPostRequestLineGroupsInner) HasQuantity() bool {
	if o != nil && !IsNil(o.Quantity) {
		return true
	}

	return false
}

// SetQuantity gets a reference to the given float32 and assigns it to the Quantity field.
func (o *QuickbooksDesktopCreditMemosIdPostRequestLineGroupsInner) SetQuantity(v float32) {
	o.Quantity = &v
}

// GetUnitOfMeasure returns the UnitOfMeasure field value if set, zero value otherwise.
func (o *QuickbooksDesktopCreditMemosIdPostRequestLineGroupsInner) GetUnitOfMeasure() string {
	if o == nil || IsNil(o.UnitOfMeasure) {
		var ret string
		return ret
	}
	return *o.UnitOfMeasure
}

// GetUnitOfMeasureOk returns a tuple with the UnitOfMeasure field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopCreditMemosIdPostRequestLineGroupsInner) GetUnitOfMeasureOk() (*string, bool) {
	if o == nil || IsNil(o.UnitOfMeasure) {
		return nil, false
	}
	return o.UnitOfMeasure, true
}

// HasUnitOfMeasure returns a boolean if a field has been set.
func (o *QuickbooksDesktopCreditMemosIdPostRequestLineGroupsInner) HasUnitOfMeasure() bool {
	if o != nil && !IsNil(o.UnitOfMeasure) {
		return true
	}

	return false
}

// SetUnitOfMeasure gets a reference to the given string and assigns it to the UnitOfMeasure field.
func (o *QuickbooksDesktopCreditMemosIdPostRequestLineGroupsInner) SetUnitOfMeasure(v string) {
	o.UnitOfMeasure = &v
}

// GetOverrideUnitOfMeasureSetId returns the OverrideUnitOfMeasureSetId field value if set, zero value otherwise.
func (o *QuickbooksDesktopCreditMemosIdPostRequestLineGroupsInner) GetOverrideUnitOfMeasureSetId() string {
	if o == nil || IsNil(o.OverrideUnitOfMeasureSetId) {
		var ret string
		return ret
	}
	return *o.OverrideUnitOfMeasureSetId
}

// GetOverrideUnitOfMeasureSetIdOk returns a tuple with the OverrideUnitOfMeasureSetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopCreditMemosIdPostRequestLineGroupsInner) GetOverrideUnitOfMeasureSetIdOk() (*string, bool) {
	if o == nil || IsNil(o.OverrideUnitOfMeasureSetId) {
		return nil, false
	}
	return o.OverrideUnitOfMeasureSetId, true
}

// HasOverrideUnitOfMeasureSetId returns a boolean if a field has been set.
func (o *QuickbooksDesktopCreditMemosIdPostRequestLineGroupsInner) HasOverrideUnitOfMeasureSetId() bool {
	if o != nil && !IsNil(o.OverrideUnitOfMeasureSetId) {
		return true
	}

	return false
}

// SetOverrideUnitOfMeasureSetId gets a reference to the given string and assigns it to the OverrideUnitOfMeasureSetId field.
func (o *QuickbooksDesktopCreditMemosIdPostRequestLineGroupsInner) SetOverrideUnitOfMeasureSetId(v string) {
	o.OverrideUnitOfMeasureSetId = &v
}

// GetLines returns the Lines field value if set, zero value otherwise.
func (o *QuickbooksDesktopCreditMemosIdPostRequestLineGroupsInner) GetLines() []QuickbooksDesktopCreditMemosIdPostRequestLinesInner {
	if o == nil || IsNil(o.Lines) {
		var ret []QuickbooksDesktopCreditMemosIdPostRequestLinesInner
		return ret
	}
	return o.Lines
}

// GetLinesOk returns a tuple with the Lines field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopCreditMemosIdPostRequestLineGroupsInner) GetLinesOk() ([]QuickbooksDesktopCreditMemosIdPostRequestLinesInner, bool) {
	if o == nil || IsNil(o.Lines) {
		return nil, false
	}
	return o.Lines, true
}

// HasLines returns a boolean if a field has been set.
func (o *QuickbooksDesktopCreditMemosIdPostRequestLineGroupsInner) HasLines() bool {
	if o != nil && !IsNil(o.Lines) {
		return true
	}

	return false
}

// SetLines gets a reference to the given []QuickbooksDesktopCreditMemosIdPostRequestLinesInner and assigns it to the Lines field.
func (o *QuickbooksDesktopCreditMemosIdPostRequestLineGroupsInner) SetLines(v []QuickbooksDesktopCreditMemosIdPostRequestLinesInner) {
	o.Lines = v
}

func (o QuickbooksDesktopCreditMemosIdPostRequestLineGroupsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QuickbooksDesktopCreditMemosIdPostRequestLineGroupsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	if !IsNil(o.ItemGroupId) {
		toSerialize["itemGroupId"] = o.ItemGroupId
	}
	if !IsNil(o.Quantity) {
		toSerialize["quantity"] = o.Quantity
	}
	if !IsNil(o.UnitOfMeasure) {
		toSerialize["unitOfMeasure"] = o.UnitOfMeasure
	}
	if !IsNil(o.OverrideUnitOfMeasureSetId) {
		toSerialize["overrideUnitOfMeasureSetId"] = o.OverrideUnitOfMeasureSetId
	}
	if !IsNil(o.Lines) {
		toSerialize["lines"] = o.Lines
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *QuickbooksDesktopCreditMemosIdPostRequestLineGroupsInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varQuickbooksDesktopCreditMemosIdPostRequestLineGroupsInner := _QuickbooksDesktopCreditMemosIdPostRequestLineGroupsInner{}

	err = json.Unmarshal(data, &varQuickbooksDesktopCreditMemosIdPostRequestLineGroupsInner)

	if err != nil {
		return err
	}

	*o = QuickbooksDesktopCreditMemosIdPostRequestLineGroupsInner(varQuickbooksDesktopCreditMemosIdPostRequestLineGroupsInner)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "itemGroupId")
		delete(additionalProperties, "quantity")
		delete(additionalProperties, "unitOfMeasure")
		delete(additionalProperties, "overrideUnitOfMeasureSetId")
		delete(additionalProperties, "lines")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableQuickbooksDesktopCreditMemosIdPostRequestLineGroupsInner struct {
	value *QuickbooksDesktopCreditMemosIdPostRequestLineGroupsInner
	isSet bool
}

func (v NullableQuickbooksDesktopCreditMemosIdPostRequestLineGroupsInner) Get() *QuickbooksDesktopCreditMemosIdPostRequestLineGroupsInner {
	return v.value
}

func (v *NullableQuickbooksDesktopCreditMemosIdPostRequestLineGroupsInner) Set(val *QuickbooksDesktopCreditMemosIdPostRequestLineGroupsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableQuickbooksDesktopCreditMemosIdPostRequestLineGroupsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableQuickbooksDesktopCreditMemosIdPostRequestLineGroupsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQuickbooksDesktopCreditMemosIdPostRequestLineGroupsInner(val *QuickbooksDesktopCreditMemosIdPostRequestLineGroupsInner) *NullableQuickbooksDesktopCreditMemosIdPostRequestLineGroupsInner {
	return &NullableQuickbooksDesktopCreditMemosIdPostRequestLineGroupsInner{value: val, isSet: true}
}

func (v NullableQuickbooksDesktopCreditMemosIdPostRequestLineGroupsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQuickbooksDesktopCreditMemosIdPostRequestLineGroupsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


