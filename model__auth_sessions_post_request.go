/*
Conductor API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package conductor

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AuthSessionsPostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AuthSessionsPostRequest{}

// AuthSessionsPostRequest struct for AuthSessionsPostRequest
type AuthSessionsPostRequest struct {
	// Your Conductor publishable key, which we use to create the auth session's `authFlowUrl`.
	PublishableKey string `json:"publishableKey"`
	// The ID of the end-user for whom to create the integration connection.
	EndUserId string `json:"endUserId"`
	// The number of minutes after which the auth session will expire. Must be at least 15 minutes and no more than 7 days. If not provided, defaults to 30 minutes.
	LinkExpiryMins *float32 `json:"linkExpiryMins,omitempty"`
	// The URL to which Conductor will redirect the end-user to return to your app after they complete the authentication flow. If not provided, their browser tab will close instead.
	RedirectUrl *string `json:"redirectUrl,omitempty"`
}

type _AuthSessionsPostRequest AuthSessionsPostRequest

// NewAuthSessionsPostRequest instantiates a new AuthSessionsPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthSessionsPostRequest(publishableKey string, endUserId string) *AuthSessionsPostRequest {
	this := AuthSessionsPostRequest{}
	this.PublishableKey = publishableKey
	this.EndUserId = endUserId
	var linkExpiryMins float32 = 30
	this.LinkExpiryMins = &linkExpiryMins
	return &this
}

// NewAuthSessionsPostRequestWithDefaults instantiates a new AuthSessionsPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthSessionsPostRequestWithDefaults() *AuthSessionsPostRequest {
	this := AuthSessionsPostRequest{}
	var linkExpiryMins float32 = 30
	this.LinkExpiryMins = &linkExpiryMins
	return &this
}

// GetPublishableKey returns the PublishableKey field value
func (o *AuthSessionsPostRequest) GetPublishableKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PublishableKey
}

// GetPublishableKeyOk returns a tuple with the PublishableKey field value
// and a boolean to check if the value has been set.
func (o *AuthSessionsPostRequest) GetPublishableKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PublishableKey, true
}

// SetPublishableKey sets field value
func (o *AuthSessionsPostRequest) SetPublishableKey(v string) {
	o.PublishableKey = v
}

// GetEndUserId returns the EndUserId field value
func (o *AuthSessionsPostRequest) GetEndUserId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EndUserId
}

// GetEndUserIdOk returns a tuple with the EndUserId field value
// and a boolean to check if the value has been set.
func (o *AuthSessionsPostRequest) GetEndUserIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EndUserId, true
}

// SetEndUserId sets field value
func (o *AuthSessionsPostRequest) SetEndUserId(v string) {
	o.EndUserId = v
}

// GetLinkExpiryMins returns the LinkExpiryMins field value if set, zero value otherwise.
func (o *AuthSessionsPostRequest) GetLinkExpiryMins() float32 {
	if o == nil || IsNil(o.LinkExpiryMins) {
		var ret float32
		return ret
	}
	return *o.LinkExpiryMins
}

// GetLinkExpiryMinsOk returns a tuple with the LinkExpiryMins field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthSessionsPostRequest) GetLinkExpiryMinsOk() (*float32, bool) {
	if o == nil || IsNil(o.LinkExpiryMins) {
		return nil, false
	}
	return o.LinkExpiryMins, true
}

// HasLinkExpiryMins returns a boolean if a field has been set.
func (o *AuthSessionsPostRequest) HasLinkExpiryMins() bool {
	if o != nil && !IsNil(o.LinkExpiryMins) {
		return true
	}

	return false
}

// SetLinkExpiryMins gets a reference to the given float32 and assigns it to the LinkExpiryMins field.
func (o *AuthSessionsPostRequest) SetLinkExpiryMins(v float32) {
	o.LinkExpiryMins = &v
}

// GetRedirectUrl returns the RedirectUrl field value if set, zero value otherwise.
func (o *AuthSessionsPostRequest) GetRedirectUrl() string {
	if o == nil || IsNil(o.RedirectUrl) {
		var ret string
		return ret
	}
	return *o.RedirectUrl
}

// GetRedirectUrlOk returns a tuple with the RedirectUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthSessionsPostRequest) GetRedirectUrlOk() (*string, bool) {
	if o == nil || IsNil(o.RedirectUrl) {
		return nil, false
	}
	return o.RedirectUrl, true
}

// HasRedirectUrl returns a boolean if a field has been set.
func (o *AuthSessionsPostRequest) HasRedirectUrl() bool {
	if o != nil && !IsNil(o.RedirectUrl) {
		return true
	}

	return false
}

// SetRedirectUrl gets a reference to the given string and assigns it to the RedirectUrl field.
func (o *AuthSessionsPostRequest) SetRedirectUrl(v string) {
	o.RedirectUrl = &v
}

func (o AuthSessionsPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AuthSessionsPostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["publishableKey"] = o.PublishableKey
	toSerialize["endUserId"] = o.EndUserId
	if !IsNil(o.LinkExpiryMins) {
		toSerialize["linkExpiryMins"] = o.LinkExpiryMins
	}
	if !IsNil(o.RedirectUrl) {
		toSerialize["redirectUrl"] = o.RedirectUrl
	}
	return toSerialize, nil
}

func (o *AuthSessionsPostRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"publishableKey",
		"endUserId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAuthSessionsPostRequest := _AuthSessionsPostRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAuthSessionsPostRequest)

	if err != nil {
		return err
	}

	*o = AuthSessionsPostRequest(varAuthSessionsPostRequest)

	return err
}

type NullableAuthSessionsPostRequest struct {
	value *AuthSessionsPostRequest
	isSet bool
}

func (v NullableAuthSessionsPostRequest) Get() *AuthSessionsPostRequest {
	return v.value
}

func (v *NullableAuthSessionsPostRequest) Set(val *AuthSessionsPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthSessionsPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthSessionsPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthSessionsPostRequest(val *AuthSessionsPostRequest) *NullableAuthSessionsPostRequest {
	return &NullableAuthSessionsPostRequest{value: val, isSet: true}
}

func (v NullableAuthSessionsPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthSessionsPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


