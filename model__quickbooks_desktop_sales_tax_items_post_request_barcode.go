/*
Conductor API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package conductor

import (
	"encoding/json"
)

// checks if the QuickbooksDesktopSalesTaxItemsPostRequestBarcode type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QuickbooksDesktopSalesTaxItemsPostRequestBarcode{}

// QuickbooksDesktopSalesTaxItemsPostRequestBarcode The sales-tax item's barcode.
type QuickbooksDesktopSalesTaxItemsPostRequestBarcode struct {
	// The item's barcode value.
	Value *string `json:"value,omitempty"`
	// Indicates whether to assign the barcode even if it is already used.
	AssignEvenIfUsed *bool `json:"assignEvenIfUsed,omitempty"`
	// Indicates whether to allow the barcode to be overridden.
	AllowOverride *bool `json:"allowOverride,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _QuickbooksDesktopSalesTaxItemsPostRequestBarcode QuickbooksDesktopSalesTaxItemsPostRequestBarcode

// NewQuickbooksDesktopSalesTaxItemsPostRequestBarcode instantiates a new QuickbooksDesktopSalesTaxItemsPostRequestBarcode object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQuickbooksDesktopSalesTaxItemsPostRequestBarcode() *QuickbooksDesktopSalesTaxItemsPostRequestBarcode {
	this := QuickbooksDesktopSalesTaxItemsPostRequestBarcode{}
	var assignEvenIfUsed bool = false
	this.AssignEvenIfUsed = &assignEvenIfUsed
	var allowOverride bool = false
	this.AllowOverride = &allowOverride
	return &this
}

// NewQuickbooksDesktopSalesTaxItemsPostRequestBarcodeWithDefaults instantiates a new QuickbooksDesktopSalesTaxItemsPostRequestBarcode object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQuickbooksDesktopSalesTaxItemsPostRequestBarcodeWithDefaults() *QuickbooksDesktopSalesTaxItemsPostRequestBarcode {
	this := QuickbooksDesktopSalesTaxItemsPostRequestBarcode{}
	var assignEvenIfUsed bool = false
	this.AssignEvenIfUsed = &assignEvenIfUsed
	var allowOverride bool = false
	this.AllowOverride = &allowOverride
	return &this
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *QuickbooksDesktopSalesTaxItemsPostRequestBarcode) GetValue() string {
	if o == nil || IsNil(o.Value) {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopSalesTaxItemsPostRequestBarcode) GetValueOk() (*string, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *QuickbooksDesktopSalesTaxItemsPostRequestBarcode) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *QuickbooksDesktopSalesTaxItemsPostRequestBarcode) SetValue(v string) {
	o.Value = &v
}

// GetAssignEvenIfUsed returns the AssignEvenIfUsed field value if set, zero value otherwise.
func (o *QuickbooksDesktopSalesTaxItemsPostRequestBarcode) GetAssignEvenIfUsed() bool {
	if o == nil || IsNil(o.AssignEvenIfUsed) {
		var ret bool
		return ret
	}
	return *o.AssignEvenIfUsed
}

// GetAssignEvenIfUsedOk returns a tuple with the AssignEvenIfUsed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopSalesTaxItemsPostRequestBarcode) GetAssignEvenIfUsedOk() (*bool, bool) {
	if o == nil || IsNil(o.AssignEvenIfUsed) {
		return nil, false
	}
	return o.AssignEvenIfUsed, true
}

// HasAssignEvenIfUsed returns a boolean if a field has been set.
func (o *QuickbooksDesktopSalesTaxItemsPostRequestBarcode) HasAssignEvenIfUsed() bool {
	if o != nil && !IsNil(o.AssignEvenIfUsed) {
		return true
	}

	return false
}

// SetAssignEvenIfUsed gets a reference to the given bool and assigns it to the AssignEvenIfUsed field.
func (o *QuickbooksDesktopSalesTaxItemsPostRequestBarcode) SetAssignEvenIfUsed(v bool) {
	o.AssignEvenIfUsed = &v
}

// GetAllowOverride returns the AllowOverride field value if set, zero value otherwise.
func (o *QuickbooksDesktopSalesTaxItemsPostRequestBarcode) GetAllowOverride() bool {
	if o == nil || IsNil(o.AllowOverride) {
		var ret bool
		return ret
	}
	return *o.AllowOverride
}

// GetAllowOverrideOk returns a tuple with the AllowOverride field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopSalesTaxItemsPostRequestBarcode) GetAllowOverrideOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowOverride) {
		return nil, false
	}
	return o.AllowOverride, true
}

// HasAllowOverride returns a boolean if a field has been set.
func (o *QuickbooksDesktopSalesTaxItemsPostRequestBarcode) HasAllowOverride() bool {
	if o != nil && !IsNil(o.AllowOverride) {
		return true
	}

	return false
}

// SetAllowOverride gets a reference to the given bool and assigns it to the AllowOverride field.
func (o *QuickbooksDesktopSalesTaxItemsPostRequestBarcode) SetAllowOverride(v bool) {
	o.AllowOverride = &v
}

func (o QuickbooksDesktopSalesTaxItemsPostRequestBarcode) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QuickbooksDesktopSalesTaxItemsPostRequestBarcode) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	if !IsNil(o.AssignEvenIfUsed) {
		toSerialize["assignEvenIfUsed"] = o.AssignEvenIfUsed
	}
	if !IsNil(o.AllowOverride) {
		toSerialize["allowOverride"] = o.AllowOverride
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *QuickbooksDesktopSalesTaxItemsPostRequestBarcode) UnmarshalJSON(data []byte) (err error) {
	varQuickbooksDesktopSalesTaxItemsPostRequestBarcode := _QuickbooksDesktopSalesTaxItemsPostRequestBarcode{}

	err = json.Unmarshal(data, &varQuickbooksDesktopSalesTaxItemsPostRequestBarcode)

	if err != nil {
		return err
	}

	*o = QuickbooksDesktopSalesTaxItemsPostRequestBarcode(varQuickbooksDesktopSalesTaxItemsPostRequestBarcode)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "value")
		delete(additionalProperties, "assignEvenIfUsed")
		delete(additionalProperties, "allowOverride")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableQuickbooksDesktopSalesTaxItemsPostRequestBarcode struct {
	value *QuickbooksDesktopSalesTaxItemsPostRequestBarcode
	isSet bool
}

func (v NullableQuickbooksDesktopSalesTaxItemsPostRequestBarcode) Get() *QuickbooksDesktopSalesTaxItemsPostRequestBarcode {
	return v.value
}

func (v *NullableQuickbooksDesktopSalesTaxItemsPostRequestBarcode) Set(val *QuickbooksDesktopSalesTaxItemsPostRequestBarcode) {
	v.value = val
	v.isSet = true
}

func (v NullableQuickbooksDesktopSalesTaxItemsPostRequestBarcode) IsSet() bool {
	return v.isSet
}

func (v *NullableQuickbooksDesktopSalesTaxItemsPostRequestBarcode) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQuickbooksDesktopSalesTaxItemsPostRequestBarcode(val *QuickbooksDesktopSalesTaxItemsPostRequestBarcode) *NullableQuickbooksDesktopSalesTaxItemsPostRequestBarcode {
	return &NullableQuickbooksDesktopSalesTaxItemsPostRequestBarcode{value: val, isSet: true}
}

func (v NullableQuickbooksDesktopSalesTaxItemsPostRequestBarcode) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQuickbooksDesktopSalesTaxItemsPostRequestBarcode) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


