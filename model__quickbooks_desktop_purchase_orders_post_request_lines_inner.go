/*
Conductor API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package conductor

import (
	"encoding/json"
)

// checks if the QuickbooksDesktopPurchaseOrdersPostRequestLinesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QuickbooksDesktopPurchaseOrdersPostRequestLinesInner{}

// QuickbooksDesktopPurchaseOrdersPostRequestLinesInner struct for QuickbooksDesktopPurchaseOrdersPostRequestLinesInner
type QuickbooksDesktopPurchaseOrdersPostRequestLinesInner struct {
	// The item associated with this purchase order line. This can refer to any good or service that the business buys or sells, including item types such as a service item, inventory item, or special calculation item like a discount item or sales-tax item.
	ItemId *string `json:"itemId,omitempty"`
	// The purchase order line's stock keeping unit (SKU), which is sometimes the manufacturer's part number.
	Sku *string `json:"sku,omitempty"`
	// A description of this purchase order line.
	Description *string `json:"description,omitempty"`
	// The quantity of the item associated with this purchase order line. This field cannot be cleared.  **NOTE**: Do not use this field if the associated item is a discount item.
	Quantity *float32 `json:"quantity,omitempty"`
	// The unit-of-measure used for the `quantity` in this purchase order line. Must be a valid unit within the item's available units of measure.
	UnitOfMeasure *string `json:"unitOfMeasure,omitempty"`
	// The price per unit for this purchase order line. If both `rate` and `amount` are specified, `rate` will be ignored. If both `quantity` and `amount` are specified but not `rate`, QuickBooks will use them to calculate `rate`. Represented as a decimal string. This field cannot be cleared.
	Rate *string `json:"rate,omitempty"`
	// The purchase order line's class. Classes can be used to categorize objects into meaningful segments, such as department, location, or type of work. In QuickBooks, class tracking is off by default. If a class is specified for the entire parent transaction, it is automatically applied to all purchase order lines unless overridden here, at the transaction line level.
	ClassId *string `json:"classId,omitempty"`
	// The monetary amount of this purchase order line, represented as a decimal string. If both `quantity` and `rate` are specified but not `amount`, QuickBooks will use them to calculate `amount`. If `amount`, `rate`, and `quantity` are all unspecified, then QuickBooks will calculate `amount` based on a `quantity` of `1` and the suggested `rate`. This field cannot be cleared.
	Amount *string `json:"amount,omitempty"`
	// The specific location (e.g., bin or shelf) within the inventory site where the item associated with this purchase order line is stored.
	InventorySiteLocationId *string `json:"inventorySiteLocationId,omitempty"`
	// If `account` refers to an Accounts-Payable (A/P) account, `payee` refers to the expense's vendor (not the customer). If `account` refers to any other type of account, `payee` refers to the expense's customer (not the vendor).
	PayeeId *string `json:"payeeId,omitempty"`
	// The date on which the service for this purchase order line was or will be performed, in ISO 8601 format (YYYY-MM-DD). This is particularly relevant for service items.
	ServiceDate *string `json:"serviceDate,omitempty"`
	// The sales-tax code for this purchase order line, determining whether it is taxable or non-taxable. If set, this overrides any sales-tax codes defined on the parent transaction or the associated item.  Default codes include \"Non\" (non-taxable) and \"Tax\" (taxable), but custom codes can also be created in QuickBooks. If QuickBooks is not set up to charge sales tax (via the \"Do You Charge Sales Tax?\" preference), it will assign the default non-taxable code to all sales.
	SalesTaxCodeId *string `json:"salesTaxCodeId,omitempty"`
	// The account to use for this purchase order line, overriding the default account associated with the item.
	OverrideItemAccountId *string `json:"overrideItemAccountId,omitempty"`
	// A built-in custom field for additional information specific to this purchase order line. Unlike the user-defined fields in the `customFields` array, this is a standard QuickBooks field that exists for all purchase order lines for convenience. Developers often use this field for tracking information that doesn't fit into other standard QuickBooks fields. Hidden by default in the QuickBooks UI.
	OtherCustomField1 *string `json:"otherCustomField1,omitempty"`
	// A second built-in custom field for additional information specific to this purchase order line. Unlike the user-defined fields in the `customFields` array, this is a standard QuickBooks field that exists for all purchase order lines for convenience. Like `otherCustomField1`, developers often use this field for tracking information that doesn't fit into other standard QuickBooks fields. Hidden by default in the QuickBooks UI.
	OtherCustomField2 *string `json:"otherCustomField2,omitempty"`
	// The custom fields for the purchase order line object, added as user-defined data extensions, not included in the standard QuickBooks object.
	CustomFields []QuickbooksDesktopBillsPostRequestExpenseLinesInnerCustomFieldsInner `json:"customFields,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _QuickbooksDesktopPurchaseOrdersPostRequestLinesInner QuickbooksDesktopPurchaseOrdersPostRequestLinesInner

// NewQuickbooksDesktopPurchaseOrdersPostRequestLinesInner instantiates a new QuickbooksDesktopPurchaseOrdersPostRequestLinesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQuickbooksDesktopPurchaseOrdersPostRequestLinesInner() *QuickbooksDesktopPurchaseOrdersPostRequestLinesInner {
	this := QuickbooksDesktopPurchaseOrdersPostRequestLinesInner{}
	return &this
}

// NewQuickbooksDesktopPurchaseOrdersPostRequestLinesInnerWithDefaults instantiates a new QuickbooksDesktopPurchaseOrdersPostRequestLinesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQuickbooksDesktopPurchaseOrdersPostRequestLinesInnerWithDefaults() *QuickbooksDesktopPurchaseOrdersPostRequestLinesInner {
	this := QuickbooksDesktopPurchaseOrdersPostRequestLinesInner{}
	return &this
}

// GetItemId returns the ItemId field value if set, zero value otherwise.
func (o *QuickbooksDesktopPurchaseOrdersPostRequestLinesInner) GetItemId() string {
	if o == nil || IsNil(o.ItemId) {
		var ret string
		return ret
	}
	return *o.ItemId
}

// GetItemIdOk returns a tuple with the ItemId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopPurchaseOrdersPostRequestLinesInner) GetItemIdOk() (*string, bool) {
	if o == nil || IsNil(o.ItemId) {
		return nil, false
	}
	return o.ItemId, true
}

// HasItemId returns a boolean if a field has been set.
func (o *QuickbooksDesktopPurchaseOrdersPostRequestLinesInner) HasItemId() bool {
	if o != nil && !IsNil(o.ItemId) {
		return true
	}

	return false
}

// SetItemId gets a reference to the given string and assigns it to the ItemId field.
func (o *QuickbooksDesktopPurchaseOrdersPostRequestLinesInner) SetItemId(v string) {
	o.ItemId = &v
}

// GetSku returns the Sku field value if set, zero value otherwise.
func (o *QuickbooksDesktopPurchaseOrdersPostRequestLinesInner) GetSku() string {
	if o == nil || IsNil(o.Sku) {
		var ret string
		return ret
	}
	return *o.Sku
}

// GetSkuOk returns a tuple with the Sku field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopPurchaseOrdersPostRequestLinesInner) GetSkuOk() (*string, bool) {
	if o == nil || IsNil(o.Sku) {
		return nil, false
	}
	return o.Sku, true
}

// HasSku returns a boolean if a field has been set.
func (o *QuickbooksDesktopPurchaseOrdersPostRequestLinesInner) HasSku() bool {
	if o != nil && !IsNil(o.Sku) {
		return true
	}

	return false
}

// SetSku gets a reference to the given string and assigns it to the Sku field.
func (o *QuickbooksDesktopPurchaseOrdersPostRequestLinesInner) SetSku(v string) {
	o.Sku = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *QuickbooksDesktopPurchaseOrdersPostRequestLinesInner) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopPurchaseOrdersPostRequestLinesInner) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *QuickbooksDesktopPurchaseOrdersPostRequestLinesInner) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *QuickbooksDesktopPurchaseOrdersPostRequestLinesInner) SetDescription(v string) {
	o.Description = &v
}

// GetQuantity returns the Quantity field value if set, zero value otherwise.
func (o *QuickbooksDesktopPurchaseOrdersPostRequestLinesInner) GetQuantity() float32 {
	if o == nil || IsNil(o.Quantity) {
		var ret float32
		return ret
	}
	return *o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopPurchaseOrdersPostRequestLinesInner) GetQuantityOk() (*float32, bool) {
	if o == nil || IsNil(o.Quantity) {
		return nil, false
	}
	return o.Quantity, true
}

// HasQuantity returns a boolean if a field has been set.
func (o *QuickbooksDesktopPurchaseOrdersPostRequestLinesInner) HasQuantity() bool {
	if o != nil && !IsNil(o.Quantity) {
		return true
	}

	return false
}

// SetQuantity gets a reference to the given float32 and assigns it to the Quantity field.
func (o *QuickbooksDesktopPurchaseOrdersPostRequestLinesInner) SetQuantity(v float32) {
	o.Quantity = &v
}

// GetUnitOfMeasure returns the UnitOfMeasure field value if set, zero value otherwise.
func (o *QuickbooksDesktopPurchaseOrdersPostRequestLinesInner) GetUnitOfMeasure() string {
	if o == nil || IsNil(o.UnitOfMeasure) {
		var ret string
		return ret
	}
	return *o.UnitOfMeasure
}

// GetUnitOfMeasureOk returns a tuple with the UnitOfMeasure field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopPurchaseOrdersPostRequestLinesInner) GetUnitOfMeasureOk() (*string, bool) {
	if o == nil || IsNil(o.UnitOfMeasure) {
		return nil, false
	}
	return o.UnitOfMeasure, true
}

// HasUnitOfMeasure returns a boolean if a field has been set.
func (o *QuickbooksDesktopPurchaseOrdersPostRequestLinesInner) HasUnitOfMeasure() bool {
	if o != nil && !IsNil(o.UnitOfMeasure) {
		return true
	}

	return false
}

// SetUnitOfMeasure gets a reference to the given string and assigns it to the UnitOfMeasure field.
func (o *QuickbooksDesktopPurchaseOrdersPostRequestLinesInner) SetUnitOfMeasure(v string) {
	o.UnitOfMeasure = &v
}

// GetRate returns the Rate field value if set, zero value otherwise.
func (o *QuickbooksDesktopPurchaseOrdersPostRequestLinesInner) GetRate() string {
	if o == nil || IsNil(o.Rate) {
		var ret string
		return ret
	}
	return *o.Rate
}

// GetRateOk returns a tuple with the Rate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopPurchaseOrdersPostRequestLinesInner) GetRateOk() (*string, bool) {
	if o == nil || IsNil(o.Rate) {
		return nil, false
	}
	return o.Rate, true
}

// HasRate returns a boolean if a field has been set.
func (o *QuickbooksDesktopPurchaseOrdersPostRequestLinesInner) HasRate() bool {
	if o != nil && !IsNil(o.Rate) {
		return true
	}

	return false
}

// SetRate gets a reference to the given string and assigns it to the Rate field.
func (o *QuickbooksDesktopPurchaseOrdersPostRequestLinesInner) SetRate(v string) {
	o.Rate = &v
}

// GetClassId returns the ClassId field value if set, zero value otherwise.
func (o *QuickbooksDesktopPurchaseOrdersPostRequestLinesInner) GetClassId() string {
	if o == nil || IsNil(o.ClassId) {
		var ret string
		return ret
	}
	return *o.ClassId
}

// GetClassIdOk returns a tuple with the ClassId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopPurchaseOrdersPostRequestLinesInner) GetClassIdOk() (*string, bool) {
	if o == nil || IsNil(o.ClassId) {
		return nil, false
	}
	return o.ClassId, true
}

// HasClassId returns a boolean if a field has been set.
func (o *QuickbooksDesktopPurchaseOrdersPostRequestLinesInner) HasClassId() bool {
	if o != nil && !IsNil(o.ClassId) {
		return true
	}

	return false
}

// SetClassId gets a reference to the given string and assigns it to the ClassId field.
func (o *QuickbooksDesktopPurchaseOrdersPostRequestLinesInner) SetClassId(v string) {
	o.ClassId = &v
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *QuickbooksDesktopPurchaseOrdersPostRequestLinesInner) GetAmount() string {
	if o == nil || IsNil(o.Amount) {
		var ret string
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopPurchaseOrdersPostRequestLinesInner) GetAmountOk() (*string, bool) {
	if o == nil || IsNil(o.Amount) {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *QuickbooksDesktopPurchaseOrdersPostRequestLinesInner) HasAmount() bool {
	if o != nil && !IsNil(o.Amount) {
		return true
	}

	return false
}

// SetAmount gets a reference to the given string and assigns it to the Amount field.
func (o *QuickbooksDesktopPurchaseOrdersPostRequestLinesInner) SetAmount(v string) {
	o.Amount = &v
}

// GetInventorySiteLocationId returns the InventorySiteLocationId field value if set, zero value otherwise.
func (o *QuickbooksDesktopPurchaseOrdersPostRequestLinesInner) GetInventorySiteLocationId() string {
	if o == nil || IsNil(o.InventorySiteLocationId) {
		var ret string
		return ret
	}
	return *o.InventorySiteLocationId
}

// GetInventorySiteLocationIdOk returns a tuple with the InventorySiteLocationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopPurchaseOrdersPostRequestLinesInner) GetInventorySiteLocationIdOk() (*string, bool) {
	if o == nil || IsNil(o.InventorySiteLocationId) {
		return nil, false
	}
	return o.InventorySiteLocationId, true
}

// HasInventorySiteLocationId returns a boolean if a field has been set.
func (o *QuickbooksDesktopPurchaseOrdersPostRequestLinesInner) HasInventorySiteLocationId() bool {
	if o != nil && !IsNil(o.InventorySiteLocationId) {
		return true
	}

	return false
}

// SetInventorySiteLocationId gets a reference to the given string and assigns it to the InventorySiteLocationId field.
func (o *QuickbooksDesktopPurchaseOrdersPostRequestLinesInner) SetInventorySiteLocationId(v string) {
	o.InventorySiteLocationId = &v
}

// GetPayeeId returns the PayeeId field value if set, zero value otherwise.
func (o *QuickbooksDesktopPurchaseOrdersPostRequestLinesInner) GetPayeeId() string {
	if o == nil || IsNil(o.PayeeId) {
		var ret string
		return ret
	}
	return *o.PayeeId
}

// GetPayeeIdOk returns a tuple with the PayeeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopPurchaseOrdersPostRequestLinesInner) GetPayeeIdOk() (*string, bool) {
	if o == nil || IsNil(o.PayeeId) {
		return nil, false
	}
	return o.PayeeId, true
}

// HasPayeeId returns a boolean if a field has been set.
func (o *QuickbooksDesktopPurchaseOrdersPostRequestLinesInner) HasPayeeId() bool {
	if o != nil && !IsNil(o.PayeeId) {
		return true
	}

	return false
}

// SetPayeeId gets a reference to the given string and assigns it to the PayeeId field.
func (o *QuickbooksDesktopPurchaseOrdersPostRequestLinesInner) SetPayeeId(v string) {
	o.PayeeId = &v
}

// GetServiceDate returns the ServiceDate field value if set, zero value otherwise.
func (o *QuickbooksDesktopPurchaseOrdersPostRequestLinesInner) GetServiceDate() string {
	if o == nil || IsNil(o.ServiceDate) {
		var ret string
		return ret
	}
	return *o.ServiceDate
}

// GetServiceDateOk returns a tuple with the ServiceDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopPurchaseOrdersPostRequestLinesInner) GetServiceDateOk() (*string, bool) {
	if o == nil || IsNil(o.ServiceDate) {
		return nil, false
	}
	return o.ServiceDate, true
}

// HasServiceDate returns a boolean if a field has been set.
func (o *QuickbooksDesktopPurchaseOrdersPostRequestLinesInner) HasServiceDate() bool {
	if o != nil && !IsNil(o.ServiceDate) {
		return true
	}

	return false
}

// SetServiceDate gets a reference to the given string and assigns it to the ServiceDate field.
func (o *QuickbooksDesktopPurchaseOrdersPostRequestLinesInner) SetServiceDate(v string) {
	o.ServiceDate = &v
}

// GetSalesTaxCodeId returns the SalesTaxCodeId field value if set, zero value otherwise.
func (o *QuickbooksDesktopPurchaseOrdersPostRequestLinesInner) GetSalesTaxCodeId() string {
	if o == nil || IsNil(o.SalesTaxCodeId) {
		var ret string
		return ret
	}
	return *o.SalesTaxCodeId
}

// GetSalesTaxCodeIdOk returns a tuple with the SalesTaxCodeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopPurchaseOrdersPostRequestLinesInner) GetSalesTaxCodeIdOk() (*string, bool) {
	if o == nil || IsNil(o.SalesTaxCodeId) {
		return nil, false
	}
	return o.SalesTaxCodeId, true
}

// HasSalesTaxCodeId returns a boolean if a field has been set.
func (o *QuickbooksDesktopPurchaseOrdersPostRequestLinesInner) HasSalesTaxCodeId() bool {
	if o != nil && !IsNil(o.SalesTaxCodeId) {
		return true
	}

	return false
}

// SetSalesTaxCodeId gets a reference to the given string and assigns it to the SalesTaxCodeId field.
func (o *QuickbooksDesktopPurchaseOrdersPostRequestLinesInner) SetSalesTaxCodeId(v string) {
	o.SalesTaxCodeId = &v
}

// GetOverrideItemAccountId returns the OverrideItemAccountId field value if set, zero value otherwise.
func (o *QuickbooksDesktopPurchaseOrdersPostRequestLinesInner) GetOverrideItemAccountId() string {
	if o == nil || IsNil(o.OverrideItemAccountId) {
		var ret string
		return ret
	}
	return *o.OverrideItemAccountId
}

// GetOverrideItemAccountIdOk returns a tuple with the OverrideItemAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopPurchaseOrdersPostRequestLinesInner) GetOverrideItemAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.OverrideItemAccountId) {
		return nil, false
	}
	return o.OverrideItemAccountId, true
}

// HasOverrideItemAccountId returns a boolean if a field has been set.
func (o *QuickbooksDesktopPurchaseOrdersPostRequestLinesInner) HasOverrideItemAccountId() bool {
	if o != nil && !IsNil(o.OverrideItemAccountId) {
		return true
	}

	return false
}

// SetOverrideItemAccountId gets a reference to the given string and assigns it to the OverrideItemAccountId field.
func (o *QuickbooksDesktopPurchaseOrdersPostRequestLinesInner) SetOverrideItemAccountId(v string) {
	o.OverrideItemAccountId = &v
}

// GetOtherCustomField1 returns the OtherCustomField1 field value if set, zero value otherwise.
func (o *QuickbooksDesktopPurchaseOrdersPostRequestLinesInner) GetOtherCustomField1() string {
	if o == nil || IsNil(o.OtherCustomField1) {
		var ret string
		return ret
	}
	return *o.OtherCustomField1
}

// GetOtherCustomField1Ok returns a tuple with the OtherCustomField1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopPurchaseOrdersPostRequestLinesInner) GetOtherCustomField1Ok() (*string, bool) {
	if o == nil || IsNil(o.OtherCustomField1) {
		return nil, false
	}
	return o.OtherCustomField1, true
}

// HasOtherCustomField1 returns a boolean if a field has been set.
func (o *QuickbooksDesktopPurchaseOrdersPostRequestLinesInner) HasOtherCustomField1() bool {
	if o != nil && !IsNil(o.OtherCustomField1) {
		return true
	}

	return false
}

// SetOtherCustomField1 gets a reference to the given string and assigns it to the OtherCustomField1 field.
func (o *QuickbooksDesktopPurchaseOrdersPostRequestLinesInner) SetOtherCustomField1(v string) {
	o.OtherCustomField1 = &v
}

// GetOtherCustomField2 returns the OtherCustomField2 field value if set, zero value otherwise.
func (o *QuickbooksDesktopPurchaseOrdersPostRequestLinesInner) GetOtherCustomField2() string {
	if o == nil || IsNil(o.OtherCustomField2) {
		var ret string
		return ret
	}
	return *o.OtherCustomField2
}

// GetOtherCustomField2Ok returns a tuple with the OtherCustomField2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopPurchaseOrdersPostRequestLinesInner) GetOtherCustomField2Ok() (*string, bool) {
	if o == nil || IsNil(o.OtherCustomField2) {
		return nil, false
	}
	return o.OtherCustomField2, true
}

// HasOtherCustomField2 returns a boolean if a field has been set.
func (o *QuickbooksDesktopPurchaseOrdersPostRequestLinesInner) HasOtherCustomField2() bool {
	if o != nil && !IsNil(o.OtherCustomField2) {
		return true
	}

	return false
}

// SetOtherCustomField2 gets a reference to the given string and assigns it to the OtherCustomField2 field.
func (o *QuickbooksDesktopPurchaseOrdersPostRequestLinesInner) SetOtherCustomField2(v string) {
	o.OtherCustomField2 = &v
}

// GetCustomFields returns the CustomFields field value if set, zero value otherwise.
func (o *QuickbooksDesktopPurchaseOrdersPostRequestLinesInner) GetCustomFields() []QuickbooksDesktopBillsPostRequestExpenseLinesInnerCustomFieldsInner {
	if o == nil || IsNil(o.CustomFields) {
		var ret []QuickbooksDesktopBillsPostRequestExpenseLinesInnerCustomFieldsInner
		return ret
	}
	return o.CustomFields
}

// GetCustomFieldsOk returns a tuple with the CustomFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopPurchaseOrdersPostRequestLinesInner) GetCustomFieldsOk() ([]QuickbooksDesktopBillsPostRequestExpenseLinesInnerCustomFieldsInner, bool) {
	if o == nil || IsNil(o.CustomFields) {
		return nil, false
	}
	return o.CustomFields, true
}

// HasCustomFields returns a boolean if a field has been set.
func (o *QuickbooksDesktopPurchaseOrdersPostRequestLinesInner) HasCustomFields() bool {
	if o != nil && !IsNil(o.CustomFields) {
		return true
	}

	return false
}

// SetCustomFields gets a reference to the given []QuickbooksDesktopBillsPostRequestExpenseLinesInnerCustomFieldsInner and assigns it to the CustomFields field.
func (o *QuickbooksDesktopPurchaseOrdersPostRequestLinesInner) SetCustomFields(v []QuickbooksDesktopBillsPostRequestExpenseLinesInnerCustomFieldsInner) {
	o.CustomFields = v
}

func (o QuickbooksDesktopPurchaseOrdersPostRequestLinesInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QuickbooksDesktopPurchaseOrdersPostRequestLinesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ItemId) {
		toSerialize["itemId"] = o.ItemId
	}
	if !IsNil(o.Sku) {
		toSerialize["sku"] = o.Sku
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Quantity) {
		toSerialize["quantity"] = o.Quantity
	}
	if !IsNil(o.UnitOfMeasure) {
		toSerialize["unitOfMeasure"] = o.UnitOfMeasure
	}
	if !IsNil(o.Rate) {
		toSerialize["rate"] = o.Rate
	}
	if !IsNil(o.ClassId) {
		toSerialize["classId"] = o.ClassId
	}
	if !IsNil(o.Amount) {
		toSerialize["amount"] = o.Amount
	}
	if !IsNil(o.InventorySiteLocationId) {
		toSerialize["inventorySiteLocationId"] = o.InventorySiteLocationId
	}
	if !IsNil(o.PayeeId) {
		toSerialize["payeeId"] = o.PayeeId
	}
	if !IsNil(o.ServiceDate) {
		toSerialize["serviceDate"] = o.ServiceDate
	}
	if !IsNil(o.SalesTaxCodeId) {
		toSerialize["salesTaxCodeId"] = o.SalesTaxCodeId
	}
	if !IsNil(o.OverrideItemAccountId) {
		toSerialize["overrideItemAccountId"] = o.OverrideItemAccountId
	}
	if !IsNil(o.OtherCustomField1) {
		toSerialize["otherCustomField1"] = o.OtherCustomField1
	}
	if !IsNil(o.OtherCustomField2) {
		toSerialize["otherCustomField2"] = o.OtherCustomField2
	}
	if !IsNil(o.CustomFields) {
		toSerialize["customFields"] = o.CustomFields
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *QuickbooksDesktopPurchaseOrdersPostRequestLinesInner) UnmarshalJSON(data []byte) (err error) {
	varQuickbooksDesktopPurchaseOrdersPostRequestLinesInner := _QuickbooksDesktopPurchaseOrdersPostRequestLinesInner{}

	err = json.Unmarshal(data, &varQuickbooksDesktopPurchaseOrdersPostRequestLinesInner)

	if err != nil {
		return err
	}

	*o = QuickbooksDesktopPurchaseOrdersPostRequestLinesInner(varQuickbooksDesktopPurchaseOrdersPostRequestLinesInner)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "itemId")
		delete(additionalProperties, "sku")
		delete(additionalProperties, "description")
		delete(additionalProperties, "quantity")
		delete(additionalProperties, "unitOfMeasure")
		delete(additionalProperties, "rate")
		delete(additionalProperties, "classId")
		delete(additionalProperties, "amount")
		delete(additionalProperties, "inventorySiteLocationId")
		delete(additionalProperties, "payeeId")
		delete(additionalProperties, "serviceDate")
		delete(additionalProperties, "salesTaxCodeId")
		delete(additionalProperties, "overrideItemAccountId")
		delete(additionalProperties, "otherCustomField1")
		delete(additionalProperties, "otherCustomField2")
		delete(additionalProperties, "customFields")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableQuickbooksDesktopPurchaseOrdersPostRequestLinesInner struct {
	value *QuickbooksDesktopPurchaseOrdersPostRequestLinesInner
	isSet bool
}

func (v NullableQuickbooksDesktopPurchaseOrdersPostRequestLinesInner) Get() *QuickbooksDesktopPurchaseOrdersPostRequestLinesInner {
	return v.value
}

func (v *NullableQuickbooksDesktopPurchaseOrdersPostRequestLinesInner) Set(val *QuickbooksDesktopPurchaseOrdersPostRequestLinesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableQuickbooksDesktopPurchaseOrdersPostRequestLinesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableQuickbooksDesktopPurchaseOrdersPostRequestLinesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQuickbooksDesktopPurchaseOrdersPostRequestLinesInner(val *QuickbooksDesktopPurchaseOrdersPostRequestLinesInner) *NullableQuickbooksDesktopPurchaseOrdersPostRequestLinesInner {
	return &NullableQuickbooksDesktopPurchaseOrdersPostRequestLinesInner{value: val, isSet: true}
}

func (v NullableQuickbooksDesktopPurchaseOrdersPostRequestLinesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQuickbooksDesktopPurchaseOrdersPostRequestLinesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


