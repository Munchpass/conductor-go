/*
Conductor API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package conductor

import (
	"encoding/json"
	"fmt"
)

// checks if the QuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionRequest{}

// QuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionRequest The transaction request data originally supplied for this credit card transaction when using QuickBooks Merchant Services (QBMS).
type QuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionRequest struct {
	// The credit card number. Must be masked with lower case \"x\" and no dashes.
	Number string `json:"number"`
	// The month when the credit card expires.
	ExpirationMonth float32 `json:"expirationMonth"`
	// The year when the credit card expires.
	ExpirationYear float32 `json:"expirationYear"`
	// The cardholder's name on the card.
	Name string `json:"name"`
	// The card's billing address.
	Address *string `json:"address,omitempty"`
	// The card's billing address ZIP or postal code.
	PostalCode *string `json:"postalCode,omitempty"`
	// The commercial card code identifies the type of business credit card being used (purchase, corporate, or business) for Visa and Mastercard transactions only. When provided, this code may qualify the transaction for lower processing fees compared to the standard rates that apply when no code is specified.
	CommercialCardCode *string `json:"commercialCardCode,omitempty"`
	// Indicates whether this credit card transaction came from a card swipe (`card_present`) or not (`card_not_present`).
	TransactionMode *string `json:"transactionMode,omitempty"`
	// The QBMS transaction type from which the current transaction data originated.
	TransactionType *string `json:"transactionType,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _QuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionRequest QuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionRequest

// NewQuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionRequest instantiates a new QuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionRequest(number string, expirationMonth float32, expirationYear float32, name string) *QuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionRequest {
	this := QuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionRequest{}
	this.Number = number
	this.ExpirationMonth = expirationMonth
	this.ExpirationYear = expirationYear
	this.Name = name
	var transactionMode string = "card_not_present"
	this.TransactionMode = &transactionMode
	return &this
}

// NewQuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionRequestWithDefaults instantiates a new QuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionRequestWithDefaults() *QuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionRequest {
	this := QuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionRequest{}
	var transactionMode string = "card_not_present"
	this.TransactionMode = &transactionMode
	return &this
}

// GetNumber returns the Number field value
func (o *QuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionRequest) GetNumber() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Number
}

// GetNumberOk returns a tuple with the Number field value
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionRequest) GetNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Number, true
}

// SetNumber sets field value
func (o *QuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionRequest) SetNumber(v string) {
	o.Number = v
}

// GetExpirationMonth returns the ExpirationMonth field value
func (o *QuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionRequest) GetExpirationMonth() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.ExpirationMonth
}

// GetExpirationMonthOk returns a tuple with the ExpirationMonth field value
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionRequest) GetExpirationMonthOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExpirationMonth, true
}

// SetExpirationMonth sets field value
func (o *QuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionRequest) SetExpirationMonth(v float32) {
	o.ExpirationMonth = v
}

// GetExpirationYear returns the ExpirationYear field value
func (o *QuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionRequest) GetExpirationYear() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.ExpirationYear
}

// GetExpirationYearOk returns a tuple with the ExpirationYear field value
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionRequest) GetExpirationYearOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExpirationYear, true
}

// SetExpirationYear sets field value
func (o *QuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionRequest) SetExpirationYear(v float32) {
	o.ExpirationYear = v
}

// GetName returns the Name field value
func (o *QuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *QuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionRequest) SetName(v string) {
	o.Name = v
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *QuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionRequest) GetAddress() string {
	if o == nil || IsNil(o.Address) {
		var ret string
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionRequest) GetAddressOk() (*string, bool) {
	if o == nil || IsNil(o.Address) {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *QuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionRequest) HasAddress() bool {
	if o != nil && !IsNil(o.Address) {
		return true
	}

	return false
}

// SetAddress gets a reference to the given string and assigns it to the Address field.
func (o *QuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionRequest) SetAddress(v string) {
	o.Address = &v
}

// GetPostalCode returns the PostalCode field value if set, zero value otherwise.
func (o *QuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionRequest) GetPostalCode() string {
	if o == nil || IsNil(o.PostalCode) {
		var ret string
		return ret
	}
	return *o.PostalCode
}

// GetPostalCodeOk returns a tuple with the PostalCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionRequest) GetPostalCodeOk() (*string, bool) {
	if o == nil || IsNil(o.PostalCode) {
		return nil, false
	}
	return o.PostalCode, true
}

// HasPostalCode returns a boolean if a field has been set.
func (o *QuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionRequest) HasPostalCode() bool {
	if o != nil && !IsNil(o.PostalCode) {
		return true
	}

	return false
}

// SetPostalCode gets a reference to the given string and assigns it to the PostalCode field.
func (o *QuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionRequest) SetPostalCode(v string) {
	o.PostalCode = &v
}

// GetCommercialCardCode returns the CommercialCardCode field value if set, zero value otherwise.
func (o *QuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionRequest) GetCommercialCardCode() string {
	if o == nil || IsNil(o.CommercialCardCode) {
		var ret string
		return ret
	}
	return *o.CommercialCardCode
}

// GetCommercialCardCodeOk returns a tuple with the CommercialCardCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionRequest) GetCommercialCardCodeOk() (*string, bool) {
	if o == nil || IsNil(o.CommercialCardCode) {
		return nil, false
	}
	return o.CommercialCardCode, true
}

// HasCommercialCardCode returns a boolean if a field has been set.
func (o *QuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionRequest) HasCommercialCardCode() bool {
	if o != nil && !IsNil(o.CommercialCardCode) {
		return true
	}

	return false
}

// SetCommercialCardCode gets a reference to the given string and assigns it to the CommercialCardCode field.
func (o *QuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionRequest) SetCommercialCardCode(v string) {
	o.CommercialCardCode = &v
}

// GetTransactionMode returns the TransactionMode field value if set, zero value otherwise.
func (o *QuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionRequest) GetTransactionMode() string {
	if o == nil || IsNil(o.TransactionMode) {
		var ret string
		return ret
	}
	return *o.TransactionMode
}

// GetTransactionModeOk returns a tuple with the TransactionMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionRequest) GetTransactionModeOk() (*string, bool) {
	if o == nil || IsNil(o.TransactionMode) {
		return nil, false
	}
	return o.TransactionMode, true
}

// HasTransactionMode returns a boolean if a field has been set.
func (o *QuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionRequest) HasTransactionMode() bool {
	if o != nil && !IsNil(o.TransactionMode) {
		return true
	}

	return false
}

// SetTransactionMode gets a reference to the given string and assigns it to the TransactionMode field.
func (o *QuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionRequest) SetTransactionMode(v string) {
	o.TransactionMode = &v
}

// GetTransactionType returns the TransactionType field value if set, zero value otherwise.
func (o *QuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionRequest) GetTransactionType() string {
	if o == nil || IsNil(o.TransactionType) {
		var ret string
		return ret
	}
	return *o.TransactionType
}

// GetTransactionTypeOk returns a tuple with the TransactionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionRequest) GetTransactionTypeOk() (*string, bool) {
	if o == nil || IsNil(o.TransactionType) {
		return nil, false
	}
	return o.TransactionType, true
}

// HasTransactionType returns a boolean if a field has been set.
func (o *QuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionRequest) HasTransactionType() bool {
	if o != nil && !IsNil(o.TransactionType) {
		return true
	}

	return false
}

// SetTransactionType gets a reference to the given string and assigns it to the TransactionType field.
func (o *QuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionRequest) SetTransactionType(v string) {
	o.TransactionType = &v
}

func (o QuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["number"] = o.Number
	toSerialize["expirationMonth"] = o.ExpirationMonth
	toSerialize["expirationYear"] = o.ExpirationYear
	toSerialize["name"] = o.Name
	if !IsNil(o.Address) {
		toSerialize["address"] = o.Address
	}
	if !IsNil(o.PostalCode) {
		toSerialize["postalCode"] = o.PostalCode
	}
	if !IsNil(o.CommercialCardCode) {
		toSerialize["commercialCardCode"] = o.CommercialCardCode
	}
	if !IsNil(o.TransactionMode) {
		toSerialize["transactionMode"] = o.TransactionMode
	}
	if !IsNil(o.TransactionType) {
		toSerialize["transactionType"] = o.TransactionType
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *QuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"number",
		"expirationMonth",
		"expirationYear",
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varQuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionRequest := _QuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionRequest{}

	err = json.Unmarshal(data, &varQuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionRequest)

	if err != nil {
		return err
	}

	*o = QuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionRequest(varQuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "number")
		delete(additionalProperties, "expirationMonth")
		delete(additionalProperties, "expirationYear")
		delete(additionalProperties, "name")
		delete(additionalProperties, "address")
		delete(additionalProperties, "postalCode")
		delete(additionalProperties, "commercialCardCode")
		delete(additionalProperties, "transactionMode")
		delete(additionalProperties, "transactionType")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableQuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionRequest struct {
	value *QuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionRequest
	isSet bool
}

func (v NullableQuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionRequest) Get() *QuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionRequest {
	return v.value
}

func (v *NullableQuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionRequest) Set(val *QuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableQuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableQuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionRequest(val *QuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionRequest) *NullableQuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionRequest {
	return &NullableQuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionRequest{value: val, isSet: true}
}

func (v NullableQuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQuickbooksDesktopReceivePaymentsPostRequestCreditCardTransactionRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


