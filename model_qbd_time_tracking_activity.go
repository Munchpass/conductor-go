/*
Conductor API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package conductor

import (
	"encoding/json"
	"fmt"
)

// checks if the QbdTimeTrackingActivity type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QbdTimeTrackingActivity{}

// QbdTimeTrackingActivity struct for QbdTimeTrackingActivity
type QbdTimeTrackingActivity struct {
	// The unique identifier assigned by QuickBooks to this time tracking activity. This ID is unique across all transaction types.
	Id string `json:"id"`
	// The type of object. This value is always `\"qbd_time_tracking_activity\"`.
	ObjectType string `json:"objectType"`
	// The date and time when this time tracking activity was created, in ISO 8601 format (YYYY-MM-DDThh:mm:ss±hh:mm). The time zone is the same as the user's time zone in QuickBooks.
	CreatedAt string `json:"createdAt"`
	// The date and time when this time tracking activity was last updated, in ISO 8601 format (YYYY-MM-DDThh:mm:ss±hh:mm). The time zone is the same as the user's time zone in QuickBooks.
	UpdatedAt string `json:"updatedAt"`
	// The current QuickBooks-assigned revision number of this time tracking activity object, which changes each time the object is modified. When updating this object, you must provide the most recent `revisionNumber` to ensure you're working with the latest data; otherwise, the update will return an error.
	RevisionNumber string `json:"revisionNumber"`
	// The date of this time tracking activity, in ISO 8601 format (YYYY-MM-DD).
	TransactionDate string `json:"transactionDate"`
	Entity QbdTimeTrackingActivityEntity `json:"entity"`
	Customer QbdTimeTrackingActivityCustomer `json:"customer"`
	ServiceItem QbdTimeTrackingActivityServiceItem `json:"serviceItem"`
	// The time spent performing the service during this time tracking activity, in ISO 8601 format for time intervals (PTnHnMnS). For example, 1 hour and 30 minutes is represented as PT1H30M.  **NOTE**: Although seconds can be specified when creating a time tracking activity, they are not returned in responses since QuickBooks Desktop's UI does not display seconds.  **IMPORTANT**: This field is required for updating time tracking activities, even if the field is not being modified, because of a bug in QuickBooks itself.
	Duration string `json:"duration"`
	Class QbdTimeTrackingActivityClass `json:"class"`
	PayrollWageItem QbdTimeTrackingActivityPayrollWageItem `json:"payrollWageItem"`
	// A note or comment about this time tracking activity.
	Note string `json:"note"`
	// The billing status of this time tracking activity.  **IMPORTANT**: When this field is set to \"billable\" for time tracking activities, both `customer` and `serviceItem` are required so that an invoice can be created.
	BillingStatus string `json:"billingStatus"`
	// A globally unique identifier (GUID) you, the developer, can provide for tracking this object in your external system. This field is immutable and can only be set during object creation.
	ExternalId string `json:"externalId"`
	// Indicates whether this time tracking activity has been billed.
	IsBilled bool `json:"isBilled"`
	AdditionalProperties map[string]interface{}
}

type _QbdTimeTrackingActivity QbdTimeTrackingActivity

// NewQbdTimeTrackingActivity instantiates a new QbdTimeTrackingActivity object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQbdTimeTrackingActivity(id string, objectType string, createdAt string, updatedAt string, revisionNumber string, transactionDate string, entity QbdTimeTrackingActivityEntity, customer QbdTimeTrackingActivityCustomer, serviceItem QbdTimeTrackingActivityServiceItem, duration string, class QbdTimeTrackingActivityClass, payrollWageItem QbdTimeTrackingActivityPayrollWageItem, note string, billingStatus string, externalId string, isBilled bool) *QbdTimeTrackingActivity {
	this := QbdTimeTrackingActivity{}
	this.Id = id
	this.ObjectType = objectType
	this.CreatedAt = createdAt
	this.UpdatedAt = updatedAt
	this.RevisionNumber = revisionNumber
	this.TransactionDate = transactionDate
	this.Entity = entity
	this.Customer = customer
	this.ServiceItem = serviceItem
	this.Duration = duration
	this.Class = class
	this.PayrollWageItem = payrollWageItem
	this.Note = note
	this.BillingStatus = billingStatus
	this.ExternalId = externalId
	this.IsBilled = isBilled
	return &this
}

// NewQbdTimeTrackingActivityWithDefaults instantiates a new QbdTimeTrackingActivity object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQbdTimeTrackingActivityWithDefaults() *QbdTimeTrackingActivity {
	this := QbdTimeTrackingActivity{}
	return &this
}

// GetId returns the Id field value
func (o *QbdTimeTrackingActivity) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *QbdTimeTrackingActivity) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *QbdTimeTrackingActivity) SetId(v string) {
	o.Id = v
}

// GetObjectType returns the ObjectType field value
func (o *QbdTimeTrackingActivity) GetObjectType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ObjectType
}

// GetObjectTypeOk returns a tuple with the ObjectType field value
// and a boolean to check if the value has been set.
func (o *QbdTimeTrackingActivity) GetObjectTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ObjectType, true
}

// SetObjectType sets field value
func (o *QbdTimeTrackingActivity) SetObjectType(v string) {
	o.ObjectType = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *QbdTimeTrackingActivity) GetCreatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *QbdTimeTrackingActivity) GetCreatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *QbdTimeTrackingActivity) SetCreatedAt(v string) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *QbdTimeTrackingActivity) GetUpdatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *QbdTimeTrackingActivity) GetUpdatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *QbdTimeTrackingActivity) SetUpdatedAt(v string) {
	o.UpdatedAt = v
}

// GetRevisionNumber returns the RevisionNumber field value
func (o *QbdTimeTrackingActivity) GetRevisionNumber() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RevisionNumber
}

// GetRevisionNumberOk returns a tuple with the RevisionNumber field value
// and a boolean to check if the value has been set.
func (o *QbdTimeTrackingActivity) GetRevisionNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RevisionNumber, true
}

// SetRevisionNumber sets field value
func (o *QbdTimeTrackingActivity) SetRevisionNumber(v string) {
	o.RevisionNumber = v
}

// GetTransactionDate returns the TransactionDate field value
func (o *QbdTimeTrackingActivity) GetTransactionDate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TransactionDate
}

// GetTransactionDateOk returns a tuple with the TransactionDate field value
// and a boolean to check if the value has been set.
func (o *QbdTimeTrackingActivity) GetTransactionDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TransactionDate, true
}

// SetTransactionDate sets field value
func (o *QbdTimeTrackingActivity) SetTransactionDate(v string) {
	o.TransactionDate = v
}

// GetEntity returns the Entity field value
func (o *QbdTimeTrackingActivity) GetEntity() QbdTimeTrackingActivityEntity {
	if o == nil {
		var ret QbdTimeTrackingActivityEntity
		return ret
	}

	return o.Entity
}

// GetEntityOk returns a tuple with the Entity field value
// and a boolean to check if the value has been set.
func (o *QbdTimeTrackingActivity) GetEntityOk() (*QbdTimeTrackingActivityEntity, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Entity, true
}

// SetEntity sets field value
func (o *QbdTimeTrackingActivity) SetEntity(v QbdTimeTrackingActivityEntity) {
	o.Entity = v
}

// GetCustomer returns the Customer field value
func (o *QbdTimeTrackingActivity) GetCustomer() QbdTimeTrackingActivityCustomer {
	if o == nil {
		var ret QbdTimeTrackingActivityCustomer
		return ret
	}

	return o.Customer
}

// GetCustomerOk returns a tuple with the Customer field value
// and a boolean to check if the value has been set.
func (o *QbdTimeTrackingActivity) GetCustomerOk() (*QbdTimeTrackingActivityCustomer, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Customer, true
}

// SetCustomer sets field value
func (o *QbdTimeTrackingActivity) SetCustomer(v QbdTimeTrackingActivityCustomer) {
	o.Customer = v
}

// GetServiceItem returns the ServiceItem field value
func (o *QbdTimeTrackingActivity) GetServiceItem() QbdTimeTrackingActivityServiceItem {
	if o == nil {
		var ret QbdTimeTrackingActivityServiceItem
		return ret
	}

	return o.ServiceItem
}

// GetServiceItemOk returns a tuple with the ServiceItem field value
// and a boolean to check if the value has been set.
func (o *QbdTimeTrackingActivity) GetServiceItemOk() (*QbdTimeTrackingActivityServiceItem, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServiceItem, true
}

// SetServiceItem sets field value
func (o *QbdTimeTrackingActivity) SetServiceItem(v QbdTimeTrackingActivityServiceItem) {
	o.ServiceItem = v
}

// GetDuration returns the Duration field value
func (o *QbdTimeTrackingActivity) GetDuration() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Duration
}

// GetDurationOk returns a tuple with the Duration field value
// and a boolean to check if the value has been set.
func (o *QbdTimeTrackingActivity) GetDurationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Duration, true
}

// SetDuration sets field value
func (o *QbdTimeTrackingActivity) SetDuration(v string) {
	o.Duration = v
}

// GetClass returns the Class field value
func (o *QbdTimeTrackingActivity) GetClass() QbdTimeTrackingActivityClass {
	if o == nil {
		var ret QbdTimeTrackingActivityClass
		return ret
	}

	return o.Class
}

// GetClassOk returns a tuple with the Class field value
// and a boolean to check if the value has been set.
func (o *QbdTimeTrackingActivity) GetClassOk() (*QbdTimeTrackingActivityClass, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Class, true
}

// SetClass sets field value
func (o *QbdTimeTrackingActivity) SetClass(v QbdTimeTrackingActivityClass) {
	o.Class = v
}

// GetPayrollWageItem returns the PayrollWageItem field value
func (o *QbdTimeTrackingActivity) GetPayrollWageItem() QbdTimeTrackingActivityPayrollWageItem {
	if o == nil {
		var ret QbdTimeTrackingActivityPayrollWageItem
		return ret
	}

	return o.PayrollWageItem
}

// GetPayrollWageItemOk returns a tuple with the PayrollWageItem field value
// and a boolean to check if the value has been set.
func (o *QbdTimeTrackingActivity) GetPayrollWageItemOk() (*QbdTimeTrackingActivityPayrollWageItem, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PayrollWageItem, true
}

// SetPayrollWageItem sets field value
func (o *QbdTimeTrackingActivity) SetPayrollWageItem(v QbdTimeTrackingActivityPayrollWageItem) {
	o.PayrollWageItem = v
}

// GetNote returns the Note field value
func (o *QbdTimeTrackingActivity) GetNote() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Note
}

// GetNoteOk returns a tuple with the Note field value
// and a boolean to check if the value has been set.
func (o *QbdTimeTrackingActivity) GetNoteOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Note, true
}

// SetNote sets field value
func (o *QbdTimeTrackingActivity) SetNote(v string) {
	o.Note = v
}

// GetBillingStatus returns the BillingStatus field value
func (o *QbdTimeTrackingActivity) GetBillingStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BillingStatus
}

// GetBillingStatusOk returns a tuple with the BillingStatus field value
// and a boolean to check if the value has been set.
func (o *QbdTimeTrackingActivity) GetBillingStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BillingStatus, true
}

// SetBillingStatus sets field value
func (o *QbdTimeTrackingActivity) SetBillingStatus(v string) {
	o.BillingStatus = v
}

// GetExternalId returns the ExternalId field value
func (o *QbdTimeTrackingActivity) GetExternalId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ExternalId
}

// GetExternalIdOk returns a tuple with the ExternalId field value
// and a boolean to check if the value has been set.
func (o *QbdTimeTrackingActivity) GetExternalIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExternalId, true
}

// SetExternalId sets field value
func (o *QbdTimeTrackingActivity) SetExternalId(v string) {
	o.ExternalId = v
}

// GetIsBilled returns the IsBilled field value
func (o *QbdTimeTrackingActivity) GetIsBilled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsBilled
}

// GetIsBilledOk returns a tuple with the IsBilled field value
// and a boolean to check if the value has been set.
func (o *QbdTimeTrackingActivity) GetIsBilledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsBilled, true
}

// SetIsBilled sets field value
func (o *QbdTimeTrackingActivity) SetIsBilled(v bool) {
	o.IsBilled = v
}

func (o QbdTimeTrackingActivity) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QbdTimeTrackingActivity) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["objectType"] = o.ObjectType
	toSerialize["createdAt"] = o.CreatedAt
	toSerialize["updatedAt"] = o.UpdatedAt
	toSerialize["revisionNumber"] = o.RevisionNumber
	toSerialize["transactionDate"] = o.TransactionDate
	toSerialize["entity"] = o.Entity
	toSerialize["customer"] = o.Customer
	toSerialize["serviceItem"] = o.ServiceItem
	toSerialize["duration"] = o.Duration
	toSerialize["class"] = o.Class
	toSerialize["payrollWageItem"] = o.PayrollWageItem
	toSerialize["note"] = o.Note
	toSerialize["billingStatus"] = o.BillingStatus
	toSerialize["externalId"] = o.ExternalId
	toSerialize["isBilled"] = o.IsBilled

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *QbdTimeTrackingActivity) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"objectType",
		"createdAt",
		"updatedAt",
		"revisionNumber",
		"transactionDate",
		"entity",
		"customer",
		"serviceItem",
		"duration",
		"class",
		"payrollWageItem",
		"note",
		"billingStatus",
		"externalId",
		"isBilled",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varQbdTimeTrackingActivity := _QbdTimeTrackingActivity{}

	err = json.Unmarshal(data, &varQbdTimeTrackingActivity)

	if err != nil {
		return err
	}

	*o = QbdTimeTrackingActivity(varQbdTimeTrackingActivity)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "objectType")
		delete(additionalProperties, "createdAt")
		delete(additionalProperties, "updatedAt")
		delete(additionalProperties, "revisionNumber")
		delete(additionalProperties, "transactionDate")
		delete(additionalProperties, "entity")
		delete(additionalProperties, "customer")
		delete(additionalProperties, "serviceItem")
		delete(additionalProperties, "duration")
		delete(additionalProperties, "class")
		delete(additionalProperties, "payrollWageItem")
		delete(additionalProperties, "note")
		delete(additionalProperties, "billingStatus")
		delete(additionalProperties, "externalId")
		delete(additionalProperties, "isBilled")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableQbdTimeTrackingActivity struct {
	value *QbdTimeTrackingActivity
	isSet bool
}

func (v NullableQbdTimeTrackingActivity) Get() *QbdTimeTrackingActivity {
	return v.value
}

func (v *NullableQbdTimeTrackingActivity) Set(val *QbdTimeTrackingActivity) {
	v.value = val
	v.isSet = true
}

func (v NullableQbdTimeTrackingActivity) IsSet() bool {
	return v.isSet
}

func (v *NullableQbdTimeTrackingActivity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQbdTimeTrackingActivity(val *QbdTimeTrackingActivity) *NullableQbdTimeTrackingActivity {
	return &NullableQbdTimeTrackingActivity{value: val, isSet: true}
}

func (v NullableQbdTimeTrackingActivity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQbdTimeTrackingActivity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


