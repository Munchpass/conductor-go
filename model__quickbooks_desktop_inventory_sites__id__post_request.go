/*
Conductor API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package conductor

import (
	"encoding/json"
	"fmt"
)

// checks if the QuickbooksDesktopInventorySitesIdPostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QuickbooksDesktopInventorySitesIdPostRequest{}

// QuickbooksDesktopInventorySitesIdPostRequest struct for QuickbooksDesktopInventorySitesIdPostRequest
type QuickbooksDesktopInventorySitesIdPostRequest struct {
	// The current QuickBooks-assigned revision number of the inventory site object you are updating, which you can get by fetching the object first. Provide the most recent `revisionNumber` to ensure you're working with the latest data; otherwise, the update will return an error.
	RevisionNumber string `json:"revisionNumber"`
	// The case-insensitive unique name of this inventory site, unique across all inventory sites.  **NOTE**: Inventory sites do not have a `fullName` field because they are not hierarchical objects, which is why `name` is unique for them but not for objects that have parents.  Maximum length: 31 characters.
	Name *string `json:"name,omitempty"`
	// Indicates whether this inventory site is active. Inactive objects are typically hidden from views and reports in QuickBooks. Defaults to `true`.
	IsActive *bool `json:"isActive,omitempty"`
	// The parent inventory site one level above this one in the hierarchy.
	ParentId *string `json:"parentId,omitempty"`
	// A description of this inventory site.
	Description *string `json:"description,omitempty"`
	// The name of the primary contact person for this inventory site.
	Contact *string `json:"contact,omitempty"`
	// The inventory site's primary telephone number.
	Phone *string `json:"phone,omitempty"`
	// The inventory site's fax number.
	Fax *string `json:"fax,omitempty"`
	// The inventory site's email address.
	Email *string `json:"email,omitempty"`
	Address *QuickbooksDesktopInventorySitesPostRequestAddress `json:"address,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _QuickbooksDesktopInventorySitesIdPostRequest QuickbooksDesktopInventorySitesIdPostRequest

// NewQuickbooksDesktopInventorySitesIdPostRequest instantiates a new QuickbooksDesktopInventorySitesIdPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQuickbooksDesktopInventorySitesIdPostRequest(revisionNumber string) *QuickbooksDesktopInventorySitesIdPostRequest {
	this := QuickbooksDesktopInventorySitesIdPostRequest{}
	this.RevisionNumber = revisionNumber
	return &this
}

// NewQuickbooksDesktopInventorySitesIdPostRequestWithDefaults instantiates a new QuickbooksDesktopInventorySitesIdPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQuickbooksDesktopInventorySitesIdPostRequestWithDefaults() *QuickbooksDesktopInventorySitesIdPostRequest {
	this := QuickbooksDesktopInventorySitesIdPostRequest{}
	return &this
}

// GetRevisionNumber returns the RevisionNumber field value
func (o *QuickbooksDesktopInventorySitesIdPostRequest) GetRevisionNumber() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RevisionNumber
}

// GetRevisionNumberOk returns a tuple with the RevisionNumber field value
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopInventorySitesIdPostRequest) GetRevisionNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RevisionNumber, true
}

// SetRevisionNumber sets field value
func (o *QuickbooksDesktopInventorySitesIdPostRequest) SetRevisionNumber(v string) {
	o.RevisionNumber = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *QuickbooksDesktopInventorySitesIdPostRequest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopInventorySitesIdPostRequest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *QuickbooksDesktopInventorySitesIdPostRequest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *QuickbooksDesktopInventorySitesIdPostRequest) SetName(v string) {
	o.Name = &v
}

// GetIsActive returns the IsActive field value if set, zero value otherwise.
func (o *QuickbooksDesktopInventorySitesIdPostRequest) GetIsActive() bool {
	if o == nil || IsNil(o.IsActive) {
		var ret bool
		return ret
	}
	return *o.IsActive
}

// GetIsActiveOk returns a tuple with the IsActive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopInventorySitesIdPostRequest) GetIsActiveOk() (*bool, bool) {
	if o == nil || IsNil(o.IsActive) {
		return nil, false
	}
	return o.IsActive, true
}

// HasIsActive returns a boolean if a field has been set.
func (o *QuickbooksDesktopInventorySitesIdPostRequest) HasIsActive() bool {
	if o != nil && !IsNil(o.IsActive) {
		return true
	}

	return false
}

// SetIsActive gets a reference to the given bool and assigns it to the IsActive field.
func (o *QuickbooksDesktopInventorySitesIdPostRequest) SetIsActive(v bool) {
	o.IsActive = &v
}

// GetParentId returns the ParentId field value if set, zero value otherwise.
func (o *QuickbooksDesktopInventorySitesIdPostRequest) GetParentId() string {
	if o == nil || IsNil(o.ParentId) {
		var ret string
		return ret
	}
	return *o.ParentId
}

// GetParentIdOk returns a tuple with the ParentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopInventorySitesIdPostRequest) GetParentIdOk() (*string, bool) {
	if o == nil || IsNil(o.ParentId) {
		return nil, false
	}
	return o.ParentId, true
}

// HasParentId returns a boolean if a field has been set.
func (o *QuickbooksDesktopInventorySitesIdPostRequest) HasParentId() bool {
	if o != nil && !IsNil(o.ParentId) {
		return true
	}

	return false
}

// SetParentId gets a reference to the given string and assigns it to the ParentId field.
func (o *QuickbooksDesktopInventorySitesIdPostRequest) SetParentId(v string) {
	o.ParentId = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *QuickbooksDesktopInventorySitesIdPostRequest) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopInventorySitesIdPostRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *QuickbooksDesktopInventorySitesIdPostRequest) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *QuickbooksDesktopInventorySitesIdPostRequest) SetDescription(v string) {
	o.Description = &v
}

// GetContact returns the Contact field value if set, zero value otherwise.
func (o *QuickbooksDesktopInventorySitesIdPostRequest) GetContact() string {
	if o == nil || IsNil(o.Contact) {
		var ret string
		return ret
	}
	return *o.Contact
}

// GetContactOk returns a tuple with the Contact field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopInventorySitesIdPostRequest) GetContactOk() (*string, bool) {
	if o == nil || IsNil(o.Contact) {
		return nil, false
	}
	return o.Contact, true
}

// HasContact returns a boolean if a field has been set.
func (o *QuickbooksDesktopInventorySitesIdPostRequest) HasContact() bool {
	if o != nil && !IsNil(o.Contact) {
		return true
	}

	return false
}

// SetContact gets a reference to the given string and assigns it to the Contact field.
func (o *QuickbooksDesktopInventorySitesIdPostRequest) SetContact(v string) {
	o.Contact = &v
}

// GetPhone returns the Phone field value if set, zero value otherwise.
func (o *QuickbooksDesktopInventorySitesIdPostRequest) GetPhone() string {
	if o == nil || IsNil(o.Phone) {
		var ret string
		return ret
	}
	return *o.Phone
}

// GetPhoneOk returns a tuple with the Phone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopInventorySitesIdPostRequest) GetPhoneOk() (*string, bool) {
	if o == nil || IsNil(o.Phone) {
		return nil, false
	}
	return o.Phone, true
}

// HasPhone returns a boolean if a field has been set.
func (o *QuickbooksDesktopInventorySitesIdPostRequest) HasPhone() bool {
	if o != nil && !IsNil(o.Phone) {
		return true
	}

	return false
}

// SetPhone gets a reference to the given string and assigns it to the Phone field.
func (o *QuickbooksDesktopInventorySitesIdPostRequest) SetPhone(v string) {
	o.Phone = &v
}

// GetFax returns the Fax field value if set, zero value otherwise.
func (o *QuickbooksDesktopInventorySitesIdPostRequest) GetFax() string {
	if o == nil || IsNil(o.Fax) {
		var ret string
		return ret
	}
	return *o.Fax
}

// GetFaxOk returns a tuple with the Fax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopInventorySitesIdPostRequest) GetFaxOk() (*string, bool) {
	if o == nil || IsNil(o.Fax) {
		return nil, false
	}
	return o.Fax, true
}

// HasFax returns a boolean if a field has been set.
func (o *QuickbooksDesktopInventorySitesIdPostRequest) HasFax() bool {
	if o != nil && !IsNil(o.Fax) {
		return true
	}

	return false
}

// SetFax gets a reference to the given string and assigns it to the Fax field.
func (o *QuickbooksDesktopInventorySitesIdPostRequest) SetFax(v string) {
	o.Fax = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *QuickbooksDesktopInventorySitesIdPostRequest) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopInventorySitesIdPostRequest) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *QuickbooksDesktopInventorySitesIdPostRequest) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *QuickbooksDesktopInventorySitesIdPostRequest) SetEmail(v string) {
	o.Email = &v
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *QuickbooksDesktopInventorySitesIdPostRequest) GetAddress() QuickbooksDesktopInventorySitesPostRequestAddress {
	if o == nil || IsNil(o.Address) {
		var ret QuickbooksDesktopInventorySitesPostRequestAddress
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopInventorySitesIdPostRequest) GetAddressOk() (*QuickbooksDesktopInventorySitesPostRequestAddress, bool) {
	if o == nil || IsNil(o.Address) {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *QuickbooksDesktopInventorySitesIdPostRequest) HasAddress() bool {
	if o != nil && !IsNil(o.Address) {
		return true
	}

	return false
}

// SetAddress gets a reference to the given QuickbooksDesktopInventorySitesPostRequestAddress and assigns it to the Address field.
func (o *QuickbooksDesktopInventorySitesIdPostRequest) SetAddress(v QuickbooksDesktopInventorySitesPostRequestAddress) {
	o.Address = &v
}

func (o QuickbooksDesktopInventorySitesIdPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QuickbooksDesktopInventorySitesIdPostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["revisionNumber"] = o.RevisionNumber
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.IsActive) {
		toSerialize["isActive"] = o.IsActive
	}
	if !IsNil(o.ParentId) {
		toSerialize["parentId"] = o.ParentId
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Contact) {
		toSerialize["contact"] = o.Contact
	}
	if !IsNil(o.Phone) {
		toSerialize["phone"] = o.Phone
	}
	if !IsNil(o.Fax) {
		toSerialize["fax"] = o.Fax
	}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.Address) {
		toSerialize["address"] = o.Address
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *QuickbooksDesktopInventorySitesIdPostRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"revisionNumber",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varQuickbooksDesktopInventorySitesIdPostRequest := _QuickbooksDesktopInventorySitesIdPostRequest{}

	err = json.Unmarshal(data, &varQuickbooksDesktopInventorySitesIdPostRequest)

	if err != nil {
		return err
	}

	*o = QuickbooksDesktopInventorySitesIdPostRequest(varQuickbooksDesktopInventorySitesIdPostRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "revisionNumber")
		delete(additionalProperties, "name")
		delete(additionalProperties, "isActive")
		delete(additionalProperties, "parentId")
		delete(additionalProperties, "description")
		delete(additionalProperties, "contact")
		delete(additionalProperties, "phone")
		delete(additionalProperties, "fax")
		delete(additionalProperties, "email")
		delete(additionalProperties, "address")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableQuickbooksDesktopInventorySitesIdPostRequest struct {
	value *QuickbooksDesktopInventorySitesIdPostRequest
	isSet bool
}

func (v NullableQuickbooksDesktopInventorySitesIdPostRequest) Get() *QuickbooksDesktopInventorySitesIdPostRequest {
	return v.value
}

func (v *NullableQuickbooksDesktopInventorySitesIdPostRequest) Set(val *QuickbooksDesktopInventorySitesIdPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableQuickbooksDesktopInventorySitesIdPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableQuickbooksDesktopInventorySitesIdPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQuickbooksDesktopInventorySitesIdPostRequest(val *QuickbooksDesktopInventorySitesIdPostRequest) *NullableQuickbooksDesktopInventorySitesIdPostRequest {
	return &NullableQuickbooksDesktopInventorySitesIdPostRequest{value: val, isSet: true}
}

func (v NullableQuickbooksDesktopInventorySitesIdPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQuickbooksDesktopInventorySitesIdPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


