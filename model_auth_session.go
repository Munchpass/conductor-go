/*
Conductor API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package conductor

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AuthSession type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AuthSession{}

// AuthSession struct for AuthSession
type AuthSession struct {
	// The unique identifier for this auth session.
	Id string `json:"id"`
	// The type of object. This value is always `\"auth_session\"`.
	ObjectType string `json:"objectType"`
	// The date and time when this auth session record was created.
	CreatedAt string `json:"createdAt"`
	// The ID of the end-user for whom to create an integration connection.
	EndUserId string `json:"endUserId"`
	// The secret used in `authFlowUrl` to securely access the authentication flow.
	ClientSecret string `json:"clientSecret"`
	// The URL of the authentication flow that you will pass to your client for your user to set up their integration connection.
	AuthFlowUrl string `json:"authFlowUrl"`
	// The date and time when this auth session expires. By default, this value is 30 minutes from creation. You can extend this time by setting `linkExpiryMins` when creating the auth session.
	ExpiresAt string `json:"expiresAt"`
	// The URL to which Conductor will redirect your user to return to your app after they complete the authentication flow. If `null`, their browser tab will close instead.
	RedirectUrl NullableString `json:"redirectUrl"`
}

type _AuthSession AuthSession

// NewAuthSession instantiates a new AuthSession object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthSession(id string, objectType string, createdAt string, endUserId string, clientSecret string, authFlowUrl string, expiresAt string, redirectUrl NullableString) *AuthSession {
	this := AuthSession{}
	this.Id = id
	this.ObjectType = objectType
	this.CreatedAt = createdAt
	this.EndUserId = endUserId
	this.ClientSecret = clientSecret
	this.AuthFlowUrl = authFlowUrl
	this.ExpiresAt = expiresAt
	this.RedirectUrl = redirectUrl
	return &this
}

// NewAuthSessionWithDefaults instantiates a new AuthSession object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthSessionWithDefaults() *AuthSession {
	this := AuthSession{}
	return &this
}

// GetId returns the Id field value
func (o *AuthSession) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *AuthSession) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *AuthSession) SetId(v string) {
	o.Id = v
}

// GetObjectType returns the ObjectType field value
func (o *AuthSession) GetObjectType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ObjectType
}

// GetObjectTypeOk returns a tuple with the ObjectType field value
// and a boolean to check if the value has been set.
func (o *AuthSession) GetObjectTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ObjectType, true
}

// SetObjectType sets field value
func (o *AuthSession) SetObjectType(v string) {
	o.ObjectType = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *AuthSession) GetCreatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *AuthSession) GetCreatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *AuthSession) SetCreatedAt(v string) {
	o.CreatedAt = v
}

// GetEndUserId returns the EndUserId field value
func (o *AuthSession) GetEndUserId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EndUserId
}

// GetEndUserIdOk returns a tuple with the EndUserId field value
// and a boolean to check if the value has been set.
func (o *AuthSession) GetEndUserIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EndUserId, true
}

// SetEndUserId sets field value
func (o *AuthSession) SetEndUserId(v string) {
	o.EndUserId = v
}

// GetClientSecret returns the ClientSecret field value
func (o *AuthSession) GetClientSecret() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ClientSecret
}

// GetClientSecretOk returns a tuple with the ClientSecret field value
// and a boolean to check if the value has been set.
func (o *AuthSession) GetClientSecretOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClientSecret, true
}

// SetClientSecret sets field value
func (o *AuthSession) SetClientSecret(v string) {
	o.ClientSecret = v
}

// GetAuthFlowUrl returns the AuthFlowUrl field value
func (o *AuthSession) GetAuthFlowUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AuthFlowUrl
}

// GetAuthFlowUrlOk returns a tuple with the AuthFlowUrl field value
// and a boolean to check if the value has been set.
func (o *AuthSession) GetAuthFlowUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AuthFlowUrl, true
}

// SetAuthFlowUrl sets field value
func (o *AuthSession) SetAuthFlowUrl(v string) {
	o.AuthFlowUrl = v
}

// GetExpiresAt returns the ExpiresAt field value
func (o *AuthSession) GetExpiresAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ExpiresAt
}

// GetExpiresAtOk returns a tuple with the ExpiresAt field value
// and a boolean to check if the value has been set.
func (o *AuthSession) GetExpiresAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExpiresAt, true
}

// SetExpiresAt sets field value
func (o *AuthSession) SetExpiresAt(v string) {
	o.ExpiresAt = v
}

// GetRedirectUrl returns the RedirectUrl field value
// If the value is explicit nil, the zero value for string will be returned
func (o *AuthSession) GetRedirectUrl() string {
	if o == nil || o.RedirectUrl.Get() == nil {
		var ret string
		return ret
	}

	return *o.RedirectUrl.Get()
}

// GetRedirectUrlOk returns a tuple with the RedirectUrl field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AuthSession) GetRedirectUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RedirectUrl.Get(), o.RedirectUrl.IsSet()
}

// SetRedirectUrl sets field value
func (o *AuthSession) SetRedirectUrl(v string) {
	o.RedirectUrl.Set(&v)
}

func (o AuthSession) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AuthSession) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["objectType"] = o.ObjectType
	toSerialize["createdAt"] = o.CreatedAt
	toSerialize["endUserId"] = o.EndUserId
	toSerialize["clientSecret"] = o.ClientSecret
	toSerialize["authFlowUrl"] = o.AuthFlowUrl
	toSerialize["expiresAt"] = o.ExpiresAt
	toSerialize["redirectUrl"] = o.RedirectUrl.Get()
	return toSerialize, nil
}

func (o *AuthSession) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"objectType",
		"createdAt",
		"endUserId",
		"clientSecret",
		"authFlowUrl",
		"expiresAt",
		"redirectUrl",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAuthSession := _AuthSession{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAuthSession)

	if err != nil {
		return err
	}

	*o = AuthSession(varAuthSession)

	return err
}

type NullableAuthSession struct {
	value *AuthSession
	isSet bool
}

func (v NullableAuthSession) Get() *AuthSession {
	return v.value
}

func (v *NullableAuthSession) Set(val *AuthSession) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthSession) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthSession) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthSession(val *AuthSession) *NullableAuthSession {
	return &NullableAuthSession{value: val, isSet: true}
}

func (v NullableAuthSession) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthSession) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


