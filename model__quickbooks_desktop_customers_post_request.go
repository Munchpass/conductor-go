/*
Conductor API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package conductor

import (
	"encoding/json"
	"fmt"
)

// checks if the QuickbooksDesktopCustomersPostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QuickbooksDesktopCustomersPostRequest{}

// QuickbooksDesktopCustomersPostRequest struct for QuickbooksDesktopCustomersPostRequest
type QuickbooksDesktopCustomersPostRequest struct {
	// The case-insensitive name of this customer. Not guaranteed to be unique because it does not include the names of its hierarchical parent objects like `fullName` does. For example, two customers could both have the `name` \"Website Redesign Project\", but they could have unique `fullName` values, such as \"ABC Corporation:Website Redesign Project\" and \"Baker:Website Redesign Project\".  Maximum length: 41 characters.
	Name string `json:"name"`
	// Indicates whether this customer is active. Inactive objects are typically hidden from views and reports in QuickBooks. Defaults to `true`.
	IsActive *bool `json:"isActive,omitempty"`
	// The customer's class. Classes can be used to categorize objects into meaningful segments, such as department, location, or type of work. In QuickBooks, class tracking is off by default.
	ClassId *string `json:"classId,omitempty"`
	// The parent customer one level above this one in the hierarchy. For example, if this customer has a `fullName` of \"ABC Corporation:Website Redesign Project\", its parent has a `fullName` of \"ABC Corporation\". If this customer is at the top level, this field will be `null`.
	ParentId *string `json:"parentId,omitempty"`
	// The name of the company associated with this customer. This name is used on invoices, checks, and other forms.
	CompanyName *string `json:"companyName,omitempty"`
	// The formal salutation title that precedes the name of the contact person for this customer, such as \"Mr.\", \"Ms.\", or \"Dr.\".
	Salutation *string `json:"salutation,omitempty"`
	// The first name of the contact person for this customer.  Maximum length: 25 characters.
	FirstName *string `json:"firstName,omitempty"`
	// The middle name of the contact person for this customer.  Maximum length: 5 characters.
	MiddleName *string `json:"middleName,omitempty"`
	// The last name of the contact person for this customer.  Maximum length: 25 characters.
	LastName *string `json:"lastName,omitempty"`
	// The job title of the contact person for this customer.
	JobTitle *string `json:"jobTitle,omitempty"`
	BillingAddress *QuickbooksDesktopCustomersPostRequestBillingAddress `json:"billingAddress,omitempty"`
	ShippingAddress *QuickbooksDesktopCustomersPostRequestShippingAddress `json:"shippingAddress,omitempty"`
	// A list of additional shipping addresses for this customer. Useful when the customer has multiple shipping locations.
	AlternateShippingAddresses []QuickbooksDesktopCustomersPostRequestAlternateShippingAddressesInner `json:"alternateShippingAddresses,omitempty"`
	// The customer's primary telephone number.
	Phone *string `json:"phone,omitempty"`
	// The customer's alternate telephone number.
	AlternatePhone *string `json:"alternatePhone,omitempty"`
	// The customer's fax number.
	Fax *string `json:"fax,omitempty"`
	// The customer's email address.
	Email *string `json:"email,omitempty"`
	// An email address to carbon copy (CC) on communications with this customer.
	CcEmail *string `json:"ccEmail,omitempty"`
	// The name of the primary contact person for this customer.
	Contact *string `json:"contact,omitempty"`
	// The name of a alternate contact person for this customer.
	AlternateContact *string `json:"alternateContact,omitempty"`
	// Additional custom contact fields for this customer, such as phone numbers or email addresses.
	CustomContactFields []QuickbooksDesktopCustomersPostRequestCustomContactFieldsInner `json:"customContactFields,omitempty"`
	// Additional alternate contacts for this customer.
	AdditionalContacts []QuickbooksDesktopCustomersPostRequestAdditionalContactsInner `json:"additionalContacts,omitempty"`
	// The customer's type, used for categorizing customers into meaningful segments, such as industry or region.
	CustomerTypeId *string `json:"customerTypeId,omitempty"`
	// The customer's payment terms, defining when payment is due and any applicable discounts.
	TermsId *string `json:"termsId,omitempty"`
	// The customer's sales representative. Sales representatives can be employees, vendors, or other names in QuickBooks.
	SalesRepresentativeId *string `json:"salesRepresentativeId,omitempty"`
	// The opening balance of this customer's account, indicating the amount owed by this customer, represented as a decimal string.
	OpeningBalance *string `json:"openingBalance,omitempty"`
	// The date of the opening balance of this customer, in ISO 8601 format (YYYY-MM-DD).
	OpeningBalanceDate *string `json:"openingBalanceDate,omitempty"`
	// The default sales-tax code for transactions with this customer, determining whether the transactions are taxable or non-taxable. This can be overridden at the transaction or transaction-line level.  Default codes include \"Non\" (non-taxable) and \"Tax\" (taxable), but custom codes can also be created in QuickBooks. If QuickBooks is not set up to charge sales tax (via the \"Do You Charge Sales Tax?\" preference), it will assign the default non-taxable code to all sales.
	SalesTaxCodeId *string `json:"salesTaxCodeId,omitempty"`
	// The sales-tax item used to calculate the actual tax amount for this customer's transactions by applying a specific tax rate collected for a single tax agency. Unlike `salesTaxCode`, which only indicates general taxability, this field drives the actual tax calculation and reporting.
	SalesTaxItemId *string `json:"salesTaxItemId,omitempty"`
	// The country for which sales tax is collected for this customer.
	SalesTaxCountry *string `json:"salesTaxCountry,omitempty"`
	// The customer's resale number, used if the customer is purchasing items for resale. This number does not affect sales tax calculations or reports in QuickBooks.
	ResaleNumber *string `json:"resaleNumber,omitempty"`
	// The customer's account number, which appears in the QuickBooks chart of accounts, reports, and graphs.  Note that if the \"Use Account Numbers\" preference is turned off in QuickBooks, the account number may not be visible in the user interface, but it can still be set and retrieved through the API.
	AccountNumber *string `json:"accountNumber,omitempty"`
	// The customer's credit limit, represented as a decimal string. This is the maximum amount of money this customer can spend before being billed. If `null`, there is no credit limit.
	CreditLimit *string `json:"creditLimit,omitempty"`
	// The customer's preferred payment method (e.g., cash, check, credit card).
	PreferredPaymentMethodId *string `json:"preferredPaymentMethodId,omitempty"`
	CreditCard *QuickbooksDesktopCustomersPostRequestCreditCard `json:"creditCard,omitempty"`
	// The status of this customer's job, if this object is a job (i.e., sub-customer).
	JobStatus *string `json:"jobStatus,omitempty"`
	// The date when work on this customer's job began, if applicable, in ISO 8601 format (YYYY-MM-DD).
	JobStartDate *string `json:"jobStartDate,omitempty"`
	// The projected completion date for this customer's job, if applicable, in ISO 8601 format (YYYY-MM-DD).
	JobProjectedEndDate *string `json:"jobProjectedEndDate,omitempty"`
	// The actual completion date of this customer's job, if applicable, in ISO 8601 format (YYYY-MM-DD).
	JobEndDate *string `json:"jobEndDate,omitempty"`
	// A brief description of this customer's job, if this object is a job (i.e., sub-customer).
	JobDescription *string `json:"jobDescription,omitempty"`
	// The type or category of this customer's job, if this object is a job (i.e., sub-customer). Useful for classifying into meaningful segments (e.g., repair, installation, consulting).
	JobTypeId *string `json:"jobTypeId,omitempty"`
	// A note or comment about this customer.
	Note *string `json:"note,omitempty"`
	// Additional notes about this customer.
	AdditionalNotes []QuickbooksDesktopCustomersPostRequestAdditionalNotesInner `json:"additionalNotes,omitempty"`
	// The preferred method for delivering invoices and other documents to this customer.
	PreferredDeliveryMethod *string `json:"preferredDeliveryMethod,omitempty"`
	// The customer's custom price level that QuickBooks automatically applies to calculate item rates in new transactions (e.g., invoices, sales receipts, sales orders, and credit memos) for this customer. While applied automatically, this can be overridden when creating individual transactions. Note that transactions will not show the price level itself, only the final `rate` calculated from it.
	PriceLevelId *string `json:"priceLevelId,omitempty"`
	// A globally unique identifier (GUID) you, the developer, can provide for tracking this object in your external system. This field is immutable and can only be set during object creation.  **IMPORTANT**: This field must be formatted as a valid GUID; otherwise, QuickBooks will return an error.
	ExternalId *string `json:"externalId,omitempty"`
	// The customer's tax registration number, for use in Canada or the UK.
	TaxRegistrationNumber *string `json:"taxRegistrationNumber,omitempty"`
	// The customer's currency. For built-in currencies, the name and code are standard international values. For user-defined currencies, all values are editable.
	CurrencyId *string `json:"currencyId,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _QuickbooksDesktopCustomersPostRequest QuickbooksDesktopCustomersPostRequest

// NewQuickbooksDesktopCustomersPostRequest instantiates a new QuickbooksDesktopCustomersPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQuickbooksDesktopCustomersPostRequest(name string) *QuickbooksDesktopCustomersPostRequest {
	this := QuickbooksDesktopCustomersPostRequest{}
	this.Name = name
	var isActive bool = true
	this.IsActive = &isActive
	var jobStatus string = "none"
	this.JobStatus = &jobStatus
	var preferredDeliveryMethod string = "none"
	this.PreferredDeliveryMethod = &preferredDeliveryMethod
	return &this
}

// NewQuickbooksDesktopCustomersPostRequestWithDefaults instantiates a new QuickbooksDesktopCustomersPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQuickbooksDesktopCustomersPostRequestWithDefaults() *QuickbooksDesktopCustomersPostRequest {
	this := QuickbooksDesktopCustomersPostRequest{}
	var isActive bool = true
	this.IsActive = &isActive
	var jobStatus string = "none"
	this.JobStatus = &jobStatus
	var preferredDeliveryMethod string = "none"
	this.PreferredDeliveryMethod = &preferredDeliveryMethod
	return &this
}

// GetName returns the Name field value
func (o *QuickbooksDesktopCustomersPostRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopCustomersPostRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *QuickbooksDesktopCustomersPostRequest) SetName(v string) {
	o.Name = v
}

// GetIsActive returns the IsActive field value if set, zero value otherwise.
func (o *QuickbooksDesktopCustomersPostRequest) GetIsActive() bool {
	if o == nil || IsNil(o.IsActive) {
		var ret bool
		return ret
	}
	return *o.IsActive
}

// GetIsActiveOk returns a tuple with the IsActive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopCustomersPostRequest) GetIsActiveOk() (*bool, bool) {
	if o == nil || IsNil(o.IsActive) {
		return nil, false
	}
	return o.IsActive, true
}

// HasIsActive returns a boolean if a field has been set.
func (o *QuickbooksDesktopCustomersPostRequest) HasIsActive() bool {
	if o != nil && !IsNil(o.IsActive) {
		return true
	}

	return false
}

// SetIsActive gets a reference to the given bool and assigns it to the IsActive field.
func (o *QuickbooksDesktopCustomersPostRequest) SetIsActive(v bool) {
	o.IsActive = &v
}

// GetClassId returns the ClassId field value if set, zero value otherwise.
func (o *QuickbooksDesktopCustomersPostRequest) GetClassId() string {
	if o == nil || IsNil(o.ClassId) {
		var ret string
		return ret
	}
	return *o.ClassId
}

// GetClassIdOk returns a tuple with the ClassId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopCustomersPostRequest) GetClassIdOk() (*string, bool) {
	if o == nil || IsNil(o.ClassId) {
		return nil, false
	}
	return o.ClassId, true
}

// HasClassId returns a boolean if a field has been set.
func (o *QuickbooksDesktopCustomersPostRequest) HasClassId() bool {
	if o != nil && !IsNil(o.ClassId) {
		return true
	}

	return false
}

// SetClassId gets a reference to the given string and assigns it to the ClassId field.
func (o *QuickbooksDesktopCustomersPostRequest) SetClassId(v string) {
	o.ClassId = &v
}

// GetParentId returns the ParentId field value if set, zero value otherwise.
func (o *QuickbooksDesktopCustomersPostRequest) GetParentId() string {
	if o == nil || IsNil(o.ParentId) {
		var ret string
		return ret
	}
	return *o.ParentId
}

// GetParentIdOk returns a tuple with the ParentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopCustomersPostRequest) GetParentIdOk() (*string, bool) {
	if o == nil || IsNil(o.ParentId) {
		return nil, false
	}
	return o.ParentId, true
}

// HasParentId returns a boolean if a field has been set.
func (o *QuickbooksDesktopCustomersPostRequest) HasParentId() bool {
	if o != nil && !IsNil(o.ParentId) {
		return true
	}

	return false
}

// SetParentId gets a reference to the given string and assigns it to the ParentId field.
func (o *QuickbooksDesktopCustomersPostRequest) SetParentId(v string) {
	o.ParentId = &v
}

// GetCompanyName returns the CompanyName field value if set, zero value otherwise.
func (o *QuickbooksDesktopCustomersPostRequest) GetCompanyName() string {
	if o == nil || IsNil(o.CompanyName) {
		var ret string
		return ret
	}
	return *o.CompanyName
}

// GetCompanyNameOk returns a tuple with the CompanyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopCustomersPostRequest) GetCompanyNameOk() (*string, bool) {
	if o == nil || IsNil(o.CompanyName) {
		return nil, false
	}
	return o.CompanyName, true
}

// HasCompanyName returns a boolean if a field has been set.
func (o *QuickbooksDesktopCustomersPostRequest) HasCompanyName() bool {
	if o != nil && !IsNil(o.CompanyName) {
		return true
	}

	return false
}

// SetCompanyName gets a reference to the given string and assigns it to the CompanyName field.
func (o *QuickbooksDesktopCustomersPostRequest) SetCompanyName(v string) {
	o.CompanyName = &v
}

// GetSalutation returns the Salutation field value if set, zero value otherwise.
func (o *QuickbooksDesktopCustomersPostRequest) GetSalutation() string {
	if o == nil || IsNil(o.Salutation) {
		var ret string
		return ret
	}
	return *o.Salutation
}

// GetSalutationOk returns a tuple with the Salutation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopCustomersPostRequest) GetSalutationOk() (*string, bool) {
	if o == nil || IsNil(o.Salutation) {
		return nil, false
	}
	return o.Salutation, true
}

// HasSalutation returns a boolean if a field has been set.
func (o *QuickbooksDesktopCustomersPostRequest) HasSalutation() bool {
	if o != nil && !IsNil(o.Salutation) {
		return true
	}

	return false
}

// SetSalutation gets a reference to the given string and assigns it to the Salutation field.
func (o *QuickbooksDesktopCustomersPostRequest) SetSalutation(v string) {
	o.Salutation = &v
}

// GetFirstName returns the FirstName field value if set, zero value otherwise.
func (o *QuickbooksDesktopCustomersPostRequest) GetFirstName() string {
	if o == nil || IsNil(o.FirstName) {
		var ret string
		return ret
	}
	return *o.FirstName
}

// GetFirstNameOk returns a tuple with the FirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopCustomersPostRequest) GetFirstNameOk() (*string, bool) {
	if o == nil || IsNil(o.FirstName) {
		return nil, false
	}
	return o.FirstName, true
}

// HasFirstName returns a boolean if a field has been set.
func (o *QuickbooksDesktopCustomersPostRequest) HasFirstName() bool {
	if o != nil && !IsNil(o.FirstName) {
		return true
	}

	return false
}

// SetFirstName gets a reference to the given string and assigns it to the FirstName field.
func (o *QuickbooksDesktopCustomersPostRequest) SetFirstName(v string) {
	o.FirstName = &v
}

// GetMiddleName returns the MiddleName field value if set, zero value otherwise.
func (o *QuickbooksDesktopCustomersPostRequest) GetMiddleName() string {
	if o == nil || IsNil(o.MiddleName) {
		var ret string
		return ret
	}
	return *o.MiddleName
}

// GetMiddleNameOk returns a tuple with the MiddleName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopCustomersPostRequest) GetMiddleNameOk() (*string, bool) {
	if o == nil || IsNil(o.MiddleName) {
		return nil, false
	}
	return o.MiddleName, true
}

// HasMiddleName returns a boolean if a field has been set.
func (o *QuickbooksDesktopCustomersPostRequest) HasMiddleName() bool {
	if o != nil && !IsNil(o.MiddleName) {
		return true
	}

	return false
}

// SetMiddleName gets a reference to the given string and assigns it to the MiddleName field.
func (o *QuickbooksDesktopCustomersPostRequest) SetMiddleName(v string) {
	o.MiddleName = &v
}

// GetLastName returns the LastName field value if set, zero value otherwise.
func (o *QuickbooksDesktopCustomersPostRequest) GetLastName() string {
	if o == nil || IsNil(o.LastName) {
		var ret string
		return ret
	}
	return *o.LastName
}

// GetLastNameOk returns a tuple with the LastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopCustomersPostRequest) GetLastNameOk() (*string, bool) {
	if o == nil || IsNil(o.LastName) {
		return nil, false
	}
	return o.LastName, true
}

// HasLastName returns a boolean if a field has been set.
func (o *QuickbooksDesktopCustomersPostRequest) HasLastName() bool {
	if o != nil && !IsNil(o.LastName) {
		return true
	}

	return false
}

// SetLastName gets a reference to the given string and assigns it to the LastName field.
func (o *QuickbooksDesktopCustomersPostRequest) SetLastName(v string) {
	o.LastName = &v
}

// GetJobTitle returns the JobTitle field value if set, zero value otherwise.
func (o *QuickbooksDesktopCustomersPostRequest) GetJobTitle() string {
	if o == nil || IsNil(o.JobTitle) {
		var ret string
		return ret
	}
	return *o.JobTitle
}

// GetJobTitleOk returns a tuple with the JobTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopCustomersPostRequest) GetJobTitleOk() (*string, bool) {
	if o == nil || IsNil(o.JobTitle) {
		return nil, false
	}
	return o.JobTitle, true
}

// HasJobTitle returns a boolean if a field has been set.
func (o *QuickbooksDesktopCustomersPostRequest) HasJobTitle() bool {
	if o != nil && !IsNil(o.JobTitle) {
		return true
	}

	return false
}

// SetJobTitle gets a reference to the given string and assigns it to the JobTitle field.
func (o *QuickbooksDesktopCustomersPostRequest) SetJobTitle(v string) {
	o.JobTitle = &v
}

// GetBillingAddress returns the BillingAddress field value if set, zero value otherwise.
func (o *QuickbooksDesktopCustomersPostRequest) GetBillingAddress() QuickbooksDesktopCustomersPostRequestBillingAddress {
	if o == nil || IsNil(o.BillingAddress) {
		var ret QuickbooksDesktopCustomersPostRequestBillingAddress
		return ret
	}
	return *o.BillingAddress
}

// GetBillingAddressOk returns a tuple with the BillingAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopCustomersPostRequest) GetBillingAddressOk() (*QuickbooksDesktopCustomersPostRequestBillingAddress, bool) {
	if o == nil || IsNil(o.BillingAddress) {
		return nil, false
	}
	return o.BillingAddress, true
}

// HasBillingAddress returns a boolean if a field has been set.
func (o *QuickbooksDesktopCustomersPostRequest) HasBillingAddress() bool {
	if o != nil && !IsNil(o.BillingAddress) {
		return true
	}

	return false
}

// SetBillingAddress gets a reference to the given QuickbooksDesktopCustomersPostRequestBillingAddress and assigns it to the BillingAddress field.
func (o *QuickbooksDesktopCustomersPostRequest) SetBillingAddress(v QuickbooksDesktopCustomersPostRequestBillingAddress) {
	o.BillingAddress = &v
}

// GetShippingAddress returns the ShippingAddress field value if set, zero value otherwise.
func (o *QuickbooksDesktopCustomersPostRequest) GetShippingAddress() QuickbooksDesktopCustomersPostRequestShippingAddress {
	if o == nil || IsNil(o.ShippingAddress) {
		var ret QuickbooksDesktopCustomersPostRequestShippingAddress
		return ret
	}
	return *o.ShippingAddress
}

// GetShippingAddressOk returns a tuple with the ShippingAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopCustomersPostRequest) GetShippingAddressOk() (*QuickbooksDesktopCustomersPostRequestShippingAddress, bool) {
	if o == nil || IsNil(o.ShippingAddress) {
		return nil, false
	}
	return o.ShippingAddress, true
}

// HasShippingAddress returns a boolean if a field has been set.
func (o *QuickbooksDesktopCustomersPostRequest) HasShippingAddress() bool {
	if o != nil && !IsNil(o.ShippingAddress) {
		return true
	}

	return false
}

// SetShippingAddress gets a reference to the given QuickbooksDesktopCustomersPostRequestShippingAddress and assigns it to the ShippingAddress field.
func (o *QuickbooksDesktopCustomersPostRequest) SetShippingAddress(v QuickbooksDesktopCustomersPostRequestShippingAddress) {
	o.ShippingAddress = &v
}

// GetAlternateShippingAddresses returns the AlternateShippingAddresses field value if set, zero value otherwise.
func (o *QuickbooksDesktopCustomersPostRequest) GetAlternateShippingAddresses() []QuickbooksDesktopCustomersPostRequestAlternateShippingAddressesInner {
	if o == nil || IsNil(o.AlternateShippingAddresses) {
		var ret []QuickbooksDesktopCustomersPostRequestAlternateShippingAddressesInner
		return ret
	}
	return o.AlternateShippingAddresses
}

// GetAlternateShippingAddressesOk returns a tuple with the AlternateShippingAddresses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopCustomersPostRequest) GetAlternateShippingAddressesOk() ([]QuickbooksDesktopCustomersPostRequestAlternateShippingAddressesInner, bool) {
	if o == nil || IsNil(o.AlternateShippingAddresses) {
		return nil, false
	}
	return o.AlternateShippingAddresses, true
}

// HasAlternateShippingAddresses returns a boolean if a field has been set.
func (o *QuickbooksDesktopCustomersPostRequest) HasAlternateShippingAddresses() bool {
	if o != nil && !IsNil(o.AlternateShippingAddresses) {
		return true
	}

	return false
}

// SetAlternateShippingAddresses gets a reference to the given []QuickbooksDesktopCustomersPostRequestAlternateShippingAddressesInner and assigns it to the AlternateShippingAddresses field.
func (o *QuickbooksDesktopCustomersPostRequest) SetAlternateShippingAddresses(v []QuickbooksDesktopCustomersPostRequestAlternateShippingAddressesInner) {
	o.AlternateShippingAddresses = v
}

// GetPhone returns the Phone field value if set, zero value otherwise.
func (o *QuickbooksDesktopCustomersPostRequest) GetPhone() string {
	if o == nil || IsNil(o.Phone) {
		var ret string
		return ret
	}
	return *o.Phone
}

// GetPhoneOk returns a tuple with the Phone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopCustomersPostRequest) GetPhoneOk() (*string, bool) {
	if o == nil || IsNil(o.Phone) {
		return nil, false
	}
	return o.Phone, true
}

// HasPhone returns a boolean if a field has been set.
func (o *QuickbooksDesktopCustomersPostRequest) HasPhone() bool {
	if o != nil && !IsNil(o.Phone) {
		return true
	}

	return false
}

// SetPhone gets a reference to the given string and assigns it to the Phone field.
func (o *QuickbooksDesktopCustomersPostRequest) SetPhone(v string) {
	o.Phone = &v
}

// GetAlternatePhone returns the AlternatePhone field value if set, zero value otherwise.
func (o *QuickbooksDesktopCustomersPostRequest) GetAlternatePhone() string {
	if o == nil || IsNil(o.AlternatePhone) {
		var ret string
		return ret
	}
	return *o.AlternatePhone
}

// GetAlternatePhoneOk returns a tuple with the AlternatePhone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopCustomersPostRequest) GetAlternatePhoneOk() (*string, bool) {
	if o == nil || IsNil(o.AlternatePhone) {
		return nil, false
	}
	return o.AlternatePhone, true
}

// HasAlternatePhone returns a boolean if a field has been set.
func (o *QuickbooksDesktopCustomersPostRequest) HasAlternatePhone() bool {
	if o != nil && !IsNil(o.AlternatePhone) {
		return true
	}

	return false
}

// SetAlternatePhone gets a reference to the given string and assigns it to the AlternatePhone field.
func (o *QuickbooksDesktopCustomersPostRequest) SetAlternatePhone(v string) {
	o.AlternatePhone = &v
}

// GetFax returns the Fax field value if set, zero value otherwise.
func (o *QuickbooksDesktopCustomersPostRequest) GetFax() string {
	if o == nil || IsNil(o.Fax) {
		var ret string
		return ret
	}
	return *o.Fax
}

// GetFaxOk returns a tuple with the Fax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopCustomersPostRequest) GetFaxOk() (*string, bool) {
	if o == nil || IsNil(o.Fax) {
		return nil, false
	}
	return o.Fax, true
}

// HasFax returns a boolean if a field has been set.
func (o *QuickbooksDesktopCustomersPostRequest) HasFax() bool {
	if o != nil && !IsNil(o.Fax) {
		return true
	}

	return false
}

// SetFax gets a reference to the given string and assigns it to the Fax field.
func (o *QuickbooksDesktopCustomersPostRequest) SetFax(v string) {
	o.Fax = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *QuickbooksDesktopCustomersPostRequest) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopCustomersPostRequest) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *QuickbooksDesktopCustomersPostRequest) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *QuickbooksDesktopCustomersPostRequest) SetEmail(v string) {
	o.Email = &v
}

// GetCcEmail returns the CcEmail field value if set, zero value otherwise.
func (o *QuickbooksDesktopCustomersPostRequest) GetCcEmail() string {
	if o == nil || IsNil(o.CcEmail) {
		var ret string
		return ret
	}
	return *o.CcEmail
}

// GetCcEmailOk returns a tuple with the CcEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopCustomersPostRequest) GetCcEmailOk() (*string, bool) {
	if o == nil || IsNil(o.CcEmail) {
		return nil, false
	}
	return o.CcEmail, true
}

// HasCcEmail returns a boolean if a field has been set.
func (o *QuickbooksDesktopCustomersPostRequest) HasCcEmail() bool {
	if o != nil && !IsNil(o.CcEmail) {
		return true
	}

	return false
}

// SetCcEmail gets a reference to the given string and assigns it to the CcEmail field.
func (o *QuickbooksDesktopCustomersPostRequest) SetCcEmail(v string) {
	o.CcEmail = &v
}

// GetContact returns the Contact field value if set, zero value otherwise.
func (o *QuickbooksDesktopCustomersPostRequest) GetContact() string {
	if o == nil || IsNil(o.Contact) {
		var ret string
		return ret
	}
	return *o.Contact
}

// GetContactOk returns a tuple with the Contact field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopCustomersPostRequest) GetContactOk() (*string, bool) {
	if o == nil || IsNil(o.Contact) {
		return nil, false
	}
	return o.Contact, true
}

// HasContact returns a boolean if a field has been set.
func (o *QuickbooksDesktopCustomersPostRequest) HasContact() bool {
	if o != nil && !IsNil(o.Contact) {
		return true
	}

	return false
}

// SetContact gets a reference to the given string and assigns it to the Contact field.
func (o *QuickbooksDesktopCustomersPostRequest) SetContact(v string) {
	o.Contact = &v
}

// GetAlternateContact returns the AlternateContact field value if set, zero value otherwise.
func (o *QuickbooksDesktopCustomersPostRequest) GetAlternateContact() string {
	if o == nil || IsNil(o.AlternateContact) {
		var ret string
		return ret
	}
	return *o.AlternateContact
}

// GetAlternateContactOk returns a tuple with the AlternateContact field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopCustomersPostRequest) GetAlternateContactOk() (*string, bool) {
	if o == nil || IsNil(o.AlternateContact) {
		return nil, false
	}
	return o.AlternateContact, true
}

// HasAlternateContact returns a boolean if a field has been set.
func (o *QuickbooksDesktopCustomersPostRequest) HasAlternateContact() bool {
	if o != nil && !IsNil(o.AlternateContact) {
		return true
	}

	return false
}

// SetAlternateContact gets a reference to the given string and assigns it to the AlternateContact field.
func (o *QuickbooksDesktopCustomersPostRequest) SetAlternateContact(v string) {
	o.AlternateContact = &v
}

// GetCustomContactFields returns the CustomContactFields field value if set, zero value otherwise.
func (o *QuickbooksDesktopCustomersPostRequest) GetCustomContactFields() []QuickbooksDesktopCustomersPostRequestCustomContactFieldsInner {
	if o == nil || IsNil(o.CustomContactFields) {
		var ret []QuickbooksDesktopCustomersPostRequestCustomContactFieldsInner
		return ret
	}
	return o.CustomContactFields
}

// GetCustomContactFieldsOk returns a tuple with the CustomContactFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopCustomersPostRequest) GetCustomContactFieldsOk() ([]QuickbooksDesktopCustomersPostRequestCustomContactFieldsInner, bool) {
	if o == nil || IsNil(o.CustomContactFields) {
		return nil, false
	}
	return o.CustomContactFields, true
}

// HasCustomContactFields returns a boolean if a field has been set.
func (o *QuickbooksDesktopCustomersPostRequest) HasCustomContactFields() bool {
	if o != nil && !IsNil(o.CustomContactFields) {
		return true
	}

	return false
}

// SetCustomContactFields gets a reference to the given []QuickbooksDesktopCustomersPostRequestCustomContactFieldsInner and assigns it to the CustomContactFields field.
func (o *QuickbooksDesktopCustomersPostRequest) SetCustomContactFields(v []QuickbooksDesktopCustomersPostRequestCustomContactFieldsInner) {
	o.CustomContactFields = v
}

// GetAdditionalContacts returns the AdditionalContacts field value if set, zero value otherwise.
func (o *QuickbooksDesktopCustomersPostRequest) GetAdditionalContacts() []QuickbooksDesktopCustomersPostRequestAdditionalContactsInner {
	if o == nil || IsNil(o.AdditionalContacts) {
		var ret []QuickbooksDesktopCustomersPostRequestAdditionalContactsInner
		return ret
	}
	return o.AdditionalContacts
}

// GetAdditionalContactsOk returns a tuple with the AdditionalContacts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopCustomersPostRequest) GetAdditionalContactsOk() ([]QuickbooksDesktopCustomersPostRequestAdditionalContactsInner, bool) {
	if o == nil || IsNil(o.AdditionalContacts) {
		return nil, false
	}
	return o.AdditionalContacts, true
}

// HasAdditionalContacts returns a boolean if a field has been set.
func (o *QuickbooksDesktopCustomersPostRequest) HasAdditionalContacts() bool {
	if o != nil && !IsNil(o.AdditionalContacts) {
		return true
	}

	return false
}

// SetAdditionalContacts gets a reference to the given []QuickbooksDesktopCustomersPostRequestAdditionalContactsInner and assigns it to the AdditionalContacts field.
func (o *QuickbooksDesktopCustomersPostRequest) SetAdditionalContacts(v []QuickbooksDesktopCustomersPostRequestAdditionalContactsInner) {
	o.AdditionalContacts = v
}

// GetCustomerTypeId returns the CustomerTypeId field value if set, zero value otherwise.
func (o *QuickbooksDesktopCustomersPostRequest) GetCustomerTypeId() string {
	if o == nil || IsNil(o.CustomerTypeId) {
		var ret string
		return ret
	}
	return *o.CustomerTypeId
}

// GetCustomerTypeIdOk returns a tuple with the CustomerTypeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopCustomersPostRequest) GetCustomerTypeIdOk() (*string, bool) {
	if o == nil || IsNil(o.CustomerTypeId) {
		return nil, false
	}
	return o.CustomerTypeId, true
}

// HasCustomerTypeId returns a boolean if a field has been set.
func (o *QuickbooksDesktopCustomersPostRequest) HasCustomerTypeId() bool {
	if o != nil && !IsNil(o.CustomerTypeId) {
		return true
	}

	return false
}

// SetCustomerTypeId gets a reference to the given string and assigns it to the CustomerTypeId field.
func (o *QuickbooksDesktopCustomersPostRequest) SetCustomerTypeId(v string) {
	o.CustomerTypeId = &v
}

// GetTermsId returns the TermsId field value if set, zero value otherwise.
func (o *QuickbooksDesktopCustomersPostRequest) GetTermsId() string {
	if o == nil || IsNil(o.TermsId) {
		var ret string
		return ret
	}
	return *o.TermsId
}

// GetTermsIdOk returns a tuple with the TermsId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopCustomersPostRequest) GetTermsIdOk() (*string, bool) {
	if o == nil || IsNil(o.TermsId) {
		return nil, false
	}
	return o.TermsId, true
}

// HasTermsId returns a boolean if a field has been set.
func (o *QuickbooksDesktopCustomersPostRequest) HasTermsId() bool {
	if o != nil && !IsNil(o.TermsId) {
		return true
	}

	return false
}

// SetTermsId gets a reference to the given string and assigns it to the TermsId field.
func (o *QuickbooksDesktopCustomersPostRequest) SetTermsId(v string) {
	o.TermsId = &v
}

// GetSalesRepresentativeId returns the SalesRepresentativeId field value if set, zero value otherwise.
func (o *QuickbooksDesktopCustomersPostRequest) GetSalesRepresentativeId() string {
	if o == nil || IsNil(o.SalesRepresentativeId) {
		var ret string
		return ret
	}
	return *o.SalesRepresentativeId
}

// GetSalesRepresentativeIdOk returns a tuple with the SalesRepresentativeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopCustomersPostRequest) GetSalesRepresentativeIdOk() (*string, bool) {
	if o == nil || IsNil(o.SalesRepresentativeId) {
		return nil, false
	}
	return o.SalesRepresentativeId, true
}

// HasSalesRepresentativeId returns a boolean if a field has been set.
func (o *QuickbooksDesktopCustomersPostRequest) HasSalesRepresentativeId() bool {
	if o != nil && !IsNil(o.SalesRepresentativeId) {
		return true
	}

	return false
}

// SetSalesRepresentativeId gets a reference to the given string and assigns it to the SalesRepresentativeId field.
func (o *QuickbooksDesktopCustomersPostRequest) SetSalesRepresentativeId(v string) {
	o.SalesRepresentativeId = &v
}

// GetOpeningBalance returns the OpeningBalance field value if set, zero value otherwise.
func (o *QuickbooksDesktopCustomersPostRequest) GetOpeningBalance() string {
	if o == nil || IsNil(o.OpeningBalance) {
		var ret string
		return ret
	}
	return *o.OpeningBalance
}

// GetOpeningBalanceOk returns a tuple with the OpeningBalance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopCustomersPostRequest) GetOpeningBalanceOk() (*string, bool) {
	if o == nil || IsNil(o.OpeningBalance) {
		return nil, false
	}
	return o.OpeningBalance, true
}

// HasOpeningBalance returns a boolean if a field has been set.
func (o *QuickbooksDesktopCustomersPostRequest) HasOpeningBalance() bool {
	if o != nil && !IsNil(o.OpeningBalance) {
		return true
	}

	return false
}

// SetOpeningBalance gets a reference to the given string and assigns it to the OpeningBalance field.
func (o *QuickbooksDesktopCustomersPostRequest) SetOpeningBalance(v string) {
	o.OpeningBalance = &v
}

// GetOpeningBalanceDate returns the OpeningBalanceDate field value if set, zero value otherwise.
func (o *QuickbooksDesktopCustomersPostRequest) GetOpeningBalanceDate() string {
	if o == nil || IsNil(o.OpeningBalanceDate) {
		var ret string
		return ret
	}
	return *o.OpeningBalanceDate
}

// GetOpeningBalanceDateOk returns a tuple with the OpeningBalanceDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopCustomersPostRequest) GetOpeningBalanceDateOk() (*string, bool) {
	if o == nil || IsNil(o.OpeningBalanceDate) {
		return nil, false
	}
	return o.OpeningBalanceDate, true
}

// HasOpeningBalanceDate returns a boolean if a field has been set.
func (o *QuickbooksDesktopCustomersPostRequest) HasOpeningBalanceDate() bool {
	if o != nil && !IsNil(o.OpeningBalanceDate) {
		return true
	}

	return false
}

// SetOpeningBalanceDate gets a reference to the given string and assigns it to the OpeningBalanceDate field.
func (o *QuickbooksDesktopCustomersPostRequest) SetOpeningBalanceDate(v string) {
	o.OpeningBalanceDate = &v
}

// GetSalesTaxCodeId returns the SalesTaxCodeId field value if set, zero value otherwise.
func (o *QuickbooksDesktopCustomersPostRequest) GetSalesTaxCodeId() string {
	if o == nil || IsNil(o.SalesTaxCodeId) {
		var ret string
		return ret
	}
	return *o.SalesTaxCodeId
}

// GetSalesTaxCodeIdOk returns a tuple with the SalesTaxCodeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopCustomersPostRequest) GetSalesTaxCodeIdOk() (*string, bool) {
	if o == nil || IsNil(o.SalesTaxCodeId) {
		return nil, false
	}
	return o.SalesTaxCodeId, true
}

// HasSalesTaxCodeId returns a boolean if a field has been set.
func (o *QuickbooksDesktopCustomersPostRequest) HasSalesTaxCodeId() bool {
	if o != nil && !IsNil(o.SalesTaxCodeId) {
		return true
	}

	return false
}

// SetSalesTaxCodeId gets a reference to the given string and assigns it to the SalesTaxCodeId field.
func (o *QuickbooksDesktopCustomersPostRequest) SetSalesTaxCodeId(v string) {
	o.SalesTaxCodeId = &v
}

// GetSalesTaxItemId returns the SalesTaxItemId field value if set, zero value otherwise.
func (o *QuickbooksDesktopCustomersPostRequest) GetSalesTaxItemId() string {
	if o == nil || IsNil(o.SalesTaxItemId) {
		var ret string
		return ret
	}
	return *o.SalesTaxItemId
}

// GetSalesTaxItemIdOk returns a tuple with the SalesTaxItemId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopCustomersPostRequest) GetSalesTaxItemIdOk() (*string, bool) {
	if o == nil || IsNil(o.SalesTaxItemId) {
		return nil, false
	}
	return o.SalesTaxItemId, true
}

// HasSalesTaxItemId returns a boolean if a field has been set.
func (o *QuickbooksDesktopCustomersPostRequest) HasSalesTaxItemId() bool {
	if o != nil && !IsNil(o.SalesTaxItemId) {
		return true
	}

	return false
}

// SetSalesTaxItemId gets a reference to the given string and assigns it to the SalesTaxItemId field.
func (o *QuickbooksDesktopCustomersPostRequest) SetSalesTaxItemId(v string) {
	o.SalesTaxItemId = &v
}

// GetSalesTaxCountry returns the SalesTaxCountry field value if set, zero value otherwise.
func (o *QuickbooksDesktopCustomersPostRequest) GetSalesTaxCountry() string {
	if o == nil || IsNil(o.SalesTaxCountry) {
		var ret string
		return ret
	}
	return *o.SalesTaxCountry
}

// GetSalesTaxCountryOk returns a tuple with the SalesTaxCountry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopCustomersPostRequest) GetSalesTaxCountryOk() (*string, bool) {
	if o == nil || IsNil(o.SalesTaxCountry) {
		return nil, false
	}
	return o.SalesTaxCountry, true
}

// HasSalesTaxCountry returns a boolean if a field has been set.
func (o *QuickbooksDesktopCustomersPostRequest) HasSalesTaxCountry() bool {
	if o != nil && !IsNil(o.SalesTaxCountry) {
		return true
	}

	return false
}

// SetSalesTaxCountry gets a reference to the given string and assigns it to the SalesTaxCountry field.
func (o *QuickbooksDesktopCustomersPostRequest) SetSalesTaxCountry(v string) {
	o.SalesTaxCountry = &v
}

// GetResaleNumber returns the ResaleNumber field value if set, zero value otherwise.
func (o *QuickbooksDesktopCustomersPostRequest) GetResaleNumber() string {
	if o == nil || IsNil(o.ResaleNumber) {
		var ret string
		return ret
	}
	return *o.ResaleNumber
}

// GetResaleNumberOk returns a tuple with the ResaleNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopCustomersPostRequest) GetResaleNumberOk() (*string, bool) {
	if o == nil || IsNil(o.ResaleNumber) {
		return nil, false
	}
	return o.ResaleNumber, true
}

// HasResaleNumber returns a boolean if a field has been set.
func (o *QuickbooksDesktopCustomersPostRequest) HasResaleNumber() bool {
	if o != nil && !IsNil(o.ResaleNumber) {
		return true
	}

	return false
}

// SetResaleNumber gets a reference to the given string and assigns it to the ResaleNumber field.
func (o *QuickbooksDesktopCustomersPostRequest) SetResaleNumber(v string) {
	o.ResaleNumber = &v
}

// GetAccountNumber returns the AccountNumber field value if set, zero value otherwise.
func (o *QuickbooksDesktopCustomersPostRequest) GetAccountNumber() string {
	if o == nil || IsNil(o.AccountNumber) {
		var ret string
		return ret
	}
	return *o.AccountNumber
}

// GetAccountNumberOk returns a tuple with the AccountNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopCustomersPostRequest) GetAccountNumberOk() (*string, bool) {
	if o == nil || IsNil(o.AccountNumber) {
		return nil, false
	}
	return o.AccountNumber, true
}

// HasAccountNumber returns a boolean if a field has been set.
func (o *QuickbooksDesktopCustomersPostRequest) HasAccountNumber() bool {
	if o != nil && !IsNil(o.AccountNumber) {
		return true
	}

	return false
}

// SetAccountNumber gets a reference to the given string and assigns it to the AccountNumber field.
func (o *QuickbooksDesktopCustomersPostRequest) SetAccountNumber(v string) {
	o.AccountNumber = &v
}

// GetCreditLimit returns the CreditLimit field value if set, zero value otherwise.
func (o *QuickbooksDesktopCustomersPostRequest) GetCreditLimit() string {
	if o == nil || IsNil(o.CreditLimit) {
		var ret string
		return ret
	}
	return *o.CreditLimit
}

// GetCreditLimitOk returns a tuple with the CreditLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopCustomersPostRequest) GetCreditLimitOk() (*string, bool) {
	if o == nil || IsNil(o.CreditLimit) {
		return nil, false
	}
	return o.CreditLimit, true
}

// HasCreditLimit returns a boolean if a field has been set.
func (o *QuickbooksDesktopCustomersPostRequest) HasCreditLimit() bool {
	if o != nil && !IsNil(o.CreditLimit) {
		return true
	}

	return false
}

// SetCreditLimit gets a reference to the given string and assigns it to the CreditLimit field.
func (o *QuickbooksDesktopCustomersPostRequest) SetCreditLimit(v string) {
	o.CreditLimit = &v
}

// GetPreferredPaymentMethodId returns the PreferredPaymentMethodId field value if set, zero value otherwise.
func (o *QuickbooksDesktopCustomersPostRequest) GetPreferredPaymentMethodId() string {
	if o == nil || IsNil(o.PreferredPaymentMethodId) {
		var ret string
		return ret
	}
	return *o.PreferredPaymentMethodId
}

// GetPreferredPaymentMethodIdOk returns a tuple with the PreferredPaymentMethodId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopCustomersPostRequest) GetPreferredPaymentMethodIdOk() (*string, bool) {
	if o == nil || IsNil(o.PreferredPaymentMethodId) {
		return nil, false
	}
	return o.PreferredPaymentMethodId, true
}

// HasPreferredPaymentMethodId returns a boolean if a field has been set.
func (o *QuickbooksDesktopCustomersPostRequest) HasPreferredPaymentMethodId() bool {
	if o != nil && !IsNil(o.PreferredPaymentMethodId) {
		return true
	}

	return false
}

// SetPreferredPaymentMethodId gets a reference to the given string and assigns it to the PreferredPaymentMethodId field.
func (o *QuickbooksDesktopCustomersPostRequest) SetPreferredPaymentMethodId(v string) {
	o.PreferredPaymentMethodId = &v
}

// GetCreditCard returns the CreditCard field value if set, zero value otherwise.
func (o *QuickbooksDesktopCustomersPostRequest) GetCreditCard() QuickbooksDesktopCustomersPostRequestCreditCard {
	if o == nil || IsNil(o.CreditCard) {
		var ret QuickbooksDesktopCustomersPostRequestCreditCard
		return ret
	}
	return *o.CreditCard
}

// GetCreditCardOk returns a tuple with the CreditCard field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopCustomersPostRequest) GetCreditCardOk() (*QuickbooksDesktopCustomersPostRequestCreditCard, bool) {
	if o == nil || IsNil(o.CreditCard) {
		return nil, false
	}
	return o.CreditCard, true
}

// HasCreditCard returns a boolean if a field has been set.
func (o *QuickbooksDesktopCustomersPostRequest) HasCreditCard() bool {
	if o != nil && !IsNil(o.CreditCard) {
		return true
	}

	return false
}

// SetCreditCard gets a reference to the given QuickbooksDesktopCustomersPostRequestCreditCard and assigns it to the CreditCard field.
func (o *QuickbooksDesktopCustomersPostRequest) SetCreditCard(v QuickbooksDesktopCustomersPostRequestCreditCard) {
	o.CreditCard = &v
}

// GetJobStatus returns the JobStatus field value if set, zero value otherwise.
func (o *QuickbooksDesktopCustomersPostRequest) GetJobStatus() string {
	if o == nil || IsNil(o.JobStatus) {
		var ret string
		return ret
	}
	return *o.JobStatus
}

// GetJobStatusOk returns a tuple with the JobStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopCustomersPostRequest) GetJobStatusOk() (*string, bool) {
	if o == nil || IsNil(o.JobStatus) {
		return nil, false
	}
	return o.JobStatus, true
}

// HasJobStatus returns a boolean if a field has been set.
func (o *QuickbooksDesktopCustomersPostRequest) HasJobStatus() bool {
	if o != nil && !IsNil(o.JobStatus) {
		return true
	}

	return false
}

// SetJobStatus gets a reference to the given string and assigns it to the JobStatus field.
func (o *QuickbooksDesktopCustomersPostRequest) SetJobStatus(v string) {
	o.JobStatus = &v
}

// GetJobStartDate returns the JobStartDate field value if set, zero value otherwise.
func (o *QuickbooksDesktopCustomersPostRequest) GetJobStartDate() string {
	if o == nil || IsNil(o.JobStartDate) {
		var ret string
		return ret
	}
	return *o.JobStartDate
}

// GetJobStartDateOk returns a tuple with the JobStartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopCustomersPostRequest) GetJobStartDateOk() (*string, bool) {
	if o == nil || IsNil(o.JobStartDate) {
		return nil, false
	}
	return o.JobStartDate, true
}

// HasJobStartDate returns a boolean if a field has been set.
func (o *QuickbooksDesktopCustomersPostRequest) HasJobStartDate() bool {
	if o != nil && !IsNil(o.JobStartDate) {
		return true
	}

	return false
}

// SetJobStartDate gets a reference to the given string and assigns it to the JobStartDate field.
func (o *QuickbooksDesktopCustomersPostRequest) SetJobStartDate(v string) {
	o.JobStartDate = &v
}

// GetJobProjectedEndDate returns the JobProjectedEndDate field value if set, zero value otherwise.
func (o *QuickbooksDesktopCustomersPostRequest) GetJobProjectedEndDate() string {
	if o == nil || IsNil(o.JobProjectedEndDate) {
		var ret string
		return ret
	}
	return *o.JobProjectedEndDate
}

// GetJobProjectedEndDateOk returns a tuple with the JobProjectedEndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopCustomersPostRequest) GetJobProjectedEndDateOk() (*string, bool) {
	if o == nil || IsNil(o.JobProjectedEndDate) {
		return nil, false
	}
	return o.JobProjectedEndDate, true
}

// HasJobProjectedEndDate returns a boolean if a field has been set.
func (o *QuickbooksDesktopCustomersPostRequest) HasJobProjectedEndDate() bool {
	if o != nil && !IsNil(o.JobProjectedEndDate) {
		return true
	}

	return false
}

// SetJobProjectedEndDate gets a reference to the given string and assigns it to the JobProjectedEndDate field.
func (o *QuickbooksDesktopCustomersPostRequest) SetJobProjectedEndDate(v string) {
	o.JobProjectedEndDate = &v
}

// GetJobEndDate returns the JobEndDate field value if set, zero value otherwise.
func (o *QuickbooksDesktopCustomersPostRequest) GetJobEndDate() string {
	if o == nil || IsNil(o.JobEndDate) {
		var ret string
		return ret
	}
	return *o.JobEndDate
}

// GetJobEndDateOk returns a tuple with the JobEndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopCustomersPostRequest) GetJobEndDateOk() (*string, bool) {
	if o == nil || IsNil(o.JobEndDate) {
		return nil, false
	}
	return o.JobEndDate, true
}

// HasJobEndDate returns a boolean if a field has been set.
func (o *QuickbooksDesktopCustomersPostRequest) HasJobEndDate() bool {
	if o != nil && !IsNil(o.JobEndDate) {
		return true
	}

	return false
}

// SetJobEndDate gets a reference to the given string and assigns it to the JobEndDate field.
func (o *QuickbooksDesktopCustomersPostRequest) SetJobEndDate(v string) {
	o.JobEndDate = &v
}

// GetJobDescription returns the JobDescription field value if set, zero value otherwise.
func (o *QuickbooksDesktopCustomersPostRequest) GetJobDescription() string {
	if o == nil || IsNil(o.JobDescription) {
		var ret string
		return ret
	}
	return *o.JobDescription
}

// GetJobDescriptionOk returns a tuple with the JobDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopCustomersPostRequest) GetJobDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.JobDescription) {
		return nil, false
	}
	return o.JobDescription, true
}

// HasJobDescription returns a boolean if a field has been set.
func (o *QuickbooksDesktopCustomersPostRequest) HasJobDescription() bool {
	if o != nil && !IsNil(o.JobDescription) {
		return true
	}

	return false
}

// SetJobDescription gets a reference to the given string and assigns it to the JobDescription field.
func (o *QuickbooksDesktopCustomersPostRequest) SetJobDescription(v string) {
	o.JobDescription = &v
}

// GetJobTypeId returns the JobTypeId field value if set, zero value otherwise.
func (o *QuickbooksDesktopCustomersPostRequest) GetJobTypeId() string {
	if o == nil || IsNil(o.JobTypeId) {
		var ret string
		return ret
	}
	return *o.JobTypeId
}

// GetJobTypeIdOk returns a tuple with the JobTypeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopCustomersPostRequest) GetJobTypeIdOk() (*string, bool) {
	if o == nil || IsNil(o.JobTypeId) {
		return nil, false
	}
	return o.JobTypeId, true
}

// HasJobTypeId returns a boolean if a field has been set.
func (o *QuickbooksDesktopCustomersPostRequest) HasJobTypeId() bool {
	if o != nil && !IsNil(o.JobTypeId) {
		return true
	}

	return false
}

// SetJobTypeId gets a reference to the given string and assigns it to the JobTypeId field.
func (o *QuickbooksDesktopCustomersPostRequest) SetJobTypeId(v string) {
	o.JobTypeId = &v
}

// GetNote returns the Note field value if set, zero value otherwise.
func (o *QuickbooksDesktopCustomersPostRequest) GetNote() string {
	if o == nil || IsNil(o.Note) {
		var ret string
		return ret
	}
	return *o.Note
}

// GetNoteOk returns a tuple with the Note field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopCustomersPostRequest) GetNoteOk() (*string, bool) {
	if o == nil || IsNil(o.Note) {
		return nil, false
	}
	return o.Note, true
}

// HasNote returns a boolean if a field has been set.
func (o *QuickbooksDesktopCustomersPostRequest) HasNote() bool {
	if o != nil && !IsNil(o.Note) {
		return true
	}

	return false
}

// SetNote gets a reference to the given string and assigns it to the Note field.
func (o *QuickbooksDesktopCustomersPostRequest) SetNote(v string) {
	o.Note = &v
}

// GetAdditionalNotes returns the AdditionalNotes field value if set, zero value otherwise.
func (o *QuickbooksDesktopCustomersPostRequest) GetAdditionalNotes() []QuickbooksDesktopCustomersPostRequestAdditionalNotesInner {
	if o == nil || IsNil(o.AdditionalNotes) {
		var ret []QuickbooksDesktopCustomersPostRequestAdditionalNotesInner
		return ret
	}
	return o.AdditionalNotes
}

// GetAdditionalNotesOk returns a tuple with the AdditionalNotes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopCustomersPostRequest) GetAdditionalNotesOk() ([]QuickbooksDesktopCustomersPostRequestAdditionalNotesInner, bool) {
	if o == nil || IsNil(o.AdditionalNotes) {
		return nil, false
	}
	return o.AdditionalNotes, true
}

// HasAdditionalNotes returns a boolean if a field has been set.
func (o *QuickbooksDesktopCustomersPostRequest) HasAdditionalNotes() bool {
	if o != nil && !IsNil(o.AdditionalNotes) {
		return true
	}

	return false
}

// SetAdditionalNotes gets a reference to the given []QuickbooksDesktopCustomersPostRequestAdditionalNotesInner and assigns it to the AdditionalNotes field.
func (o *QuickbooksDesktopCustomersPostRequest) SetAdditionalNotes(v []QuickbooksDesktopCustomersPostRequestAdditionalNotesInner) {
	o.AdditionalNotes = v
}

// GetPreferredDeliveryMethod returns the PreferredDeliveryMethod field value if set, zero value otherwise.
func (o *QuickbooksDesktopCustomersPostRequest) GetPreferredDeliveryMethod() string {
	if o == nil || IsNil(o.PreferredDeliveryMethod) {
		var ret string
		return ret
	}
	return *o.PreferredDeliveryMethod
}

// GetPreferredDeliveryMethodOk returns a tuple with the PreferredDeliveryMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopCustomersPostRequest) GetPreferredDeliveryMethodOk() (*string, bool) {
	if o == nil || IsNil(o.PreferredDeliveryMethod) {
		return nil, false
	}
	return o.PreferredDeliveryMethod, true
}

// HasPreferredDeliveryMethod returns a boolean if a field has been set.
func (o *QuickbooksDesktopCustomersPostRequest) HasPreferredDeliveryMethod() bool {
	if o != nil && !IsNil(o.PreferredDeliveryMethod) {
		return true
	}

	return false
}

// SetPreferredDeliveryMethod gets a reference to the given string and assigns it to the PreferredDeliveryMethod field.
func (o *QuickbooksDesktopCustomersPostRequest) SetPreferredDeliveryMethod(v string) {
	o.PreferredDeliveryMethod = &v
}

// GetPriceLevelId returns the PriceLevelId field value if set, zero value otherwise.
func (o *QuickbooksDesktopCustomersPostRequest) GetPriceLevelId() string {
	if o == nil || IsNil(o.PriceLevelId) {
		var ret string
		return ret
	}
	return *o.PriceLevelId
}

// GetPriceLevelIdOk returns a tuple with the PriceLevelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopCustomersPostRequest) GetPriceLevelIdOk() (*string, bool) {
	if o == nil || IsNil(o.PriceLevelId) {
		return nil, false
	}
	return o.PriceLevelId, true
}

// HasPriceLevelId returns a boolean if a field has been set.
func (o *QuickbooksDesktopCustomersPostRequest) HasPriceLevelId() bool {
	if o != nil && !IsNil(o.PriceLevelId) {
		return true
	}

	return false
}

// SetPriceLevelId gets a reference to the given string and assigns it to the PriceLevelId field.
func (o *QuickbooksDesktopCustomersPostRequest) SetPriceLevelId(v string) {
	o.PriceLevelId = &v
}

// GetExternalId returns the ExternalId field value if set, zero value otherwise.
func (o *QuickbooksDesktopCustomersPostRequest) GetExternalId() string {
	if o == nil || IsNil(o.ExternalId) {
		var ret string
		return ret
	}
	return *o.ExternalId
}

// GetExternalIdOk returns a tuple with the ExternalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopCustomersPostRequest) GetExternalIdOk() (*string, bool) {
	if o == nil || IsNil(o.ExternalId) {
		return nil, false
	}
	return o.ExternalId, true
}

// HasExternalId returns a boolean if a field has been set.
func (o *QuickbooksDesktopCustomersPostRequest) HasExternalId() bool {
	if o != nil && !IsNil(o.ExternalId) {
		return true
	}

	return false
}

// SetExternalId gets a reference to the given string and assigns it to the ExternalId field.
func (o *QuickbooksDesktopCustomersPostRequest) SetExternalId(v string) {
	o.ExternalId = &v
}

// GetTaxRegistrationNumber returns the TaxRegistrationNumber field value if set, zero value otherwise.
func (o *QuickbooksDesktopCustomersPostRequest) GetTaxRegistrationNumber() string {
	if o == nil || IsNil(o.TaxRegistrationNumber) {
		var ret string
		return ret
	}
	return *o.TaxRegistrationNumber
}

// GetTaxRegistrationNumberOk returns a tuple with the TaxRegistrationNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopCustomersPostRequest) GetTaxRegistrationNumberOk() (*string, bool) {
	if o == nil || IsNil(o.TaxRegistrationNumber) {
		return nil, false
	}
	return o.TaxRegistrationNumber, true
}

// HasTaxRegistrationNumber returns a boolean if a field has been set.
func (o *QuickbooksDesktopCustomersPostRequest) HasTaxRegistrationNumber() bool {
	if o != nil && !IsNil(o.TaxRegistrationNumber) {
		return true
	}

	return false
}

// SetTaxRegistrationNumber gets a reference to the given string and assigns it to the TaxRegistrationNumber field.
func (o *QuickbooksDesktopCustomersPostRequest) SetTaxRegistrationNumber(v string) {
	o.TaxRegistrationNumber = &v
}

// GetCurrencyId returns the CurrencyId field value if set, zero value otherwise.
func (o *QuickbooksDesktopCustomersPostRequest) GetCurrencyId() string {
	if o == nil || IsNil(o.CurrencyId) {
		var ret string
		return ret
	}
	return *o.CurrencyId
}

// GetCurrencyIdOk returns a tuple with the CurrencyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopCustomersPostRequest) GetCurrencyIdOk() (*string, bool) {
	if o == nil || IsNil(o.CurrencyId) {
		return nil, false
	}
	return o.CurrencyId, true
}

// HasCurrencyId returns a boolean if a field has been set.
func (o *QuickbooksDesktopCustomersPostRequest) HasCurrencyId() bool {
	if o != nil && !IsNil(o.CurrencyId) {
		return true
	}

	return false
}

// SetCurrencyId gets a reference to the given string and assigns it to the CurrencyId field.
func (o *QuickbooksDesktopCustomersPostRequest) SetCurrencyId(v string) {
	o.CurrencyId = &v
}

func (o QuickbooksDesktopCustomersPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QuickbooksDesktopCustomersPostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	if !IsNil(o.IsActive) {
		toSerialize["isActive"] = o.IsActive
	}
	if !IsNil(o.ClassId) {
		toSerialize["classId"] = o.ClassId
	}
	if !IsNil(o.ParentId) {
		toSerialize["parentId"] = o.ParentId
	}
	if !IsNil(o.CompanyName) {
		toSerialize["companyName"] = o.CompanyName
	}
	if !IsNil(o.Salutation) {
		toSerialize["salutation"] = o.Salutation
	}
	if !IsNil(o.FirstName) {
		toSerialize["firstName"] = o.FirstName
	}
	if !IsNil(o.MiddleName) {
		toSerialize["middleName"] = o.MiddleName
	}
	if !IsNil(o.LastName) {
		toSerialize["lastName"] = o.LastName
	}
	if !IsNil(o.JobTitle) {
		toSerialize["jobTitle"] = o.JobTitle
	}
	if !IsNil(o.BillingAddress) {
		toSerialize["billingAddress"] = o.BillingAddress
	}
	if !IsNil(o.ShippingAddress) {
		toSerialize["shippingAddress"] = o.ShippingAddress
	}
	if !IsNil(o.AlternateShippingAddresses) {
		toSerialize["alternateShippingAddresses"] = o.AlternateShippingAddresses
	}
	if !IsNil(o.Phone) {
		toSerialize["phone"] = o.Phone
	}
	if !IsNil(o.AlternatePhone) {
		toSerialize["alternatePhone"] = o.AlternatePhone
	}
	if !IsNil(o.Fax) {
		toSerialize["fax"] = o.Fax
	}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.CcEmail) {
		toSerialize["ccEmail"] = o.CcEmail
	}
	if !IsNil(o.Contact) {
		toSerialize["contact"] = o.Contact
	}
	if !IsNil(o.AlternateContact) {
		toSerialize["alternateContact"] = o.AlternateContact
	}
	if !IsNil(o.CustomContactFields) {
		toSerialize["customContactFields"] = o.CustomContactFields
	}
	if !IsNil(o.AdditionalContacts) {
		toSerialize["additionalContacts"] = o.AdditionalContacts
	}
	if !IsNil(o.CustomerTypeId) {
		toSerialize["customerTypeId"] = o.CustomerTypeId
	}
	if !IsNil(o.TermsId) {
		toSerialize["termsId"] = o.TermsId
	}
	if !IsNil(o.SalesRepresentativeId) {
		toSerialize["salesRepresentativeId"] = o.SalesRepresentativeId
	}
	if !IsNil(o.OpeningBalance) {
		toSerialize["openingBalance"] = o.OpeningBalance
	}
	if !IsNil(o.OpeningBalanceDate) {
		toSerialize["openingBalanceDate"] = o.OpeningBalanceDate
	}
	if !IsNil(o.SalesTaxCodeId) {
		toSerialize["salesTaxCodeId"] = o.SalesTaxCodeId
	}
	if !IsNil(o.SalesTaxItemId) {
		toSerialize["salesTaxItemId"] = o.SalesTaxItemId
	}
	if !IsNil(o.SalesTaxCountry) {
		toSerialize["salesTaxCountry"] = o.SalesTaxCountry
	}
	if !IsNil(o.ResaleNumber) {
		toSerialize["resaleNumber"] = o.ResaleNumber
	}
	if !IsNil(o.AccountNumber) {
		toSerialize["accountNumber"] = o.AccountNumber
	}
	if !IsNil(o.CreditLimit) {
		toSerialize["creditLimit"] = o.CreditLimit
	}
	if !IsNil(o.PreferredPaymentMethodId) {
		toSerialize["preferredPaymentMethodId"] = o.PreferredPaymentMethodId
	}
	if !IsNil(o.CreditCard) {
		toSerialize["creditCard"] = o.CreditCard
	}
	if !IsNil(o.JobStatus) {
		toSerialize["jobStatus"] = o.JobStatus
	}
	if !IsNil(o.JobStartDate) {
		toSerialize["jobStartDate"] = o.JobStartDate
	}
	if !IsNil(o.JobProjectedEndDate) {
		toSerialize["jobProjectedEndDate"] = o.JobProjectedEndDate
	}
	if !IsNil(o.JobEndDate) {
		toSerialize["jobEndDate"] = o.JobEndDate
	}
	if !IsNil(o.JobDescription) {
		toSerialize["jobDescription"] = o.JobDescription
	}
	if !IsNil(o.JobTypeId) {
		toSerialize["jobTypeId"] = o.JobTypeId
	}
	if !IsNil(o.Note) {
		toSerialize["note"] = o.Note
	}
	if !IsNil(o.AdditionalNotes) {
		toSerialize["additionalNotes"] = o.AdditionalNotes
	}
	if !IsNil(o.PreferredDeliveryMethod) {
		toSerialize["preferredDeliveryMethod"] = o.PreferredDeliveryMethod
	}
	if !IsNil(o.PriceLevelId) {
		toSerialize["priceLevelId"] = o.PriceLevelId
	}
	if !IsNil(o.ExternalId) {
		toSerialize["externalId"] = o.ExternalId
	}
	if !IsNil(o.TaxRegistrationNumber) {
		toSerialize["taxRegistrationNumber"] = o.TaxRegistrationNumber
	}
	if !IsNil(o.CurrencyId) {
		toSerialize["currencyId"] = o.CurrencyId
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *QuickbooksDesktopCustomersPostRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varQuickbooksDesktopCustomersPostRequest := _QuickbooksDesktopCustomersPostRequest{}

	err = json.Unmarshal(data, &varQuickbooksDesktopCustomersPostRequest)

	if err != nil {
		return err
	}

	*o = QuickbooksDesktopCustomersPostRequest(varQuickbooksDesktopCustomersPostRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "name")
		delete(additionalProperties, "isActive")
		delete(additionalProperties, "classId")
		delete(additionalProperties, "parentId")
		delete(additionalProperties, "companyName")
		delete(additionalProperties, "salutation")
		delete(additionalProperties, "firstName")
		delete(additionalProperties, "middleName")
		delete(additionalProperties, "lastName")
		delete(additionalProperties, "jobTitle")
		delete(additionalProperties, "billingAddress")
		delete(additionalProperties, "shippingAddress")
		delete(additionalProperties, "alternateShippingAddresses")
		delete(additionalProperties, "phone")
		delete(additionalProperties, "alternatePhone")
		delete(additionalProperties, "fax")
		delete(additionalProperties, "email")
		delete(additionalProperties, "ccEmail")
		delete(additionalProperties, "contact")
		delete(additionalProperties, "alternateContact")
		delete(additionalProperties, "customContactFields")
		delete(additionalProperties, "additionalContacts")
		delete(additionalProperties, "customerTypeId")
		delete(additionalProperties, "termsId")
		delete(additionalProperties, "salesRepresentativeId")
		delete(additionalProperties, "openingBalance")
		delete(additionalProperties, "openingBalanceDate")
		delete(additionalProperties, "salesTaxCodeId")
		delete(additionalProperties, "salesTaxItemId")
		delete(additionalProperties, "salesTaxCountry")
		delete(additionalProperties, "resaleNumber")
		delete(additionalProperties, "accountNumber")
		delete(additionalProperties, "creditLimit")
		delete(additionalProperties, "preferredPaymentMethodId")
		delete(additionalProperties, "creditCard")
		delete(additionalProperties, "jobStatus")
		delete(additionalProperties, "jobStartDate")
		delete(additionalProperties, "jobProjectedEndDate")
		delete(additionalProperties, "jobEndDate")
		delete(additionalProperties, "jobDescription")
		delete(additionalProperties, "jobTypeId")
		delete(additionalProperties, "note")
		delete(additionalProperties, "additionalNotes")
		delete(additionalProperties, "preferredDeliveryMethod")
		delete(additionalProperties, "priceLevelId")
		delete(additionalProperties, "externalId")
		delete(additionalProperties, "taxRegistrationNumber")
		delete(additionalProperties, "currencyId")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableQuickbooksDesktopCustomersPostRequest struct {
	value *QuickbooksDesktopCustomersPostRequest
	isSet bool
}

func (v NullableQuickbooksDesktopCustomersPostRequest) Get() *QuickbooksDesktopCustomersPostRequest {
	return v.value
}

func (v *NullableQuickbooksDesktopCustomersPostRequest) Set(val *QuickbooksDesktopCustomersPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableQuickbooksDesktopCustomersPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableQuickbooksDesktopCustomersPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQuickbooksDesktopCustomersPostRequest(val *QuickbooksDesktopCustomersPostRequest) *NullableQuickbooksDesktopCustomersPostRequest {
	return &NullableQuickbooksDesktopCustomersPostRequest{value: val, isSet: true}
}

func (v NullableQuickbooksDesktopCustomersPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQuickbooksDesktopCustomersPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


