/*
Conductor API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package conductor

import (
	"encoding/json"
)

// checks if the QuickbooksDesktopInventoryAdjustmentsPostRequestLinesInnerAdjustValue type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QuickbooksDesktopInventoryAdjustmentsPostRequestLinesInnerAdjustValue{}

// QuickbooksDesktopInventoryAdjustmentsPostRequestLinesInnerAdjustValue Adjusts the total value of the entire stock of this inventory item by setting a new monetary value, and optionally by setting a new quantity.
type QuickbooksDesktopInventoryAdjustmentsPostRequestLinesInnerAdjustValue struct {
	// The new quantity for the inventory item associated with this inventory adjustment line.
	NewQuantity *float32 `json:"newQuantity,omitempty"`
	// Either a positive or negative number that shows the change in quantity for the inventory item associated with this inventory adjustment line. A positive number increases the quantity, while a negative number decreases it.
	QuantityDifference *float32 `json:"quantityDifference,omitempty"`
	// The new total value of the entire stock of the inventory item associated with this inventory adjustment line.  **NOTE**: The new value does _not_ have to equal `quantityOnHand` times `purchaseCost`.
	NewValue *string `json:"newValue,omitempty"`
	// Either a positive or negative number that shows the change in the total value of the entire stock of the inventory item associated with this inventory adjustment line. A positive number increases the value, while a negative number decreases it.
	ValueDifference *float32 `json:"valueDifference,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _QuickbooksDesktopInventoryAdjustmentsPostRequestLinesInnerAdjustValue QuickbooksDesktopInventoryAdjustmentsPostRequestLinesInnerAdjustValue

// NewQuickbooksDesktopInventoryAdjustmentsPostRequestLinesInnerAdjustValue instantiates a new QuickbooksDesktopInventoryAdjustmentsPostRequestLinesInnerAdjustValue object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQuickbooksDesktopInventoryAdjustmentsPostRequestLinesInnerAdjustValue() *QuickbooksDesktopInventoryAdjustmentsPostRequestLinesInnerAdjustValue {
	this := QuickbooksDesktopInventoryAdjustmentsPostRequestLinesInnerAdjustValue{}
	return &this
}

// NewQuickbooksDesktopInventoryAdjustmentsPostRequestLinesInnerAdjustValueWithDefaults instantiates a new QuickbooksDesktopInventoryAdjustmentsPostRequestLinesInnerAdjustValue object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQuickbooksDesktopInventoryAdjustmentsPostRequestLinesInnerAdjustValueWithDefaults() *QuickbooksDesktopInventoryAdjustmentsPostRequestLinesInnerAdjustValue {
	this := QuickbooksDesktopInventoryAdjustmentsPostRequestLinesInnerAdjustValue{}
	return &this
}

// GetNewQuantity returns the NewQuantity field value if set, zero value otherwise.
func (o *QuickbooksDesktopInventoryAdjustmentsPostRequestLinesInnerAdjustValue) GetNewQuantity() float32 {
	if o == nil || IsNil(o.NewQuantity) {
		var ret float32
		return ret
	}
	return *o.NewQuantity
}

// GetNewQuantityOk returns a tuple with the NewQuantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopInventoryAdjustmentsPostRequestLinesInnerAdjustValue) GetNewQuantityOk() (*float32, bool) {
	if o == nil || IsNil(o.NewQuantity) {
		return nil, false
	}
	return o.NewQuantity, true
}

// HasNewQuantity returns a boolean if a field has been set.
func (o *QuickbooksDesktopInventoryAdjustmentsPostRequestLinesInnerAdjustValue) HasNewQuantity() bool {
	if o != nil && !IsNil(o.NewQuantity) {
		return true
	}

	return false
}

// SetNewQuantity gets a reference to the given float32 and assigns it to the NewQuantity field.
func (o *QuickbooksDesktopInventoryAdjustmentsPostRequestLinesInnerAdjustValue) SetNewQuantity(v float32) {
	o.NewQuantity = &v
}

// GetQuantityDifference returns the QuantityDifference field value if set, zero value otherwise.
func (o *QuickbooksDesktopInventoryAdjustmentsPostRequestLinesInnerAdjustValue) GetQuantityDifference() float32 {
	if o == nil || IsNil(o.QuantityDifference) {
		var ret float32
		return ret
	}
	return *o.QuantityDifference
}

// GetQuantityDifferenceOk returns a tuple with the QuantityDifference field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopInventoryAdjustmentsPostRequestLinesInnerAdjustValue) GetQuantityDifferenceOk() (*float32, bool) {
	if o == nil || IsNil(o.QuantityDifference) {
		return nil, false
	}
	return o.QuantityDifference, true
}

// HasQuantityDifference returns a boolean if a field has been set.
func (o *QuickbooksDesktopInventoryAdjustmentsPostRequestLinesInnerAdjustValue) HasQuantityDifference() bool {
	if o != nil && !IsNil(o.QuantityDifference) {
		return true
	}

	return false
}

// SetQuantityDifference gets a reference to the given float32 and assigns it to the QuantityDifference field.
func (o *QuickbooksDesktopInventoryAdjustmentsPostRequestLinesInnerAdjustValue) SetQuantityDifference(v float32) {
	o.QuantityDifference = &v
}

// GetNewValue returns the NewValue field value if set, zero value otherwise.
func (o *QuickbooksDesktopInventoryAdjustmentsPostRequestLinesInnerAdjustValue) GetNewValue() string {
	if o == nil || IsNil(o.NewValue) {
		var ret string
		return ret
	}
	return *o.NewValue
}

// GetNewValueOk returns a tuple with the NewValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopInventoryAdjustmentsPostRequestLinesInnerAdjustValue) GetNewValueOk() (*string, bool) {
	if o == nil || IsNil(o.NewValue) {
		return nil, false
	}
	return o.NewValue, true
}

// HasNewValue returns a boolean if a field has been set.
func (o *QuickbooksDesktopInventoryAdjustmentsPostRequestLinesInnerAdjustValue) HasNewValue() bool {
	if o != nil && !IsNil(o.NewValue) {
		return true
	}

	return false
}

// SetNewValue gets a reference to the given string and assigns it to the NewValue field.
func (o *QuickbooksDesktopInventoryAdjustmentsPostRequestLinesInnerAdjustValue) SetNewValue(v string) {
	o.NewValue = &v
}

// GetValueDifference returns the ValueDifference field value if set, zero value otherwise.
func (o *QuickbooksDesktopInventoryAdjustmentsPostRequestLinesInnerAdjustValue) GetValueDifference() float32 {
	if o == nil || IsNil(o.ValueDifference) {
		var ret float32
		return ret
	}
	return *o.ValueDifference
}

// GetValueDifferenceOk returns a tuple with the ValueDifference field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopInventoryAdjustmentsPostRequestLinesInnerAdjustValue) GetValueDifferenceOk() (*float32, bool) {
	if o == nil || IsNil(o.ValueDifference) {
		return nil, false
	}
	return o.ValueDifference, true
}

// HasValueDifference returns a boolean if a field has been set.
func (o *QuickbooksDesktopInventoryAdjustmentsPostRequestLinesInnerAdjustValue) HasValueDifference() bool {
	if o != nil && !IsNil(o.ValueDifference) {
		return true
	}

	return false
}

// SetValueDifference gets a reference to the given float32 and assigns it to the ValueDifference field.
func (o *QuickbooksDesktopInventoryAdjustmentsPostRequestLinesInnerAdjustValue) SetValueDifference(v float32) {
	o.ValueDifference = &v
}

func (o QuickbooksDesktopInventoryAdjustmentsPostRequestLinesInnerAdjustValue) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QuickbooksDesktopInventoryAdjustmentsPostRequestLinesInnerAdjustValue) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.NewQuantity) {
		toSerialize["newQuantity"] = o.NewQuantity
	}
	if !IsNil(o.QuantityDifference) {
		toSerialize["quantityDifference"] = o.QuantityDifference
	}
	if !IsNil(o.NewValue) {
		toSerialize["newValue"] = o.NewValue
	}
	if !IsNil(o.ValueDifference) {
		toSerialize["valueDifference"] = o.ValueDifference
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *QuickbooksDesktopInventoryAdjustmentsPostRequestLinesInnerAdjustValue) UnmarshalJSON(data []byte) (err error) {
	varQuickbooksDesktopInventoryAdjustmentsPostRequestLinesInnerAdjustValue := _QuickbooksDesktopInventoryAdjustmentsPostRequestLinesInnerAdjustValue{}

	err = json.Unmarshal(data, &varQuickbooksDesktopInventoryAdjustmentsPostRequestLinesInnerAdjustValue)

	if err != nil {
		return err
	}

	*o = QuickbooksDesktopInventoryAdjustmentsPostRequestLinesInnerAdjustValue(varQuickbooksDesktopInventoryAdjustmentsPostRequestLinesInnerAdjustValue)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "newQuantity")
		delete(additionalProperties, "quantityDifference")
		delete(additionalProperties, "newValue")
		delete(additionalProperties, "valueDifference")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableQuickbooksDesktopInventoryAdjustmentsPostRequestLinesInnerAdjustValue struct {
	value *QuickbooksDesktopInventoryAdjustmentsPostRequestLinesInnerAdjustValue
	isSet bool
}

func (v NullableQuickbooksDesktopInventoryAdjustmentsPostRequestLinesInnerAdjustValue) Get() *QuickbooksDesktopInventoryAdjustmentsPostRequestLinesInnerAdjustValue {
	return v.value
}

func (v *NullableQuickbooksDesktopInventoryAdjustmentsPostRequestLinesInnerAdjustValue) Set(val *QuickbooksDesktopInventoryAdjustmentsPostRequestLinesInnerAdjustValue) {
	v.value = val
	v.isSet = true
}

func (v NullableQuickbooksDesktopInventoryAdjustmentsPostRequestLinesInnerAdjustValue) IsSet() bool {
	return v.isSet
}

func (v *NullableQuickbooksDesktopInventoryAdjustmentsPostRequestLinesInnerAdjustValue) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQuickbooksDesktopInventoryAdjustmentsPostRequestLinesInnerAdjustValue(val *QuickbooksDesktopInventoryAdjustmentsPostRequestLinesInnerAdjustValue) *NullableQuickbooksDesktopInventoryAdjustmentsPostRequestLinesInnerAdjustValue {
	return &NullableQuickbooksDesktopInventoryAdjustmentsPostRequestLinesInnerAdjustValue{value: val, isSet: true}
}

func (v NullableQuickbooksDesktopInventoryAdjustmentsPostRequestLinesInnerAdjustValue) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQuickbooksDesktopInventoryAdjustmentsPostRequestLinesInnerAdjustValue) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


