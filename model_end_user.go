/*
Conductor API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package conductor

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the EndUser type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EndUser{}

// EndUser struct for EndUser
type EndUser struct {
	// The unique identifier for this end-user. You must save this value to your database because it is how you identify which of your users to receive your API requests.
	Id string `json:"id"`
	// The type of object. This value is always `\"end_user\"`.
	ObjectType string `json:"objectType"`
	// The date and time when this end-user record was created.
	CreatedAt string `json:"createdAt"`
	// The end-user's company name that will be shown elsewhere in Conductor.
	CompanyName string `json:"companyName"`
	// The end-user's unique identifier from your system. Maps users between your database and Conductor.
	SourceId string `json:"sourceId"`
	// The end-user's email address for identification purposes.
	Email string `json:"email"`
	// The end-user's integration connections.
	IntegrationConnections []IntegrationConnection `json:"integrationConnections"`
}

type _EndUser EndUser

// NewEndUser instantiates a new EndUser object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEndUser(id string, objectType string, createdAt string, companyName string, sourceId string, email string, integrationConnections []IntegrationConnection) *EndUser {
	this := EndUser{}
	this.Id = id
	this.ObjectType = objectType
	this.CreatedAt = createdAt
	this.CompanyName = companyName
	this.SourceId = sourceId
	this.Email = email
	this.IntegrationConnections = integrationConnections
	return &this
}

// NewEndUserWithDefaults instantiates a new EndUser object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEndUserWithDefaults() *EndUser {
	this := EndUser{}
	return &this
}

// GetId returns the Id field value
func (o *EndUser) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *EndUser) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *EndUser) SetId(v string) {
	o.Id = v
}

// GetObjectType returns the ObjectType field value
func (o *EndUser) GetObjectType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ObjectType
}

// GetObjectTypeOk returns a tuple with the ObjectType field value
// and a boolean to check if the value has been set.
func (o *EndUser) GetObjectTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ObjectType, true
}

// SetObjectType sets field value
func (o *EndUser) SetObjectType(v string) {
	o.ObjectType = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *EndUser) GetCreatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *EndUser) GetCreatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *EndUser) SetCreatedAt(v string) {
	o.CreatedAt = v
}

// GetCompanyName returns the CompanyName field value
func (o *EndUser) GetCompanyName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CompanyName
}

// GetCompanyNameOk returns a tuple with the CompanyName field value
// and a boolean to check if the value has been set.
func (o *EndUser) GetCompanyNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CompanyName, true
}

// SetCompanyName sets field value
func (o *EndUser) SetCompanyName(v string) {
	o.CompanyName = v
}

// GetSourceId returns the SourceId field value
func (o *EndUser) GetSourceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SourceId
}

// GetSourceIdOk returns a tuple with the SourceId field value
// and a boolean to check if the value has been set.
func (o *EndUser) GetSourceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SourceId, true
}

// SetSourceId sets field value
func (o *EndUser) SetSourceId(v string) {
	o.SourceId = v
}

// GetEmail returns the Email field value
func (o *EndUser) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *EndUser) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *EndUser) SetEmail(v string) {
	o.Email = v
}

// GetIntegrationConnections returns the IntegrationConnections field value
func (o *EndUser) GetIntegrationConnections() []IntegrationConnection {
	if o == nil {
		var ret []IntegrationConnection
		return ret
	}

	return o.IntegrationConnections
}

// GetIntegrationConnectionsOk returns a tuple with the IntegrationConnections field value
// and a boolean to check if the value has been set.
func (o *EndUser) GetIntegrationConnectionsOk() ([]IntegrationConnection, bool) {
	if o == nil {
		return nil, false
	}
	return o.IntegrationConnections, true
}

// SetIntegrationConnections sets field value
func (o *EndUser) SetIntegrationConnections(v []IntegrationConnection) {
	o.IntegrationConnections = v
}

func (o EndUser) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EndUser) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["objectType"] = o.ObjectType
	toSerialize["createdAt"] = o.CreatedAt
	toSerialize["companyName"] = o.CompanyName
	toSerialize["sourceId"] = o.SourceId
	toSerialize["email"] = o.Email
	toSerialize["integrationConnections"] = o.IntegrationConnections
	return toSerialize, nil
}

func (o *EndUser) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"objectType",
		"createdAt",
		"companyName",
		"sourceId",
		"email",
		"integrationConnections",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varEndUser := _EndUser{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varEndUser)

	if err != nil {
		return err
	}

	*o = EndUser(varEndUser)

	return err
}

type NullableEndUser struct {
	value *EndUser
	isSet bool
}

func (v NullableEndUser) Get() *EndUser {
	return v.value
}

func (v *NullableEndUser) Set(val *EndUser) {
	v.value = val
	v.isSet = true
}

func (v NullableEndUser) IsSet() bool {
	return v.isSet
}

func (v *NullableEndUser) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEndUser(val *EndUser) *NullableEndUser {
	return &NullableEndUser{value: val, isSet: true}
}

func (v NullableEndUser) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEndUser) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


