/*
Conductor API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package conductor

import (
	"encoding/json"
)

// checks if the QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionRequest{}

// QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionRequest The transaction request data originally supplied for this credit card transaction when using QuickBooks Merchant Services (QBMS).
type QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionRequest struct {
	// The credit card number. Must be masked with lower case \"x\" and no dashes.
	Number *string `json:"number,omitempty"`
	// The month when the credit card expires.
	ExpirationMonth *float32 `json:"expirationMonth,omitempty"`
	// The year when the credit card expires.
	ExpirationYear *float32 `json:"expirationYear,omitempty"`
	// The cardholder's name on the card.
	Name *string `json:"name,omitempty"`
	// The card's billing address.
	Address *string `json:"address,omitempty"`
	// The card's billing address ZIP or postal code.
	PostalCode *string `json:"postalCode,omitempty"`
	// The commercial card code identifies the type of business credit card being used (purchase, corporate, or business) for Visa and Mastercard transactions only. When provided, this code may qualify the transaction for lower processing fees compared to the standard rates that apply when no code is specified.
	CommercialCardCode *string `json:"commercialCardCode,omitempty"`
	// Indicates whether this credit card transaction came from a card swipe (`card_present`) or not (`card_not_present`).
	TransactionMode *string `json:"transactionMode,omitempty"`
	// The QBMS transaction type from which the current transaction data originated.
	TransactionType *string `json:"transactionType,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionRequest QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionRequest

// NewQuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionRequest instantiates a new QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionRequest() *QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionRequest {
	this := QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionRequest{}
	return &this
}

// NewQuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionRequestWithDefaults instantiates a new QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionRequestWithDefaults() *QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionRequest {
	this := QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionRequest{}
	return &this
}

// GetNumber returns the Number field value if set, zero value otherwise.
func (o *QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionRequest) GetNumber() string {
	if o == nil || IsNil(o.Number) {
		var ret string
		return ret
	}
	return *o.Number
}

// GetNumberOk returns a tuple with the Number field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionRequest) GetNumberOk() (*string, bool) {
	if o == nil || IsNil(o.Number) {
		return nil, false
	}
	return o.Number, true
}

// HasNumber returns a boolean if a field has been set.
func (o *QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionRequest) HasNumber() bool {
	if o != nil && !IsNil(o.Number) {
		return true
	}

	return false
}

// SetNumber gets a reference to the given string and assigns it to the Number field.
func (o *QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionRequest) SetNumber(v string) {
	o.Number = &v
}

// GetExpirationMonth returns the ExpirationMonth field value if set, zero value otherwise.
func (o *QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionRequest) GetExpirationMonth() float32 {
	if o == nil || IsNil(o.ExpirationMonth) {
		var ret float32
		return ret
	}
	return *o.ExpirationMonth
}

// GetExpirationMonthOk returns a tuple with the ExpirationMonth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionRequest) GetExpirationMonthOk() (*float32, bool) {
	if o == nil || IsNil(o.ExpirationMonth) {
		return nil, false
	}
	return o.ExpirationMonth, true
}

// HasExpirationMonth returns a boolean if a field has been set.
func (o *QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionRequest) HasExpirationMonth() bool {
	if o != nil && !IsNil(o.ExpirationMonth) {
		return true
	}

	return false
}

// SetExpirationMonth gets a reference to the given float32 and assigns it to the ExpirationMonth field.
func (o *QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionRequest) SetExpirationMonth(v float32) {
	o.ExpirationMonth = &v
}

// GetExpirationYear returns the ExpirationYear field value if set, zero value otherwise.
func (o *QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionRequest) GetExpirationYear() float32 {
	if o == nil || IsNil(o.ExpirationYear) {
		var ret float32
		return ret
	}
	return *o.ExpirationYear
}

// GetExpirationYearOk returns a tuple with the ExpirationYear field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionRequest) GetExpirationYearOk() (*float32, bool) {
	if o == nil || IsNil(o.ExpirationYear) {
		return nil, false
	}
	return o.ExpirationYear, true
}

// HasExpirationYear returns a boolean if a field has been set.
func (o *QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionRequest) HasExpirationYear() bool {
	if o != nil && !IsNil(o.ExpirationYear) {
		return true
	}

	return false
}

// SetExpirationYear gets a reference to the given float32 and assigns it to the ExpirationYear field.
func (o *QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionRequest) SetExpirationYear(v float32) {
	o.ExpirationYear = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionRequest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionRequest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionRequest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionRequest) SetName(v string) {
	o.Name = &v
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionRequest) GetAddress() string {
	if o == nil || IsNil(o.Address) {
		var ret string
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionRequest) GetAddressOk() (*string, bool) {
	if o == nil || IsNil(o.Address) {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionRequest) HasAddress() bool {
	if o != nil && !IsNil(o.Address) {
		return true
	}

	return false
}

// SetAddress gets a reference to the given string and assigns it to the Address field.
func (o *QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionRequest) SetAddress(v string) {
	o.Address = &v
}

// GetPostalCode returns the PostalCode field value if set, zero value otherwise.
func (o *QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionRequest) GetPostalCode() string {
	if o == nil || IsNil(o.PostalCode) {
		var ret string
		return ret
	}
	return *o.PostalCode
}

// GetPostalCodeOk returns a tuple with the PostalCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionRequest) GetPostalCodeOk() (*string, bool) {
	if o == nil || IsNil(o.PostalCode) {
		return nil, false
	}
	return o.PostalCode, true
}

// HasPostalCode returns a boolean if a field has been set.
func (o *QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionRequest) HasPostalCode() bool {
	if o != nil && !IsNil(o.PostalCode) {
		return true
	}

	return false
}

// SetPostalCode gets a reference to the given string and assigns it to the PostalCode field.
func (o *QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionRequest) SetPostalCode(v string) {
	o.PostalCode = &v
}

// GetCommercialCardCode returns the CommercialCardCode field value if set, zero value otherwise.
func (o *QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionRequest) GetCommercialCardCode() string {
	if o == nil || IsNil(o.CommercialCardCode) {
		var ret string
		return ret
	}
	return *o.CommercialCardCode
}

// GetCommercialCardCodeOk returns a tuple with the CommercialCardCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionRequest) GetCommercialCardCodeOk() (*string, bool) {
	if o == nil || IsNil(o.CommercialCardCode) {
		return nil, false
	}
	return o.CommercialCardCode, true
}

// HasCommercialCardCode returns a boolean if a field has been set.
func (o *QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionRequest) HasCommercialCardCode() bool {
	if o != nil && !IsNil(o.CommercialCardCode) {
		return true
	}

	return false
}

// SetCommercialCardCode gets a reference to the given string and assigns it to the CommercialCardCode field.
func (o *QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionRequest) SetCommercialCardCode(v string) {
	o.CommercialCardCode = &v
}

// GetTransactionMode returns the TransactionMode field value if set, zero value otherwise.
func (o *QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionRequest) GetTransactionMode() string {
	if o == nil || IsNil(o.TransactionMode) {
		var ret string
		return ret
	}
	return *o.TransactionMode
}

// GetTransactionModeOk returns a tuple with the TransactionMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionRequest) GetTransactionModeOk() (*string, bool) {
	if o == nil || IsNil(o.TransactionMode) {
		return nil, false
	}
	return o.TransactionMode, true
}

// HasTransactionMode returns a boolean if a field has been set.
func (o *QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionRequest) HasTransactionMode() bool {
	if o != nil && !IsNil(o.TransactionMode) {
		return true
	}

	return false
}

// SetTransactionMode gets a reference to the given string and assigns it to the TransactionMode field.
func (o *QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionRequest) SetTransactionMode(v string) {
	o.TransactionMode = &v
}

// GetTransactionType returns the TransactionType field value if set, zero value otherwise.
func (o *QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionRequest) GetTransactionType() string {
	if o == nil || IsNil(o.TransactionType) {
		var ret string
		return ret
	}
	return *o.TransactionType
}

// GetTransactionTypeOk returns a tuple with the TransactionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionRequest) GetTransactionTypeOk() (*string, bool) {
	if o == nil || IsNil(o.TransactionType) {
		return nil, false
	}
	return o.TransactionType, true
}

// HasTransactionType returns a boolean if a field has been set.
func (o *QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionRequest) HasTransactionType() bool {
	if o != nil && !IsNil(o.TransactionType) {
		return true
	}

	return false
}

// SetTransactionType gets a reference to the given string and assigns it to the TransactionType field.
func (o *QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionRequest) SetTransactionType(v string) {
	o.TransactionType = &v
}

func (o QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Number) {
		toSerialize["number"] = o.Number
	}
	if !IsNil(o.ExpirationMonth) {
		toSerialize["expirationMonth"] = o.ExpirationMonth
	}
	if !IsNil(o.ExpirationYear) {
		toSerialize["expirationYear"] = o.ExpirationYear
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Address) {
		toSerialize["address"] = o.Address
	}
	if !IsNil(o.PostalCode) {
		toSerialize["postalCode"] = o.PostalCode
	}
	if !IsNil(o.CommercialCardCode) {
		toSerialize["commercialCardCode"] = o.CommercialCardCode
	}
	if !IsNil(o.TransactionMode) {
		toSerialize["transactionMode"] = o.TransactionMode
	}
	if !IsNil(o.TransactionType) {
		toSerialize["transactionType"] = o.TransactionType
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionRequest) UnmarshalJSON(data []byte) (err error) {
	varQuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionRequest := _QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionRequest{}

	err = json.Unmarshal(data, &varQuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionRequest)

	if err != nil {
		return err
	}

	*o = QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionRequest(varQuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "number")
		delete(additionalProperties, "expirationMonth")
		delete(additionalProperties, "expirationYear")
		delete(additionalProperties, "name")
		delete(additionalProperties, "address")
		delete(additionalProperties, "postalCode")
		delete(additionalProperties, "commercialCardCode")
		delete(additionalProperties, "transactionMode")
		delete(additionalProperties, "transactionType")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableQuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionRequest struct {
	value *QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionRequest
	isSet bool
}

func (v NullableQuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionRequest) Get() *QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionRequest {
	return v.value
}

func (v *NullableQuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionRequest) Set(val *QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableQuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableQuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionRequest(val *QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionRequest) *NullableQuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionRequest {
	return &NullableQuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionRequest{value: val, isSet: true}
}

func (v NullableQuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


