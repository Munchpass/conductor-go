/*
Conductor API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package conductor

import (
	"encoding/json"
	"fmt"
)

// checks if the QuickbooksDesktopBillCheckPaymentsPostRequestApplyToTransactionsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QuickbooksDesktopBillCheckPaymentsPostRequestApplyToTransactionsInner{}

// QuickbooksDesktopBillCheckPaymentsPostRequestApplyToTransactionsInner struct for QuickbooksDesktopBillCheckPaymentsPostRequestApplyToTransactionsInner
type QuickbooksDesktopBillCheckPaymentsPostRequestApplyToTransactionsInner struct {
	// The ID of the receivable transaction to which this payment is applied.
	TransactionId string `json:"transactionId"`
	// The monetary amount to apply to the receivable transaction, represented as a decimal string.
	PaymentAmount *string `json:"paymentAmount,omitempty"`
	// Credit memos to apply to this receivable transaction, reducing its balance. This creates a link between this receivable transaction and the specified credit memos.  **IMPORTANT**: By default, QuickBooks will not return any information about the linked transactions in this endpoint's response even when this request is successful. To see the transactions linked via this field, refetch the receivable transaction and check the `linkedTransactions` response field. If fetching a list of receivable transactions, you must also specify the parameter `includeLinkedTransactions=true` to see the `linkedTransactions` response field.
	ApplyCredits []QuickbooksDesktopBillCheckPaymentsPostRequestApplyToTransactionsInnerApplyCreditsInner `json:"applyCredits,omitempty"`
	// The monetary amount by which to reduce the receivable transaction's receivable amount, represented as a decimal string.
	DiscountAmount *string `json:"discountAmount,omitempty"`
	// The financial account used to track this receivable transaction's discount.
	DiscountAccountId *string `json:"discountAccountId,omitempty"`
	// The class used to track this receivable transaction's discount.
	DiscountClassId *string `json:"discountClassId,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _QuickbooksDesktopBillCheckPaymentsPostRequestApplyToTransactionsInner QuickbooksDesktopBillCheckPaymentsPostRequestApplyToTransactionsInner

// NewQuickbooksDesktopBillCheckPaymentsPostRequestApplyToTransactionsInner instantiates a new QuickbooksDesktopBillCheckPaymentsPostRequestApplyToTransactionsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQuickbooksDesktopBillCheckPaymentsPostRequestApplyToTransactionsInner(transactionId string) *QuickbooksDesktopBillCheckPaymentsPostRequestApplyToTransactionsInner {
	this := QuickbooksDesktopBillCheckPaymentsPostRequestApplyToTransactionsInner{}
	this.TransactionId = transactionId
	return &this
}

// NewQuickbooksDesktopBillCheckPaymentsPostRequestApplyToTransactionsInnerWithDefaults instantiates a new QuickbooksDesktopBillCheckPaymentsPostRequestApplyToTransactionsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQuickbooksDesktopBillCheckPaymentsPostRequestApplyToTransactionsInnerWithDefaults() *QuickbooksDesktopBillCheckPaymentsPostRequestApplyToTransactionsInner {
	this := QuickbooksDesktopBillCheckPaymentsPostRequestApplyToTransactionsInner{}
	return &this
}

// GetTransactionId returns the TransactionId field value
func (o *QuickbooksDesktopBillCheckPaymentsPostRequestApplyToTransactionsInner) GetTransactionId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TransactionId
}

// GetTransactionIdOk returns a tuple with the TransactionId field value
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopBillCheckPaymentsPostRequestApplyToTransactionsInner) GetTransactionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TransactionId, true
}

// SetTransactionId sets field value
func (o *QuickbooksDesktopBillCheckPaymentsPostRequestApplyToTransactionsInner) SetTransactionId(v string) {
	o.TransactionId = v
}

// GetPaymentAmount returns the PaymentAmount field value if set, zero value otherwise.
func (o *QuickbooksDesktopBillCheckPaymentsPostRequestApplyToTransactionsInner) GetPaymentAmount() string {
	if o == nil || IsNil(o.PaymentAmount) {
		var ret string
		return ret
	}
	return *o.PaymentAmount
}

// GetPaymentAmountOk returns a tuple with the PaymentAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopBillCheckPaymentsPostRequestApplyToTransactionsInner) GetPaymentAmountOk() (*string, bool) {
	if o == nil || IsNil(o.PaymentAmount) {
		return nil, false
	}
	return o.PaymentAmount, true
}

// HasPaymentAmount returns a boolean if a field has been set.
func (o *QuickbooksDesktopBillCheckPaymentsPostRequestApplyToTransactionsInner) HasPaymentAmount() bool {
	if o != nil && !IsNil(o.PaymentAmount) {
		return true
	}

	return false
}

// SetPaymentAmount gets a reference to the given string and assigns it to the PaymentAmount field.
func (o *QuickbooksDesktopBillCheckPaymentsPostRequestApplyToTransactionsInner) SetPaymentAmount(v string) {
	o.PaymentAmount = &v
}

// GetApplyCredits returns the ApplyCredits field value if set, zero value otherwise.
func (o *QuickbooksDesktopBillCheckPaymentsPostRequestApplyToTransactionsInner) GetApplyCredits() []QuickbooksDesktopBillCheckPaymentsPostRequestApplyToTransactionsInnerApplyCreditsInner {
	if o == nil || IsNil(o.ApplyCredits) {
		var ret []QuickbooksDesktopBillCheckPaymentsPostRequestApplyToTransactionsInnerApplyCreditsInner
		return ret
	}
	return o.ApplyCredits
}

// GetApplyCreditsOk returns a tuple with the ApplyCredits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopBillCheckPaymentsPostRequestApplyToTransactionsInner) GetApplyCreditsOk() ([]QuickbooksDesktopBillCheckPaymentsPostRequestApplyToTransactionsInnerApplyCreditsInner, bool) {
	if o == nil || IsNil(o.ApplyCredits) {
		return nil, false
	}
	return o.ApplyCredits, true
}

// HasApplyCredits returns a boolean if a field has been set.
func (o *QuickbooksDesktopBillCheckPaymentsPostRequestApplyToTransactionsInner) HasApplyCredits() bool {
	if o != nil && !IsNil(o.ApplyCredits) {
		return true
	}

	return false
}

// SetApplyCredits gets a reference to the given []QuickbooksDesktopBillCheckPaymentsPostRequestApplyToTransactionsInnerApplyCreditsInner and assigns it to the ApplyCredits field.
func (o *QuickbooksDesktopBillCheckPaymentsPostRequestApplyToTransactionsInner) SetApplyCredits(v []QuickbooksDesktopBillCheckPaymentsPostRequestApplyToTransactionsInnerApplyCreditsInner) {
	o.ApplyCredits = v
}

// GetDiscountAmount returns the DiscountAmount field value if set, zero value otherwise.
func (o *QuickbooksDesktopBillCheckPaymentsPostRequestApplyToTransactionsInner) GetDiscountAmount() string {
	if o == nil || IsNil(o.DiscountAmount) {
		var ret string
		return ret
	}
	return *o.DiscountAmount
}

// GetDiscountAmountOk returns a tuple with the DiscountAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopBillCheckPaymentsPostRequestApplyToTransactionsInner) GetDiscountAmountOk() (*string, bool) {
	if o == nil || IsNil(o.DiscountAmount) {
		return nil, false
	}
	return o.DiscountAmount, true
}

// HasDiscountAmount returns a boolean if a field has been set.
func (o *QuickbooksDesktopBillCheckPaymentsPostRequestApplyToTransactionsInner) HasDiscountAmount() bool {
	if o != nil && !IsNil(o.DiscountAmount) {
		return true
	}

	return false
}

// SetDiscountAmount gets a reference to the given string and assigns it to the DiscountAmount field.
func (o *QuickbooksDesktopBillCheckPaymentsPostRequestApplyToTransactionsInner) SetDiscountAmount(v string) {
	o.DiscountAmount = &v
}

// GetDiscountAccountId returns the DiscountAccountId field value if set, zero value otherwise.
func (o *QuickbooksDesktopBillCheckPaymentsPostRequestApplyToTransactionsInner) GetDiscountAccountId() string {
	if o == nil || IsNil(o.DiscountAccountId) {
		var ret string
		return ret
	}
	return *o.DiscountAccountId
}

// GetDiscountAccountIdOk returns a tuple with the DiscountAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopBillCheckPaymentsPostRequestApplyToTransactionsInner) GetDiscountAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.DiscountAccountId) {
		return nil, false
	}
	return o.DiscountAccountId, true
}

// HasDiscountAccountId returns a boolean if a field has been set.
func (o *QuickbooksDesktopBillCheckPaymentsPostRequestApplyToTransactionsInner) HasDiscountAccountId() bool {
	if o != nil && !IsNil(o.DiscountAccountId) {
		return true
	}

	return false
}

// SetDiscountAccountId gets a reference to the given string and assigns it to the DiscountAccountId field.
func (o *QuickbooksDesktopBillCheckPaymentsPostRequestApplyToTransactionsInner) SetDiscountAccountId(v string) {
	o.DiscountAccountId = &v
}

// GetDiscountClassId returns the DiscountClassId field value if set, zero value otherwise.
func (o *QuickbooksDesktopBillCheckPaymentsPostRequestApplyToTransactionsInner) GetDiscountClassId() string {
	if o == nil || IsNil(o.DiscountClassId) {
		var ret string
		return ret
	}
	return *o.DiscountClassId
}

// GetDiscountClassIdOk returns a tuple with the DiscountClassId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopBillCheckPaymentsPostRequestApplyToTransactionsInner) GetDiscountClassIdOk() (*string, bool) {
	if o == nil || IsNil(o.DiscountClassId) {
		return nil, false
	}
	return o.DiscountClassId, true
}

// HasDiscountClassId returns a boolean if a field has been set.
func (o *QuickbooksDesktopBillCheckPaymentsPostRequestApplyToTransactionsInner) HasDiscountClassId() bool {
	if o != nil && !IsNil(o.DiscountClassId) {
		return true
	}

	return false
}

// SetDiscountClassId gets a reference to the given string and assigns it to the DiscountClassId field.
func (o *QuickbooksDesktopBillCheckPaymentsPostRequestApplyToTransactionsInner) SetDiscountClassId(v string) {
	o.DiscountClassId = &v
}

func (o QuickbooksDesktopBillCheckPaymentsPostRequestApplyToTransactionsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QuickbooksDesktopBillCheckPaymentsPostRequestApplyToTransactionsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["transactionId"] = o.TransactionId
	if !IsNil(o.PaymentAmount) {
		toSerialize["paymentAmount"] = o.PaymentAmount
	}
	if !IsNil(o.ApplyCredits) {
		toSerialize["applyCredits"] = o.ApplyCredits
	}
	if !IsNil(o.DiscountAmount) {
		toSerialize["discountAmount"] = o.DiscountAmount
	}
	if !IsNil(o.DiscountAccountId) {
		toSerialize["discountAccountId"] = o.DiscountAccountId
	}
	if !IsNil(o.DiscountClassId) {
		toSerialize["discountClassId"] = o.DiscountClassId
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *QuickbooksDesktopBillCheckPaymentsPostRequestApplyToTransactionsInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"transactionId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varQuickbooksDesktopBillCheckPaymentsPostRequestApplyToTransactionsInner := _QuickbooksDesktopBillCheckPaymentsPostRequestApplyToTransactionsInner{}

	err = json.Unmarshal(data, &varQuickbooksDesktopBillCheckPaymentsPostRequestApplyToTransactionsInner)

	if err != nil {
		return err
	}

	*o = QuickbooksDesktopBillCheckPaymentsPostRequestApplyToTransactionsInner(varQuickbooksDesktopBillCheckPaymentsPostRequestApplyToTransactionsInner)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "transactionId")
		delete(additionalProperties, "paymentAmount")
		delete(additionalProperties, "applyCredits")
		delete(additionalProperties, "discountAmount")
		delete(additionalProperties, "discountAccountId")
		delete(additionalProperties, "discountClassId")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableQuickbooksDesktopBillCheckPaymentsPostRequestApplyToTransactionsInner struct {
	value *QuickbooksDesktopBillCheckPaymentsPostRequestApplyToTransactionsInner
	isSet bool
}

func (v NullableQuickbooksDesktopBillCheckPaymentsPostRequestApplyToTransactionsInner) Get() *QuickbooksDesktopBillCheckPaymentsPostRequestApplyToTransactionsInner {
	return v.value
}

func (v *NullableQuickbooksDesktopBillCheckPaymentsPostRequestApplyToTransactionsInner) Set(val *QuickbooksDesktopBillCheckPaymentsPostRequestApplyToTransactionsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableQuickbooksDesktopBillCheckPaymentsPostRequestApplyToTransactionsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableQuickbooksDesktopBillCheckPaymentsPostRequestApplyToTransactionsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQuickbooksDesktopBillCheckPaymentsPostRequestApplyToTransactionsInner(val *QuickbooksDesktopBillCheckPaymentsPostRequestApplyToTransactionsInner) *NullableQuickbooksDesktopBillCheckPaymentsPostRequestApplyToTransactionsInner {
	return &NullableQuickbooksDesktopBillCheckPaymentsPostRequestApplyToTransactionsInner{value: val, isSet: true}
}

func (v NullableQuickbooksDesktopBillCheckPaymentsPostRequestApplyToTransactionsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQuickbooksDesktopBillCheckPaymentsPostRequestApplyToTransactionsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


