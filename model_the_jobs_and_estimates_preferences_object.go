/*
Conductor API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package conductor

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the TheJobsAndEstimatesPreferencesObject type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TheJobsAndEstimatesPreferencesObject{}

// TheJobsAndEstimatesPreferencesObject The jobs and estimates preferences for this company file.
type TheJobsAndEstimatesPreferencesObject struct {
	// Indicates whether this company file is configured to create estimates for jobs.
	IsUsingEstimates bool `json:"isUsingEstimates"`
	// Indicates whether this company file permits creating invoices for only a portion of an estimate.
	IsUsingProgressInvoicing bool `json:"isUsingProgressInvoicing"`
	// Indicates whether this company file is configured to print line items with zero amounts on progress invoices. This preference is only relevant if `isUsingProgressInvoicing` is `true`.
	IsPrintingItemsWithZeroAmounts bool `json:"isPrintingItemsWithZeroAmounts"`
}

type _TheJobsAndEstimatesPreferencesObject TheJobsAndEstimatesPreferencesObject

// NewTheJobsAndEstimatesPreferencesObject instantiates a new TheJobsAndEstimatesPreferencesObject object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTheJobsAndEstimatesPreferencesObject(isUsingEstimates bool, isUsingProgressInvoicing bool, isPrintingItemsWithZeroAmounts bool) *TheJobsAndEstimatesPreferencesObject {
	this := TheJobsAndEstimatesPreferencesObject{}
	this.IsUsingEstimates = isUsingEstimates
	this.IsUsingProgressInvoicing = isUsingProgressInvoicing
	this.IsPrintingItemsWithZeroAmounts = isPrintingItemsWithZeroAmounts
	return &this
}

// NewTheJobsAndEstimatesPreferencesObjectWithDefaults instantiates a new TheJobsAndEstimatesPreferencesObject object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTheJobsAndEstimatesPreferencesObjectWithDefaults() *TheJobsAndEstimatesPreferencesObject {
	this := TheJobsAndEstimatesPreferencesObject{}
	return &this
}

// GetIsUsingEstimates returns the IsUsingEstimates field value
func (o *TheJobsAndEstimatesPreferencesObject) GetIsUsingEstimates() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsUsingEstimates
}

// GetIsUsingEstimatesOk returns a tuple with the IsUsingEstimates field value
// and a boolean to check if the value has been set.
func (o *TheJobsAndEstimatesPreferencesObject) GetIsUsingEstimatesOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsUsingEstimates, true
}

// SetIsUsingEstimates sets field value
func (o *TheJobsAndEstimatesPreferencesObject) SetIsUsingEstimates(v bool) {
	o.IsUsingEstimates = v
}

// GetIsUsingProgressInvoicing returns the IsUsingProgressInvoicing field value
func (o *TheJobsAndEstimatesPreferencesObject) GetIsUsingProgressInvoicing() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsUsingProgressInvoicing
}

// GetIsUsingProgressInvoicingOk returns a tuple with the IsUsingProgressInvoicing field value
// and a boolean to check if the value has been set.
func (o *TheJobsAndEstimatesPreferencesObject) GetIsUsingProgressInvoicingOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsUsingProgressInvoicing, true
}

// SetIsUsingProgressInvoicing sets field value
func (o *TheJobsAndEstimatesPreferencesObject) SetIsUsingProgressInvoicing(v bool) {
	o.IsUsingProgressInvoicing = v
}

// GetIsPrintingItemsWithZeroAmounts returns the IsPrintingItemsWithZeroAmounts field value
func (o *TheJobsAndEstimatesPreferencesObject) GetIsPrintingItemsWithZeroAmounts() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsPrintingItemsWithZeroAmounts
}

// GetIsPrintingItemsWithZeroAmountsOk returns a tuple with the IsPrintingItemsWithZeroAmounts field value
// and a boolean to check if the value has been set.
func (o *TheJobsAndEstimatesPreferencesObject) GetIsPrintingItemsWithZeroAmountsOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsPrintingItemsWithZeroAmounts, true
}

// SetIsPrintingItemsWithZeroAmounts sets field value
func (o *TheJobsAndEstimatesPreferencesObject) SetIsPrintingItemsWithZeroAmounts(v bool) {
	o.IsPrintingItemsWithZeroAmounts = v
}

func (o TheJobsAndEstimatesPreferencesObject) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TheJobsAndEstimatesPreferencesObject) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["isUsingEstimates"] = o.IsUsingEstimates
	toSerialize["isUsingProgressInvoicing"] = o.IsUsingProgressInvoicing
	toSerialize["isPrintingItemsWithZeroAmounts"] = o.IsPrintingItemsWithZeroAmounts
	return toSerialize, nil
}

func (o *TheJobsAndEstimatesPreferencesObject) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"isUsingEstimates",
		"isUsingProgressInvoicing",
		"isPrintingItemsWithZeroAmounts",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varTheJobsAndEstimatesPreferencesObject := _TheJobsAndEstimatesPreferencesObject{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varTheJobsAndEstimatesPreferencesObject)

	if err != nil {
		return err
	}

	*o = TheJobsAndEstimatesPreferencesObject(varTheJobsAndEstimatesPreferencesObject)

	return err
}

type NullableTheJobsAndEstimatesPreferencesObject struct {
	value *TheJobsAndEstimatesPreferencesObject
	isSet bool
}

func (v NullableTheJobsAndEstimatesPreferencesObject) Get() *TheJobsAndEstimatesPreferencesObject {
	return v.value
}

func (v *NullableTheJobsAndEstimatesPreferencesObject) Set(val *TheJobsAndEstimatesPreferencesObject) {
	v.value = val
	v.isSet = true
}

func (v NullableTheJobsAndEstimatesPreferencesObject) IsSet() bool {
	return v.isSet
}

func (v *NullableTheJobsAndEstimatesPreferencesObject) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTheJobsAndEstimatesPreferencesObject(val *TheJobsAndEstimatesPreferencesObject) *NullableTheJobsAndEstimatesPreferencesObject {
	return &NullableTheJobsAndEstimatesPreferencesObject{value: val, isSet: true}
}

func (v NullableTheJobsAndEstimatesPreferencesObject) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTheJobsAndEstimatesPreferencesObject) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


