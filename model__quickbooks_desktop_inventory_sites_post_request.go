/*
Conductor API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package conductor

import (
	"encoding/json"
	"fmt"
)

// checks if the QuickbooksDesktopInventorySitesPostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QuickbooksDesktopInventorySitesPostRequest{}

// QuickbooksDesktopInventorySitesPostRequest struct for QuickbooksDesktopInventorySitesPostRequest
type QuickbooksDesktopInventorySitesPostRequest struct {
	// The case-insensitive unique name of this inventory site, unique across all inventory sites.  **NOTE**: Inventory sites do not have a `fullName` field because they are not hierarchical objects, which is why `name` is unique for them but not for objects that have parents.  Maximum length: 31 characters.
	Name string `json:"name"`
	// Indicates whether this inventory site is active. Inactive objects are typically hidden from views and reports in QuickBooks. Defaults to `true`.
	IsActive *bool `json:"isActive,omitempty"`
	// The parent inventory site one level above this one in the hierarchy.
	ParentId *string `json:"parentId,omitempty"`
	// A description of this inventory site.
	Description *string `json:"description,omitempty"`
	// The inventory site's email address.
	Email *string `json:"email,omitempty"`
	Address *QuickbooksDesktopInventorySitesPostRequestAddress `json:"address,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _QuickbooksDesktopInventorySitesPostRequest QuickbooksDesktopInventorySitesPostRequest

// NewQuickbooksDesktopInventorySitesPostRequest instantiates a new QuickbooksDesktopInventorySitesPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQuickbooksDesktopInventorySitesPostRequest(name string) *QuickbooksDesktopInventorySitesPostRequest {
	this := QuickbooksDesktopInventorySitesPostRequest{}
	this.Name = name
	var isActive bool = true
	this.IsActive = &isActive
	return &this
}

// NewQuickbooksDesktopInventorySitesPostRequestWithDefaults instantiates a new QuickbooksDesktopInventorySitesPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQuickbooksDesktopInventorySitesPostRequestWithDefaults() *QuickbooksDesktopInventorySitesPostRequest {
	this := QuickbooksDesktopInventorySitesPostRequest{}
	var isActive bool = true
	this.IsActive = &isActive
	return &this
}

// GetName returns the Name field value
func (o *QuickbooksDesktopInventorySitesPostRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopInventorySitesPostRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *QuickbooksDesktopInventorySitesPostRequest) SetName(v string) {
	o.Name = v
}

// GetIsActive returns the IsActive field value if set, zero value otherwise.
func (o *QuickbooksDesktopInventorySitesPostRequest) GetIsActive() bool {
	if o == nil || IsNil(o.IsActive) {
		var ret bool
		return ret
	}
	return *o.IsActive
}

// GetIsActiveOk returns a tuple with the IsActive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopInventorySitesPostRequest) GetIsActiveOk() (*bool, bool) {
	if o == nil || IsNil(o.IsActive) {
		return nil, false
	}
	return o.IsActive, true
}

// HasIsActive returns a boolean if a field has been set.
func (o *QuickbooksDesktopInventorySitesPostRequest) HasIsActive() bool {
	if o != nil && !IsNil(o.IsActive) {
		return true
	}

	return false
}

// SetIsActive gets a reference to the given bool and assigns it to the IsActive field.
func (o *QuickbooksDesktopInventorySitesPostRequest) SetIsActive(v bool) {
	o.IsActive = &v
}

// GetParentId returns the ParentId field value if set, zero value otherwise.
func (o *QuickbooksDesktopInventorySitesPostRequest) GetParentId() string {
	if o == nil || IsNil(o.ParentId) {
		var ret string
		return ret
	}
	return *o.ParentId
}

// GetParentIdOk returns a tuple with the ParentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopInventorySitesPostRequest) GetParentIdOk() (*string, bool) {
	if o == nil || IsNil(o.ParentId) {
		return nil, false
	}
	return o.ParentId, true
}

// HasParentId returns a boolean if a field has been set.
func (o *QuickbooksDesktopInventorySitesPostRequest) HasParentId() bool {
	if o != nil && !IsNil(o.ParentId) {
		return true
	}

	return false
}

// SetParentId gets a reference to the given string and assigns it to the ParentId field.
func (o *QuickbooksDesktopInventorySitesPostRequest) SetParentId(v string) {
	o.ParentId = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *QuickbooksDesktopInventorySitesPostRequest) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopInventorySitesPostRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *QuickbooksDesktopInventorySitesPostRequest) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *QuickbooksDesktopInventorySitesPostRequest) SetDescription(v string) {
	o.Description = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *QuickbooksDesktopInventorySitesPostRequest) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopInventorySitesPostRequest) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *QuickbooksDesktopInventorySitesPostRequest) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *QuickbooksDesktopInventorySitesPostRequest) SetEmail(v string) {
	o.Email = &v
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *QuickbooksDesktopInventorySitesPostRequest) GetAddress() QuickbooksDesktopInventorySitesPostRequestAddress {
	if o == nil || IsNil(o.Address) {
		var ret QuickbooksDesktopInventorySitesPostRequestAddress
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopInventorySitesPostRequest) GetAddressOk() (*QuickbooksDesktopInventorySitesPostRequestAddress, bool) {
	if o == nil || IsNil(o.Address) {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *QuickbooksDesktopInventorySitesPostRequest) HasAddress() bool {
	if o != nil && !IsNil(o.Address) {
		return true
	}

	return false
}

// SetAddress gets a reference to the given QuickbooksDesktopInventorySitesPostRequestAddress and assigns it to the Address field.
func (o *QuickbooksDesktopInventorySitesPostRequest) SetAddress(v QuickbooksDesktopInventorySitesPostRequestAddress) {
	o.Address = &v
}

func (o QuickbooksDesktopInventorySitesPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QuickbooksDesktopInventorySitesPostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	if !IsNil(o.IsActive) {
		toSerialize["isActive"] = o.IsActive
	}
	if !IsNil(o.ParentId) {
		toSerialize["parentId"] = o.ParentId
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.Address) {
		toSerialize["address"] = o.Address
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *QuickbooksDesktopInventorySitesPostRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varQuickbooksDesktopInventorySitesPostRequest := _QuickbooksDesktopInventorySitesPostRequest{}

	err = json.Unmarshal(data, &varQuickbooksDesktopInventorySitesPostRequest)

	if err != nil {
		return err
	}

	*o = QuickbooksDesktopInventorySitesPostRequest(varQuickbooksDesktopInventorySitesPostRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "name")
		delete(additionalProperties, "isActive")
		delete(additionalProperties, "parentId")
		delete(additionalProperties, "description")
		delete(additionalProperties, "email")
		delete(additionalProperties, "address")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableQuickbooksDesktopInventorySitesPostRequest struct {
	value *QuickbooksDesktopInventorySitesPostRequest
	isSet bool
}

func (v NullableQuickbooksDesktopInventorySitesPostRequest) Get() *QuickbooksDesktopInventorySitesPostRequest {
	return v.value
}

func (v *NullableQuickbooksDesktopInventorySitesPostRequest) Set(val *QuickbooksDesktopInventorySitesPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableQuickbooksDesktopInventorySitesPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableQuickbooksDesktopInventorySitesPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQuickbooksDesktopInventorySitesPostRequest(val *QuickbooksDesktopInventorySitesPostRequest) *NullableQuickbooksDesktopInventorySitesPostRequest {
	return &NullableQuickbooksDesktopInventorySitesPostRequest{value: val, isSet: true}
}

func (v NullableQuickbooksDesktopInventorySitesPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQuickbooksDesktopInventorySitesPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


