/*
Conductor API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package conductor

import (
	"encoding/json"
	"fmt"
)

// checks if the QbdItemLine type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QbdItemLine{}

// QbdItemLine struct for QbdItemLine
type QbdItemLine struct {
	// The unique identifier assigned by QuickBooks to this item line. This ID is unique across all transaction line types.
	Id string `json:"id"`
	// The type of object. This value is always `\"qbd_item_line\"`.
	ObjectType string `json:"objectType"`
	Item QbdItemLineItem `json:"item"`
	InventorySite QbdItemLineInventorySite `json:"inventorySite"`
	InventorySiteLocation QbdItemLineInventorySiteLocation `json:"inventorySiteLocation"`
	// The serial number of the item associated with this item line. This is used for tracking individual units of serialized inventory items.
	SerialNumber string `json:"serialNumber"`
	// The lot number of the item associated with this item line. Used for tracking groups of inventory items that are purchased or manufactured together.
	LotNumber string `json:"lotNumber"`
	// The expiration date for the serial number or lot number of the item associated with this item line, in ISO 8601 format (YYYY-MM-DD). This is particularly relevant for perishable or time-sensitive inventory items. Note that this field is only supported on QuickBooks Desktop 2023 or later.
	ExpirationDate string `json:"expirationDate"`
	// A description of this item line.
	Description string `json:"description"`
	// The quantity of the item associated with this item line. This field cannot be cleared.  **NOTE**: Do not use this field if the associated item is a discount item.
	Quantity float32 `json:"quantity"`
	// The unit-of-measure used for the `quantity` in this item line. Must be a valid unit within the item's available units of measure.
	UnitOfMeasure string `json:"unitOfMeasure"`
	OverrideUnitOfMeasureSet QbdItemLineOverrideUnitOfMeasureSet `json:"overrideUnitOfMeasureSet"`
	// The cost of this item line, represented as a decimal string. If both `quantity` and `amount` are specified but not `cost`, QuickBooks will use them to calculate `cost`.
	Cost string `json:"cost"`
	// The monetary amount of this item line, represented as a decimal string. If both `quantity` and `cost` are specified but not `amount`, QuickBooks will use them to calculate `amount`. If `amount`, `cost`, and `quantity` are all unspecified, then QuickBooks will calculate `amount` based on a `quantity` of `1` and the suggested `cost`. This field cannot be cleared.
	Amount string `json:"amount"`
	Customer QbdItemLineCustomer `json:"customer"`
	Class QbdItemLineClass `json:"class"`
	SalesTaxCode QbdItemLineSalesTaxCode `json:"salesTaxCode"`
	// The billing status of this item line.
	BillingStatus string `json:"billingStatus"`
	SalesRepresentative QbdItemLineSalesRepresentative `json:"salesRepresentative"`
	// The custom fields for the item line object, added as user-defined data extensions, not included in the standard QuickBooks object.
	CustomFields []QbdCustomField `json:"customFields"`
	AdditionalProperties map[string]interface{}
}

type _QbdItemLine QbdItemLine

// NewQbdItemLine instantiates a new QbdItemLine object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQbdItemLine(id string, objectType string, item QbdItemLineItem, inventorySite QbdItemLineInventorySite, inventorySiteLocation QbdItemLineInventorySiteLocation, serialNumber string, lotNumber string, expirationDate string, description string, quantity float32, unitOfMeasure string, overrideUnitOfMeasureSet QbdItemLineOverrideUnitOfMeasureSet, cost string, amount string, customer QbdItemLineCustomer, class QbdItemLineClass, salesTaxCode QbdItemLineSalesTaxCode, billingStatus string, salesRepresentative QbdItemLineSalesRepresentative, customFields []QbdCustomField) *QbdItemLine {
	this := QbdItemLine{}
	this.Id = id
	this.ObjectType = objectType
	this.Item = item
	this.InventorySite = inventorySite
	this.InventorySiteLocation = inventorySiteLocation
	this.SerialNumber = serialNumber
	this.LotNumber = lotNumber
	this.ExpirationDate = expirationDate
	this.Description = description
	this.Quantity = quantity
	this.UnitOfMeasure = unitOfMeasure
	this.OverrideUnitOfMeasureSet = overrideUnitOfMeasureSet
	this.Cost = cost
	this.Amount = amount
	this.Customer = customer
	this.Class = class
	this.SalesTaxCode = salesTaxCode
	this.BillingStatus = billingStatus
	this.SalesRepresentative = salesRepresentative
	this.CustomFields = customFields
	return &this
}

// NewQbdItemLineWithDefaults instantiates a new QbdItemLine object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQbdItemLineWithDefaults() *QbdItemLine {
	this := QbdItemLine{}
	return &this
}

// GetId returns the Id field value
func (o *QbdItemLine) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *QbdItemLine) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *QbdItemLine) SetId(v string) {
	o.Id = v
}

// GetObjectType returns the ObjectType field value
func (o *QbdItemLine) GetObjectType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ObjectType
}

// GetObjectTypeOk returns a tuple with the ObjectType field value
// and a boolean to check if the value has been set.
func (o *QbdItemLine) GetObjectTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ObjectType, true
}

// SetObjectType sets field value
func (o *QbdItemLine) SetObjectType(v string) {
	o.ObjectType = v
}

// GetItem returns the Item field value
func (o *QbdItemLine) GetItem() QbdItemLineItem {
	if o == nil {
		var ret QbdItemLineItem
		return ret
	}

	return o.Item
}

// GetItemOk returns a tuple with the Item field value
// and a boolean to check if the value has been set.
func (o *QbdItemLine) GetItemOk() (*QbdItemLineItem, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Item, true
}

// SetItem sets field value
func (o *QbdItemLine) SetItem(v QbdItemLineItem) {
	o.Item = v
}

// GetInventorySite returns the InventorySite field value
func (o *QbdItemLine) GetInventorySite() QbdItemLineInventorySite {
	if o == nil {
		var ret QbdItemLineInventorySite
		return ret
	}

	return o.InventorySite
}

// GetInventorySiteOk returns a tuple with the InventorySite field value
// and a boolean to check if the value has been set.
func (o *QbdItemLine) GetInventorySiteOk() (*QbdItemLineInventorySite, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InventorySite, true
}

// SetInventorySite sets field value
func (o *QbdItemLine) SetInventorySite(v QbdItemLineInventorySite) {
	o.InventorySite = v
}

// GetInventorySiteLocation returns the InventorySiteLocation field value
func (o *QbdItemLine) GetInventorySiteLocation() QbdItemLineInventorySiteLocation {
	if o == nil {
		var ret QbdItemLineInventorySiteLocation
		return ret
	}

	return o.InventorySiteLocation
}

// GetInventorySiteLocationOk returns a tuple with the InventorySiteLocation field value
// and a boolean to check if the value has been set.
func (o *QbdItemLine) GetInventorySiteLocationOk() (*QbdItemLineInventorySiteLocation, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InventorySiteLocation, true
}

// SetInventorySiteLocation sets field value
func (o *QbdItemLine) SetInventorySiteLocation(v QbdItemLineInventorySiteLocation) {
	o.InventorySiteLocation = v
}

// GetSerialNumber returns the SerialNumber field value
func (o *QbdItemLine) GetSerialNumber() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SerialNumber
}

// GetSerialNumberOk returns a tuple with the SerialNumber field value
// and a boolean to check if the value has been set.
func (o *QbdItemLine) GetSerialNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SerialNumber, true
}

// SetSerialNumber sets field value
func (o *QbdItemLine) SetSerialNumber(v string) {
	o.SerialNumber = v
}

// GetLotNumber returns the LotNumber field value
func (o *QbdItemLine) GetLotNumber() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LotNumber
}

// GetLotNumberOk returns a tuple with the LotNumber field value
// and a boolean to check if the value has been set.
func (o *QbdItemLine) GetLotNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LotNumber, true
}

// SetLotNumber sets field value
func (o *QbdItemLine) SetLotNumber(v string) {
	o.LotNumber = v
}

// GetExpirationDate returns the ExpirationDate field value
func (o *QbdItemLine) GetExpirationDate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ExpirationDate
}

// GetExpirationDateOk returns a tuple with the ExpirationDate field value
// and a boolean to check if the value has been set.
func (o *QbdItemLine) GetExpirationDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExpirationDate, true
}

// SetExpirationDate sets field value
func (o *QbdItemLine) SetExpirationDate(v string) {
	o.ExpirationDate = v
}

// GetDescription returns the Description field value
func (o *QbdItemLine) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *QbdItemLine) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *QbdItemLine) SetDescription(v string) {
	o.Description = v
}

// GetQuantity returns the Quantity field value
func (o *QbdItemLine) GetQuantity() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value
// and a boolean to check if the value has been set.
func (o *QbdItemLine) GetQuantityOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Quantity, true
}

// SetQuantity sets field value
func (o *QbdItemLine) SetQuantity(v float32) {
	o.Quantity = v
}

// GetUnitOfMeasure returns the UnitOfMeasure field value
func (o *QbdItemLine) GetUnitOfMeasure() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UnitOfMeasure
}

// GetUnitOfMeasureOk returns a tuple with the UnitOfMeasure field value
// and a boolean to check if the value has been set.
func (o *QbdItemLine) GetUnitOfMeasureOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UnitOfMeasure, true
}

// SetUnitOfMeasure sets field value
func (o *QbdItemLine) SetUnitOfMeasure(v string) {
	o.UnitOfMeasure = v
}

// GetOverrideUnitOfMeasureSet returns the OverrideUnitOfMeasureSet field value
func (o *QbdItemLine) GetOverrideUnitOfMeasureSet() QbdItemLineOverrideUnitOfMeasureSet {
	if o == nil {
		var ret QbdItemLineOverrideUnitOfMeasureSet
		return ret
	}

	return o.OverrideUnitOfMeasureSet
}

// GetOverrideUnitOfMeasureSetOk returns a tuple with the OverrideUnitOfMeasureSet field value
// and a boolean to check if the value has been set.
func (o *QbdItemLine) GetOverrideUnitOfMeasureSetOk() (*QbdItemLineOverrideUnitOfMeasureSet, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OverrideUnitOfMeasureSet, true
}

// SetOverrideUnitOfMeasureSet sets field value
func (o *QbdItemLine) SetOverrideUnitOfMeasureSet(v QbdItemLineOverrideUnitOfMeasureSet) {
	o.OverrideUnitOfMeasureSet = v
}

// GetCost returns the Cost field value
func (o *QbdItemLine) GetCost() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Cost
}

// GetCostOk returns a tuple with the Cost field value
// and a boolean to check if the value has been set.
func (o *QbdItemLine) GetCostOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Cost, true
}

// SetCost sets field value
func (o *QbdItemLine) SetCost(v string) {
	o.Cost = v
}

// GetAmount returns the Amount field value
func (o *QbdItemLine) GetAmount() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Amount
}

// GetAmountOk returns a tuple with the Amount field value
// and a boolean to check if the value has been set.
func (o *QbdItemLine) GetAmountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Amount, true
}

// SetAmount sets field value
func (o *QbdItemLine) SetAmount(v string) {
	o.Amount = v
}

// GetCustomer returns the Customer field value
func (o *QbdItemLine) GetCustomer() QbdItemLineCustomer {
	if o == nil {
		var ret QbdItemLineCustomer
		return ret
	}

	return o.Customer
}

// GetCustomerOk returns a tuple with the Customer field value
// and a boolean to check if the value has been set.
func (o *QbdItemLine) GetCustomerOk() (*QbdItemLineCustomer, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Customer, true
}

// SetCustomer sets field value
func (o *QbdItemLine) SetCustomer(v QbdItemLineCustomer) {
	o.Customer = v
}

// GetClass returns the Class field value
func (o *QbdItemLine) GetClass() QbdItemLineClass {
	if o == nil {
		var ret QbdItemLineClass
		return ret
	}

	return o.Class
}

// GetClassOk returns a tuple with the Class field value
// and a boolean to check if the value has been set.
func (o *QbdItemLine) GetClassOk() (*QbdItemLineClass, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Class, true
}

// SetClass sets field value
func (o *QbdItemLine) SetClass(v QbdItemLineClass) {
	o.Class = v
}

// GetSalesTaxCode returns the SalesTaxCode field value
func (o *QbdItemLine) GetSalesTaxCode() QbdItemLineSalesTaxCode {
	if o == nil {
		var ret QbdItemLineSalesTaxCode
		return ret
	}

	return o.SalesTaxCode
}

// GetSalesTaxCodeOk returns a tuple with the SalesTaxCode field value
// and a boolean to check if the value has been set.
func (o *QbdItemLine) GetSalesTaxCodeOk() (*QbdItemLineSalesTaxCode, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SalesTaxCode, true
}

// SetSalesTaxCode sets field value
func (o *QbdItemLine) SetSalesTaxCode(v QbdItemLineSalesTaxCode) {
	o.SalesTaxCode = v
}

// GetBillingStatus returns the BillingStatus field value
func (o *QbdItemLine) GetBillingStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BillingStatus
}

// GetBillingStatusOk returns a tuple with the BillingStatus field value
// and a boolean to check if the value has been set.
func (o *QbdItemLine) GetBillingStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BillingStatus, true
}

// SetBillingStatus sets field value
func (o *QbdItemLine) SetBillingStatus(v string) {
	o.BillingStatus = v
}

// GetSalesRepresentative returns the SalesRepresentative field value
func (o *QbdItemLine) GetSalesRepresentative() QbdItemLineSalesRepresentative {
	if o == nil {
		var ret QbdItemLineSalesRepresentative
		return ret
	}

	return o.SalesRepresentative
}

// GetSalesRepresentativeOk returns a tuple with the SalesRepresentative field value
// and a boolean to check if the value has been set.
func (o *QbdItemLine) GetSalesRepresentativeOk() (*QbdItemLineSalesRepresentative, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SalesRepresentative, true
}

// SetSalesRepresentative sets field value
func (o *QbdItemLine) SetSalesRepresentative(v QbdItemLineSalesRepresentative) {
	o.SalesRepresentative = v
}

// GetCustomFields returns the CustomFields field value
func (o *QbdItemLine) GetCustomFields() []QbdCustomField {
	if o == nil {
		var ret []QbdCustomField
		return ret
	}

	return o.CustomFields
}

// GetCustomFieldsOk returns a tuple with the CustomFields field value
// and a boolean to check if the value has been set.
func (o *QbdItemLine) GetCustomFieldsOk() ([]QbdCustomField, bool) {
	if o == nil {
		return nil, false
	}
	return o.CustomFields, true
}

// SetCustomFields sets field value
func (o *QbdItemLine) SetCustomFields(v []QbdCustomField) {
	o.CustomFields = v
}

func (o QbdItemLine) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QbdItemLine) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["objectType"] = o.ObjectType
	toSerialize["item"] = o.Item
	toSerialize["inventorySite"] = o.InventorySite
	toSerialize["inventorySiteLocation"] = o.InventorySiteLocation
	toSerialize["serialNumber"] = o.SerialNumber
	toSerialize["lotNumber"] = o.LotNumber
	toSerialize["expirationDate"] = o.ExpirationDate
	toSerialize["description"] = o.Description
	toSerialize["quantity"] = o.Quantity
	toSerialize["unitOfMeasure"] = o.UnitOfMeasure
	toSerialize["overrideUnitOfMeasureSet"] = o.OverrideUnitOfMeasureSet
	toSerialize["cost"] = o.Cost
	toSerialize["amount"] = o.Amount
	toSerialize["customer"] = o.Customer
	toSerialize["class"] = o.Class
	toSerialize["salesTaxCode"] = o.SalesTaxCode
	toSerialize["billingStatus"] = o.BillingStatus
	toSerialize["salesRepresentative"] = o.SalesRepresentative
	toSerialize["customFields"] = o.CustomFields

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *QbdItemLine) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"objectType",
		"item",
		"inventorySite",
		"inventorySiteLocation",
		"serialNumber",
		"lotNumber",
		"expirationDate",
		"description",
		"quantity",
		"unitOfMeasure",
		"overrideUnitOfMeasureSet",
		"cost",
		"amount",
		"customer",
		"class",
		"salesTaxCode",
		"billingStatus",
		"salesRepresentative",
		"customFields",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varQbdItemLine := _QbdItemLine{}

	err = json.Unmarshal(data, &varQbdItemLine)

	if err != nil {
		return err
	}

	*o = QbdItemLine(varQbdItemLine)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "objectType")
		delete(additionalProperties, "item")
		delete(additionalProperties, "inventorySite")
		delete(additionalProperties, "inventorySiteLocation")
		delete(additionalProperties, "serialNumber")
		delete(additionalProperties, "lotNumber")
		delete(additionalProperties, "expirationDate")
		delete(additionalProperties, "description")
		delete(additionalProperties, "quantity")
		delete(additionalProperties, "unitOfMeasure")
		delete(additionalProperties, "overrideUnitOfMeasureSet")
		delete(additionalProperties, "cost")
		delete(additionalProperties, "amount")
		delete(additionalProperties, "customer")
		delete(additionalProperties, "class")
		delete(additionalProperties, "salesTaxCode")
		delete(additionalProperties, "billingStatus")
		delete(additionalProperties, "salesRepresentative")
		delete(additionalProperties, "customFields")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableQbdItemLine struct {
	value *QbdItemLine
	isSet bool
}

func (v NullableQbdItemLine) Get() *QbdItemLine {
	return v.value
}

func (v *NullableQbdItemLine) Set(val *QbdItemLine) {
	v.value = val
	v.isSet = true
}

func (v NullableQbdItemLine) IsSet() bool {
	return v.isSet
}

func (v *NullableQbdItemLine) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQbdItemLine(val *QbdItemLine) *NullableQbdItemLine {
	return &NullableQbdItemLine{value: val, isSet: true}
}

func (v NullableQbdItemLine) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQbdItemLine) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


