/*
Conductor API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package conductor

import (
	"encoding/json"
)

// checks if the QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionResponse{}

// QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionResponse The transaction response data for this credit card transaction when using QuickBooks Merchant Services (QBMS).
type QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionResponse struct {
	// The status code returned in the original QBMS transaction response for this credit card transaction.
	StatusCode *float32 `json:"statusCode,omitempty"`
	// The status message returned in the original QBMS transaction response for this credit card transaction.
	StatusMessage *string `json:"statusMessage,omitempty"`
	// The ID returned from the credit card processor for this credit card transaction.
	CreditCardTransactionId *string `json:"creditCardTransactionId,omitempty"`
	// The QBMS account number of the merchant who is running this transaction using the customer's credit card.
	MerchantAccountNumber *string `json:"merchantAccountNumber,omitempty"`
	// The authorization code returned from the credit card processor to indicate that this charge will be paid by the card issuer.
	AuthorizationCode *string `json:"authorizationCode,omitempty"`
	// Indicates whether the street address supplied in the transaction request matches the customer's address on file at the card issuer.
	AvsStreetStatus *string `json:"avsStreetStatus,omitempty"`
	// Indicates whether the customer postal ZIP code supplied in the transaction request matches the customer's postal code recognized at the card issuer.
	AvsZipStatus *string `json:"avsZipStatus,omitempty"`
	// Indicates whether the card security code supplied in the transaction request matches the card security code recognized for that credit card number at the card issuer.
	CardSecurityCodeMatch *string `json:"cardSecurityCodeMatch,omitempty"`
	// An internal ID returned by QuickBooks Merchant Services (QBMS) from the transaction request, needed for the QuickBooks reconciliation feature.
	ReconBatchId *string `json:"reconBatchId,omitempty"`
	// An internal code returned by QuickBooks Merchant Services (QBMS) from the transaction request, needed for the QuickBooks reconciliation feature.
	PaymentGroupingCode *float32 `json:"paymentGroupingCode,omitempty"`
	// Indicates whether this credit card transaction is known to have been successfully processed by the card issuer.
	PaymentStatus *string `json:"paymentStatus,omitempty"`
	// The date and time when the credit card processor authorized this credit card transaction.
	TransactionAuthorizedAt *string `json:"transactionAuthorizedAt,omitempty"`
	// An internal value for this credit card transaction, needed for the QuickBooks reconciliation feature.
	TransactionAuthorizationStamp *float32 `json:"transactionAuthorizationStamp,omitempty"`
	// A value returned from QBMS transactions for future use by the QuickBooks Reconciliation feature.
	ClientTransactionId *string `json:"clientTransactionId,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionResponse QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionResponse

// NewQuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionResponse instantiates a new QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionResponse() *QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionResponse {
	this := QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionResponse{}
	return &this
}

// NewQuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionResponseWithDefaults instantiates a new QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionResponseWithDefaults() *QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionResponse {
	this := QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionResponse{}
	return &this
}

// GetStatusCode returns the StatusCode field value if set, zero value otherwise.
func (o *QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionResponse) GetStatusCode() float32 {
	if o == nil || IsNil(o.StatusCode) {
		var ret float32
		return ret
	}
	return *o.StatusCode
}

// GetStatusCodeOk returns a tuple with the StatusCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionResponse) GetStatusCodeOk() (*float32, bool) {
	if o == nil || IsNil(o.StatusCode) {
		return nil, false
	}
	return o.StatusCode, true
}

// HasStatusCode returns a boolean if a field has been set.
func (o *QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionResponse) HasStatusCode() bool {
	if o != nil && !IsNil(o.StatusCode) {
		return true
	}

	return false
}

// SetStatusCode gets a reference to the given float32 and assigns it to the StatusCode field.
func (o *QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionResponse) SetStatusCode(v float32) {
	o.StatusCode = &v
}

// GetStatusMessage returns the StatusMessage field value if set, zero value otherwise.
func (o *QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionResponse) GetStatusMessage() string {
	if o == nil || IsNil(o.StatusMessage) {
		var ret string
		return ret
	}
	return *o.StatusMessage
}

// GetStatusMessageOk returns a tuple with the StatusMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionResponse) GetStatusMessageOk() (*string, bool) {
	if o == nil || IsNil(o.StatusMessage) {
		return nil, false
	}
	return o.StatusMessage, true
}

// HasStatusMessage returns a boolean if a field has been set.
func (o *QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionResponse) HasStatusMessage() bool {
	if o != nil && !IsNil(o.StatusMessage) {
		return true
	}

	return false
}

// SetStatusMessage gets a reference to the given string and assigns it to the StatusMessage field.
func (o *QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionResponse) SetStatusMessage(v string) {
	o.StatusMessage = &v
}

// GetCreditCardTransactionId returns the CreditCardTransactionId field value if set, zero value otherwise.
func (o *QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionResponse) GetCreditCardTransactionId() string {
	if o == nil || IsNil(o.CreditCardTransactionId) {
		var ret string
		return ret
	}
	return *o.CreditCardTransactionId
}

// GetCreditCardTransactionIdOk returns a tuple with the CreditCardTransactionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionResponse) GetCreditCardTransactionIdOk() (*string, bool) {
	if o == nil || IsNil(o.CreditCardTransactionId) {
		return nil, false
	}
	return o.CreditCardTransactionId, true
}

// HasCreditCardTransactionId returns a boolean if a field has been set.
func (o *QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionResponse) HasCreditCardTransactionId() bool {
	if o != nil && !IsNil(o.CreditCardTransactionId) {
		return true
	}

	return false
}

// SetCreditCardTransactionId gets a reference to the given string and assigns it to the CreditCardTransactionId field.
func (o *QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionResponse) SetCreditCardTransactionId(v string) {
	o.CreditCardTransactionId = &v
}

// GetMerchantAccountNumber returns the MerchantAccountNumber field value if set, zero value otherwise.
func (o *QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionResponse) GetMerchantAccountNumber() string {
	if o == nil || IsNil(o.MerchantAccountNumber) {
		var ret string
		return ret
	}
	return *o.MerchantAccountNumber
}

// GetMerchantAccountNumberOk returns a tuple with the MerchantAccountNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionResponse) GetMerchantAccountNumberOk() (*string, bool) {
	if o == nil || IsNil(o.MerchantAccountNumber) {
		return nil, false
	}
	return o.MerchantAccountNumber, true
}

// HasMerchantAccountNumber returns a boolean if a field has been set.
func (o *QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionResponse) HasMerchantAccountNumber() bool {
	if o != nil && !IsNil(o.MerchantAccountNumber) {
		return true
	}

	return false
}

// SetMerchantAccountNumber gets a reference to the given string and assigns it to the MerchantAccountNumber field.
func (o *QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionResponse) SetMerchantAccountNumber(v string) {
	o.MerchantAccountNumber = &v
}

// GetAuthorizationCode returns the AuthorizationCode field value if set, zero value otherwise.
func (o *QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionResponse) GetAuthorizationCode() string {
	if o == nil || IsNil(o.AuthorizationCode) {
		var ret string
		return ret
	}
	return *o.AuthorizationCode
}

// GetAuthorizationCodeOk returns a tuple with the AuthorizationCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionResponse) GetAuthorizationCodeOk() (*string, bool) {
	if o == nil || IsNil(o.AuthorizationCode) {
		return nil, false
	}
	return o.AuthorizationCode, true
}

// HasAuthorizationCode returns a boolean if a field has been set.
func (o *QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionResponse) HasAuthorizationCode() bool {
	if o != nil && !IsNil(o.AuthorizationCode) {
		return true
	}

	return false
}

// SetAuthorizationCode gets a reference to the given string and assigns it to the AuthorizationCode field.
func (o *QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionResponse) SetAuthorizationCode(v string) {
	o.AuthorizationCode = &v
}

// GetAvsStreetStatus returns the AvsStreetStatus field value if set, zero value otherwise.
func (o *QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionResponse) GetAvsStreetStatus() string {
	if o == nil || IsNil(o.AvsStreetStatus) {
		var ret string
		return ret
	}
	return *o.AvsStreetStatus
}

// GetAvsStreetStatusOk returns a tuple with the AvsStreetStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionResponse) GetAvsStreetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.AvsStreetStatus) {
		return nil, false
	}
	return o.AvsStreetStatus, true
}

// HasAvsStreetStatus returns a boolean if a field has been set.
func (o *QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionResponse) HasAvsStreetStatus() bool {
	if o != nil && !IsNil(o.AvsStreetStatus) {
		return true
	}

	return false
}

// SetAvsStreetStatus gets a reference to the given string and assigns it to the AvsStreetStatus field.
func (o *QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionResponse) SetAvsStreetStatus(v string) {
	o.AvsStreetStatus = &v
}

// GetAvsZipStatus returns the AvsZipStatus field value if set, zero value otherwise.
func (o *QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionResponse) GetAvsZipStatus() string {
	if o == nil || IsNil(o.AvsZipStatus) {
		var ret string
		return ret
	}
	return *o.AvsZipStatus
}

// GetAvsZipStatusOk returns a tuple with the AvsZipStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionResponse) GetAvsZipStatusOk() (*string, bool) {
	if o == nil || IsNil(o.AvsZipStatus) {
		return nil, false
	}
	return o.AvsZipStatus, true
}

// HasAvsZipStatus returns a boolean if a field has been set.
func (o *QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionResponse) HasAvsZipStatus() bool {
	if o != nil && !IsNil(o.AvsZipStatus) {
		return true
	}

	return false
}

// SetAvsZipStatus gets a reference to the given string and assigns it to the AvsZipStatus field.
func (o *QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionResponse) SetAvsZipStatus(v string) {
	o.AvsZipStatus = &v
}

// GetCardSecurityCodeMatch returns the CardSecurityCodeMatch field value if set, zero value otherwise.
func (o *QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionResponse) GetCardSecurityCodeMatch() string {
	if o == nil || IsNil(o.CardSecurityCodeMatch) {
		var ret string
		return ret
	}
	return *o.CardSecurityCodeMatch
}

// GetCardSecurityCodeMatchOk returns a tuple with the CardSecurityCodeMatch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionResponse) GetCardSecurityCodeMatchOk() (*string, bool) {
	if o == nil || IsNil(o.CardSecurityCodeMatch) {
		return nil, false
	}
	return o.CardSecurityCodeMatch, true
}

// HasCardSecurityCodeMatch returns a boolean if a field has been set.
func (o *QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionResponse) HasCardSecurityCodeMatch() bool {
	if o != nil && !IsNil(o.CardSecurityCodeMatch) {
		return true
	}

	return false
}

// SetCardSecurityCodeMatch gets a reference to the given string and assigns it to the CardSecurityCodeMatch field.
func (o *QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionResponse) SetCardSecurityCodeMatch(v string) {
	o.CardSecurityCodeMatch = &v
}

// GetReconBatchId returns the ReconBatchId field value if set, zero value otherwise.
func (o *QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionResponse) GetReconBatchId() string {
	if o == nil || IsNil(o.ReconBatchId) {
		var ret string
		return ret
	}
	return *o.ReconBatchId
}

// GetReconBatchIdOk returns a tuple with the ReconBatchId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionResponse) GetReconBatchIdOk() (*string, bool) {
	if o == nil || IsNil(o.ReconBatchId) {
		return nil, false
	}
	return o.ReconBatchId, true
}

// HasReconBatchId returns a boolean if a field has been set.
func (o *QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionResponse) HasReconBatchId() bool {
	if o != nil && !IsNil(o.ReconBatchId) {
		return true
	}

	return false
}

// SetReconBatchId gets a reference to the given string and assigns it to the ReconBatchId field.
func (o *QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionResponse) SetReconBatchId(v string) {
	o.ReconBatchId = &v
}

// GetPaymentGroupingCode returns the PaymentGroupingCode field value if set, zero value otherwise.
func (o *QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionResponse) GetPaymentGroupingCode() float32 {
	if o == nil || IsNil(o.PaymentGroupingCode) {
		var ret float32
		return ret
	}
	return *o.PaymentGroupingCode
}

// GetPaymentGroupingCodeOk returns a tuple with the PaymentGroupingCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionResponse) GetPaymentGroupingCodeOk() (*float32, bool) {
	if o == nil || IsNil(o.PaymentGroupingCode) {
		return nil, false
	}
	return o.PaymentGroupingCode, true
}

// HasPaymentGroupingCode returns a boolean if a field has been set.
func (o *QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionResponse) HasPaymentGroupingCode() bool {
	if o != nil && !IsNil(o.PaymentGroupingCode) {
		return true
	}

	return false
}

// SetPaymentGroupingCode gets a reference to the given float32 and assigns it to the PaymentGroupingCode field.
func (o *QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionResponse) SetPaymentGroupingCode(v float32) {
	o.PaymentGroupingCode = &v
}

// GetPaymentStatus returns the PaymentStatus field value if set, zero value otherwise.
func (o *QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionResponse) GetPaymentStatus() string {
	if o == nil || IsNil(o.PaymentStatus) {
		var ret string
		return ret
	}
	return *o.PaymentStatus
}

// GetPaymentStatusOk returns a tuple with the PaymentStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionResponse) GetPaymentStatusOk() (*string, bool) {
	if o == nil || IsNil(o.PaymentStatus) {
		return nil, false
	}
	return o.PaymentStatus, true
}

// HasPaymentStatus returns a boolean if a field has been set.
func (o *QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionResponse) HasPaymentStatus() bool {
	if o != nil && !IsNil(o.PaymentStatus) {
		return true
	}

	return false
}

// SetPaymentStatus gets a reference to the given string and assigns it to the PaymentStatus field.
func (o *QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionResponse) SetPaymentStatus(v string) {
	o.PaymentStatus = &v
}

// GetTransactionAuthorizedAt returns the TransactionAuthorizedAt field value if set, zero value otherwise.
func (o *QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionResponse) GetTransactionAuthorizedAt() string {
	if o == nil || IsNil(o.TransactionAuthorizedAt) {
		var ret string
		return ret
	}
	return *o.TransactionAuthorizedAt
}

// GetTransactionAuthorizedAtOk returns a tuple with the TransactionAuthorizedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionResponse) GetTransactionAuthorizedAtOk() (*string, bool) {
	if o == nil || IsNil(o.TransactionAuthorizedAt) {
		return nil, false
	}
	return o.TransactionAuthorizedAt, true
}

// HasTransactionAuthorizedAt returns a boolean if a field has been set.
func (o *QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionResponse) HasTransactionAuthorizedAt() bool {
	if o != nil && !IsNil(o.TransactionAuthorizedAt) {
		return true
	}

	return false
}

// SetTransactionAuthorizedAt gets a reference to the given string and assigns it to the TransactionAuthorizedAt field.
func (o *QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionResponse) SetTransactionAuthorizedAt(v string) {
	o.TransactionAuthorizedAt = &v
}

// GetTransactionAuthorizationStamp returns the TransactionAuthorizationStamp field value if set, zero value otherwise.
func (o *QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionResponse) GetTransactionAuthorizationStamp() float32 {
	if o == nil || IsNil(o.TransactionAuthorizationStamp) {
		var ret float32
		return ret
	}
	return *o.TransactionAuthorizationStamp
}

// GetTransactionAuthorizationStampOk returns a tuple with the TransactionAuthorizationStamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionResponse) GetTransactionAuthorizationStampOk() (*float32, bool) {
	if o == nil || IsNil(o.TransactionAuthorizationStamp) {
		return nil, false
	}
	return o.TransactionAuthorizationStamp, true
}

// HasTransactionAuthorizationStamp returns a boolean if a field has been set.
func (o *QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionResponse) HasTransactionAuthorizationStamp() bool {
	if o != nil && !IsNil(o.TransactionAuthorizationStamp) {
		return true
	}

	return false
}

// SetTransactionAuthorizationStamp gets a reference to the given float32 and assigns it to the TransactionAuthorizationStamp field.
func (o *QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionResponse) SetTransactionAuthorizationStamp(v float32) {
	o.TransactionAuthorizationStamp = &v
}

// GetClientTransactionId returns the ClientTransactionId field value if set, zero value otherwise.
func (o *QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionResponse) GetClientTransactionId() string {
	if o == nil || IsNil(o.ClientTransactionId) {
		var ret string
		return ret
	}
	return *o.ClientTransactionId
}

// GetClientTransactionIdOk returns a tuple with the ClientTransactionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionResponse) GetClientTransactionIdOk() (*string, bool) {
	if o == nil || IsNil(o.ClientTransactionId) {
		return nil, false
	}
	return o.ClientTransactionId, true
}

// HasClientTransactionId returns a boolean if a field has been set.
func (o *QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionResponse) HasClientTransactionId() bool {
	if o != nil && !IsNil(o.ClientTransactionId) {
		return true
	}

	return false
}

// SetClientTransactionId gets a reference to the given string and assigns it to the ClientTransactionId field.
func (o *QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionResponse) SetClientTransactionId(v string) {
	o.ClientTransactionId = &v
}

func (o QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.StatusCode) {
		toSerialize["statusCode"] = o.StatusCode
	}
	if !IsNil(o.StatusMessage) {
		toSerialize["statusMessage"] = o.StatusMessage
	}
	if !IsNil(o.CreditCardTransactionId) {
		toSerialize["creditCardTransactionId"] = o.CreditCardTransactionId
	}
	if !IsNil(o.MerchantAccountNumber) {
		toSerialize["merchantAccountNumber"] = o.MerchantAccountNumber
	}
	if !IsNil(o.AuthorizationCode) {
		toSerialize["authorizationCode"] = o.AuthorizationCode
	}
	if !IsNil(o.AvsStreetStatus) {
		toSerialize["avsStreetStatus"] = o.AvsStreetStatus
	}
	if !IsNil(o.AvsZipStatus) {
		toSerialize["avsZipStatus"] = o.AvsZipStatus
	}
	if !IsNil(o.CardSecurityCodeMatch) {
		toSerialize["cardSecurityCodeMatch"] = o.CardSecurityCodeMatch
	}
	if !IsNil(o.ReconBatchId) {
		toSerialize["reconBatchId"] = o.ReconBatchId
	}
	if !IsNil(o.PaymentGroupingCode) {
		toSerialize["paymentGroupingCode"] = o.PaymentGroupingCode
	}
	if !IsNil(o.PaymentStatus) {
		toSerialize["paymentStatus"] = o.PaymentStatus
	}
	if !IsNil(o.TransactionAuthorizedAt) {
		toSerialize["transactionAuthorizedAt"] = o.TransactionAuthorizedAt
	}
	if !IsNil(o.TransactionAuthorizationStamp) {
		toSerialize["transactionAuthorizationStamp"] = o.TransactionAuthorizationStamp
	}
	if !IsNil(o.ClientTransactionId) {
		toSerialize["clientTransactionId"] = o.ClientTransactionId
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionResponse) UnmarshalJSON(data []byte) (err error) {
	varQuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionResponse := _QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionResponse{}

	err = json.Unmarshal(data, &varQuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionResponse)

	if err != nil {
		return err
	}

	*o = QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionResponse(varQuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionResponse)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "statusCode")
		delete(additionalProperties, "statusMessage")
		delete(additionalProperties, "creditCardTransactionId")
		delete(additionalProperties, "merchantAccountNumber")
		delete(additionalProperties, "authorizationCode")
		delete(additionalProperties, "avsStreetStatus")
		delete(additionalProperties, "avsZipStatus")
		delete(additionalProperties, "cardSecurityCodeMatch")
		delete(additionalProperties, "reconBatchId")
		delete(additionalProperties, "paymentGroupingCode")
		delete(additionalProperties, "paymentStatus")
		delete(additionalProperties, "transactionAuthorizedAt")
		delete(additionalProperties, "transactionAuthorizationStamp")
		delete(additionalProperties, "clientTransactionId")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableQuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionResponse struct {
	value *QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionResponse
	isSet bool
}

func (v NullableQuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionResponse) Get() *QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionResponse {
	return v.value
}

func (v *NullableQuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionResponse) Set(val *QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableQuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableQuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionResponse(val *QuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionResponse) *NullableQuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionResponse {
	return &NullableQuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionResponse{value: val, isSet: true}
}

func (v NullableQuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQuickbooksDesktopReceivePaymentsIdPostRequestCreditCardTransactionResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


