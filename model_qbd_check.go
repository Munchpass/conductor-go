/*
Conductor API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package conductor

import (
	"encoding/json"
	"fmt"
)

// checks if the QbdCheck type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QbdCheck{}

// QbdCheck struct for QbdCheck
type QbdCheck struct {
	// The unique identifier assigned by QuickBooks to this check. This ID is unique across all transaction types.
	Id string `json:"id"`
	// The type of object. This value is always `\"qbd_check\"`.
	ObjectType string `json:"objectType"`
	// The date and time when this check was created, in ISO 8601 format (YYYY-MM-DDThh:mm:ss±hh:mm). The time zone is the same as the user's time zone in QuickBooks.
	CreatedAt string `json:"createdAt"`
	// The date and time when this check was last updated, in ISO 8601 format (YYYY-MM-DDThh:mm:ss±hh:mm). The time zone is the same as the user's time zone in QuickBooks.
	UpdatedAt string `json:"updatedAt"`
	// The current QuickBooks-assigned revision number of this check object, which changes each time the object is modified. When updating this object, you must provide the most recent `revisionNumber` to ensure you're working with the latest data; otherwise, the update will return an error.
	RevisionNumber string `json:"revisionNumber"`
	BankAccount QbdCheckBankAccount `json:"bankAccount"`
	Payee QbdCheckPayee `json:"payee"`
	// The case-sensitive user-defined reference number for this check, which can be used to identify the transaction in QuickBooks. This value is not required to be unique and can be arbitrarily changed by the QuickBooks user.  **IMPORTANT**: For checks, this field is the check number.
	RefNumber string `json:"refNumber"`
	// The date written on this check, in ISO 8601 format (YYYY-MM-DD).
	TransactionDate string `json:"transactionDate"`
	// The total monetary amount of this check, represented as a decimal string. This equals the sum of the amounts in the check's expense lines, item lines, and item group lines.
	Amount string `json:"amount"`
	Currency QbdCheckCurrency `json:"currency"`
	// The market exchange rate between this check's currency and the home currency in QuickBooks at the time of this transaction. Represented as a decimal value (e.g., 1.2345 for 1 EUR = 1.2345 USD if USD is the home currency).
	ExchangeRate float32 `json:"exchangeRate"`
	// The monetary amount of this check converted to the home currency of the QuickBooks company file. Represented as a decimal string.
	AmountInHomeCurrency string `json:"amountInHomeCurrency"`
	// The memo that is printed on this check.
	Memo string `json:"memo"`
	Address QbdCheckAddress `json:"address"`
	// Indicates whether this check has not been completed.
	IsPending bool `json:"isPending"`
	// Indicates whether this check is included in the queue of documents for QuickBooks to print.
	IsQueuedForPrint bool `json:"isQueuedForPrint"`
	SalesTaxCode QbdCheckSalesTaxCode `json:"salesTaxCode"`
	// A globally unique identifier (GUID) you, the developer, can provide for tracking this object in your external system. This field is immutable and can only be set during object creation.
	ExternalId string `json:"externalId"`
	// The check's linked transactions, such as payments applied, credits used, or associated purchase orders.  **IMPORTANT**: You must specify the parameter `includeLinkedTransactions` when fetching a list of checks to receive this field because it is not returned by default.
	LinkedTransactions []QbdLinkedTransaction `json:"linkedTransactions"`
	// The check's expense lines, each representing one line in this expense.
	ExpenseLines []QbdExpenseLine `json:"expenseLines"`
	// The check's item lines, each representing the purchase of a specific item or service.
	ItemLines []QbdItemLine `json:"itemLines"`
	// The check's item group lines, each representing a predefined set of items bundled together because they are commonly purchased together or grouped for faster entry.
	ItemLineGroups []QbdItemLineGroup `json:"itemLineGroups"`
	// The custom fields for the check object, added as user-defined data extensions, not included in the standard QuickBooks object.
	CustomFields []QbdCustomField `json:"customFields"`
	AdditionalProperties map[string]interface{}
}

type _QbdCheck QbdCheck

// NewQbdCheck instantiates a new QbdCheck object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQbdCheck(id string, objectType string, createdAt string, updatedAt string, revisionNumber string, bankAccount QbdCheckBankAccount, payee QbdCheckPayee, refNumber string, transactionDate string, amount string, currency QbdCheckCurrency, exchangeRate float32, amountInHomeCurrency string, memo string, address QbdCheckAddress, isPending bool, isQueuedForPrint bool, salesTaxCode QbdCheckSalesTaxCode, externalId string, linkedTransactions []QbdLinkedTransaction, expenseLines []QbdExpenseLine, itemLines []QbdItemLine, itemLineGroups []QbdItemLineGroup, customFields []QbdCustomField) *QbdCheck {
	this := QbdCheck{}
	this.Id = id
	this.ObjectType = objectType
	this.CreatedAt = createdAt
	this.UpdatedAt = updatedAt
	this.RevisionNumber = revisionNumber
	this.BankAccount = bankAccount
	this.Payee = payee
	this.RefNumber = refNumber
	this.TransactionDate = transactionDate
	this.Amount = amount
	this.Currency = currency
	this.ExchangeRate = exchangeRate
	this.AmountInHomeCurrency = amountInHomeCurrency
	this.Memo = memo
	this.Address = address
	this.IsPending = isPending
	this.IsQueuedForPrint = isQueuedForPrint
	this.SalesTaxCode = salesTaxCode
	this.ExternalId = externalId
	this.LinkedTransactions = linkedTransactions
	this.ExpenseLines = expenseLines
	this.ItemLines = itemLines
	this.ItemLineGroups = itemLineGroups
	this.CustomFields = customFields
	return &this
}

// NewQbdCheckWithDefaults instantiates a new QbdCheck object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQbdCheckWithDefaults() *QbdCheck {
	this := QbdCheck{}
	return &this
}

// GetId returns the Id field value
func (o *QbdCheck) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *QbdCheck) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *QbdCheck) SetId(v string) {
	o.Id = v
}

// GetObjectType returns the ObjectType field value
func (o *QbdCheck) GetObjectType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ObjectType
}

// GetObjectTypeOk returns a tuple with the ObjectType field value
// and a boolean to check if the value has been set.
func (o *QbdCheck) GetObjectTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ObjectType, true
}

// SetObjectType sets field value
func (o *QbdCheck) SetObjectType(v string) {
	o.ObjectType = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *QbdCheck) GetCreatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *QbdCheck) GetCreatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *QbdCheck) SetCreatedAt(v string) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *QbdCheck) GetUpdatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *QbdCheck) GetUpdatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *QbdCheck) SetUpdatedAt(v string) {
	o.UpdatedAt = v
}

// GetRevisionNumber returns the RevisionNumber field value
func (o *QbdCheck) GetRevisionNumber() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RevisionNumber
}

// GetRevisionNumberOk returns a tuple with the RevisionNumber field value
// and a boolean to check if the value has been set.
func (o *QbdCheck) GetRevisionNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RevisionNumber, true
}

// SetRevisionNumber sets field value
func (o *QbdCheck) SetRevisionNumber(v string) {
	o.RevisionNumber = v
}

// GetBankAccount returns the BankAccount field value
func (o *QbdCheck) GetBankAccount() QbdCheckBankAccount {
	if o == nil {
		var ret QbdCheckBankAccount
		return ret
	}

	return o.BankAccount
}

// GetBankAccountOk returns a tuple with the BankAccount field value
// and a boolean to check if the value has been set.
func (o *QbdCheck) GetBankAccountOk() (*QbdCheckBankAccount, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BankAccount, true
}

// SetBankAccount sets field value
func (o *QbdCheck) SetBankAccount(v QbdCheckBankAccount) {
	o.BankAccount = v
}

// GetPayee returns the Payee field value
func (o *QbdCheck) GetPayee() QbdCheckPayee {
	if o == nil {
		var ret QbdCheckPayee
		return ret
	}

	return o.Payee
}

// GetPayeeOk returns a tuple with the Payee field value
// and a boolean to check if the value has been set.
func (o *QbdCheck) GetPayeeOk() (*QbdCheckPayee, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Payee, true
}

// SetPayee sets field value
func (o *QbdCheck) SetPayee(v QbdCheckPayee) {
	o.Payee = v
}

// GetRefNumber returns the RefNumber field value
func (o *QbdCheck) GetRefNumber() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RefNumber
}

// GetRefNumberOk returns a tuple with the RefNumber field value
// and a boolean to check if the value has been set.
func (o *QbdCheck) GetRefNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RefNumber, true
}

// SetRefNumber sets field value
func (o *QbdCheck) SetRefNumber(v string) {
	o.RefNumber = v
}

// GetTransactionDate returns the TransactionDate field value
func (o *QbdCheck) GetTransactionDate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TransactionDate
}

// GetTransactionDateOk returns a tuple with the TransactionDate field value
// and a boolean to check if the value has been set.
func (o *QbdCheck) GetTransactionDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TransactionDate, true
}

// SetTransactionDate sets field value
func (o *QbdCheck) SetTransactionDate(v string) {
	o.TransactionDate = v
}

// GetAmount returns the Amount field value
func (o *QbdCheck) GetAmount() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Amount
}

// GetAmountOk returns a tuple with the Amount field value
// and a boolean to check if the value has been set.
func (o *QbdCheck) GetAmountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Amount, true
}

// SetAmount sets field value
func (o *QbdCheck) SetAmount(v string) {
	o.Amount = v
}

// GetCurrency returns the Currency field value
func (o *QbdCheck) GetCurrency() QbdCheckCurrency {
	if o == nil {
		var ret QbdCheckCurrency
		return ret
	}

	return o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value
// and a boolean to check if the value has been set.
func (o *QbdCheck) GetCurrencyOk() (*QbdCheckCurrency, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Currency, true
}

// SetCurrency sets field value
func (o *QbdCheck) SetCurrency(v QbdCheckCurrency) {
	o.Currency = v
}

// GetExchangeRate returns the ExchangeRate field value
func (o *QbdCheck) GetExchangeRate() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.ExchangeRate
}

// GetExchangeRateOk returns a tuple with the ExchangeRate field value
// and a boolean to check if the value has been set.
func (o *QbdCheck) GetExchangeRateOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExchangeRate, true
}

// SetExchangeRate sets field value
func (o *QbdCheck) SetExchangeRate(v float32) {
	o.ExchangeRate = v
}

// GetAmountInHomeCurrency returns the AmountInHomeCurrency field value
func (o *QbdCheck) GetAmountInHomeCurrency() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AmountInHomeCurrency
}

// GetAmountInHomeCurrencyOk returns a tuple with the AmountInHomeCurrency field value
// and a boolean to check if the value has been set.
func (o *QbdCheck) GetAmountInHomeCurrencyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AmountInHomeCurrency, true
}

// SetAmountInHomeCurrency sets field value
func (o *QbdCheck) SetAmountInHomeCurrency(v string) {
	o.AmountInHomeCurrency = v
}

// GetMemo returns the Memo field value
func (o *QbdCheck) GetMemo() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Memo
}

// GetMemoOk returns a tuple with the Memo field value
// and a boolean to check if the value has been set.
func (o *QbdCheck) GetMemoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Memo, true
}

// SetMemo sets field value
func (o *QbdCheck) SetMemo(v string) {
	o.Memo = v
}

// GetAddress returns the Address field value
func (o *QbdCheck) GetAddress() QbdCheckAddress {
	if o == nil {
		var ret QbdCheckAddress
		return ret
	}

	return o.Address
}

// GetAddressOk returns a tuple with the Address field value
// and a boolean to check if the value has been set.
func (o *QbdCheck) GetAddressOk() (*QbdCheckAddress, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Address, true
}

// SetAddress sets field value
func (o *QbdCheck) SetAddress(v QbdCheckAddress) {
	o.Address = v
}

// GetIsPending returns the IsPending field value
func (o *QbdCheck) GetIsPending() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsPending
}

// GetIsPendingOk returns a tuple with the IsPending field value
// and a boolean to check if the value has been set.
func (o *QbdCheck) GetIsPendingOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsPending, true
}

// SetIsPending sets field value
func (o *QbdCheck) SetIsPending(v bool) {
	o.IsPending = v
}

// GetIsQueuedForPrint returns the IsQueuedForPrint field value
func (o *QbdCheck) GetIsQueuedForPrint() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsQueuedForPrint
}

// GetIsQueuedForPrintOk returns a tuple with the IsQueuedForPrint field value
// and a boolean to check if the value has been set.
func (o *QbdCheck) GetIsQueuedForPrintOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsQueuedForPrint, true
}

// SetIsQueuedForPrint sets field value
func (o *QbdCheck) SetIsQueuedForPrint(v bool) {
	o.IsQueuedForPrint = v
}

// GetSalesTaxCode returns the SalesTaxCode field value
func (o *QbdCheck) GetSalesTaxCode() QbdCheckSalesTaxCode {
	if o == nil {
		var ret QbdCheckSalesTaxCode
		return ret
	}

	return o.SalesTaxCode
}

// GetSalesTaxCodeOk returns a tuple with the SalesTaxCode field value
// and a boolean to check if the value has been set.
func (o *QbdCheck) GetSalesTaxCodeOk() (*QbdCheckSalesTaxCode, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SalesTaxCode, true
}

// SetSalesTaxCode sets field value
func (o *QbdCheck) SetSalesTaxCode(v QbdCheckSalesTaxCode) {
	o.SalesTaxCode = v
}

// GetExternalId returns the ExternalId field value
func (o *QbdCheck) GetExternalId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ExternalId
}

// GetExternalIdOk returns a tuple with the ExternalId field value
// and a boolean to check if the value has been set.
func (o *QbdCheck) GetExternalIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExternalId, true
}

// SetExternalId sets field value
func (o *QbdCheck) SetExternalId(v string) {
	o.ExternalId = v
}

// GetLinkedTransactions returns the LinkedTransactions field value
func (o *QbdCheck) GetLinkedTransactions() []QbdLinkedTransaction {
	if o == nil {
		var ret []QbdLinkedTransaction
		return ret
	}

	return o.LinkedTransactions
}

// GetLinkedTransactionsOk returns a tuple with the LinkedTransactions field value
// and a boolean to check if the value has been set.
func (o *QbdCheck) GetLinkedTransactionsOk() ([]QbdLinkedTransaction, bool) {
	if o == nil {
		return nil, false
	}
	return o.LinkedTransactions, true
}

// SetLinkedTransactions sets field value
func (o *QbdCheck) SetLinkedTransactions(v []QbdLinkedTransaction) {
	o.LinkedTransactions = v
}

// GetExpenseLines returns the ExpenseLines field value
func (o *QbdCheck) GetExpenseLines() []QbdExpenseLine {
	if o == nil {
		var ret []QbdExpenseLine
		return ret
	}

	return o.ExpenseLines
}

// GetExpenseLinesOk returns a tuple with the ExpenseLines field value
// and a boolean to check if the value has been set.
func (o *QbdCheck) GetExpenseLinesOk() ([]QbdExpenseLine, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExpenseLines, true
}

// SetExpenseLines sets field value
func (o *QbdCheck) SetExpenseLines(v []QbdExpenseLine) {
	o.ExpenseLines = v
}

// GetItemLines returns the ItemLines field value
func (o *QbdCheck) GetItemLines() []QbdItemLine {
	if o == nil {
		var ret []QbdItemLine
		return ret
	}

	return o.ItemLines
}

// GetItemLinesOk returns a tuple with the ItemLines field value
// and a boolean to check if the value has been set.
func (o *QbdCheck) GetItemLinesOk() ([]QbdItemLine, bool) {
	if o == nil {
		return nil, false
	}
	return o.ItemLines, true
}

// SetItemLines sets field value
func (o *QbdCheck) SetItemLines(v []QbdItemLine) {
	o.ItemLines = v
}

// GetItemLineGroups returns the ItemLineGroups field value
func (o *QbdCheck) GetItemLineGroups() []QbdItemLineGroup {
	if o == nil {
		var ret []QbdItemLineGroup
		return ret
	}

	return o.ItemLineGroups
}

// GetItemLineGroupsOk returns a tuple with the ItemLineGroups field value
// and a boolean to check if the value has been set.
func (o *QbdCheck) GetItemLineGroupsOk() ([]QbdItemLineGroup, bool) {
	if o == nil {
		return nil, false
	}
	return o.ItemLineGroups, true
}

// SetItemLineGroups sets field value
func (o *QbdCheck) SetItemLineGroups(v []QbdItemLineGroup) {
	o.ItemLineGroups = v
}

// GetCustomFields returns the CustomFields field value
func (o *QbdCheck) GetCustomFields() []QbdCustomField {
	if o == nil {
		var ret []QbdCustomField
		return ret
	}

	return o.CustomFields
}

// GetCustomFieldsOk returns a tuple with the CustomFields field value
// and a boolean to check if the value has been set.
func (o *QbdCheck) GetCustomFieldsOk() ([]QbdCustomField, bool) {
	if o == nil {
		return nil, false
	}
	return o.CustomFields, true
}

// SetCustomFields sets field value
func (o *QbdCheck) SetCustomFields(v []QbdCustomField) {
	o.CustomFields = v
}

func (o QbdCheck) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QbdCheck) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["objectType"] = o.ObjectType
	toSerialize["createdAt"] = o.CreatedAt
	toSerialize["updatedAt"] = o.UpdatedAt
	toSerialize["revisionNumber"] = o.RevisionNumber
	toSerialize["bankAccount"] = o.BankAccount
	toSerialize["payee"] = o.Payee
	toSerialize["refNumber"] = o.RefNumber
	toSerialize["transactionDate"] = o.TransactionDate
	toSerialize["amount"] = o.Amount
	toSerialize["currency"] = o.Currency
	toSerialize["exchangeRate"] = o.ExchangeRate
	toSerialize["amountInHomeCurrency"] = o.AmountInHomeCurrency
	toSerialize["memo"] = o.Memo
	toSerialize["address"] = o.Address
	toSerialize["isPending"] = o.IsPending
	toSerialize["isQueuedForPrint"] = o.IsQueuedForPrint
	toSerialize["salesTaxCode"] = o.SalesTaxCode
	toSerialize["externalId"] = o.ExternalId
	toSerialize["linkedTransactions"] = o.LinkedTransactions
	toSerialize["expenseLines"] = o.ExpenseLines
	toSerialize["itemLines"] = o.ItemLines
	toSerialize["itemLineGroups"] = o.ItemLineGroups
	toSerialize["customFields"] = o.CustomFields

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *QbdCheck) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"objectType",
		"createdAt",
		"updatedAt",
		"revisionNumber",
		"bankAccount",
		"payee",
		"refNumber",
		"transactionDate",
		"amount",
		"currency",
		"exchangeRate",
		"amountInHomeCurrency",
		"memo",
		"address",
		"isPending",
		"isQueuedForPrint",
		"salesTaxCode",
		"externalId",
		"linkedTransactions",
		"expenseLines",
		"itemLines",
		"itemLineGroups",
		"customFields",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varQbdCheck := _QbdCheck{}

	err = json.Unmarshal(data, &varQbdCheck)

	if err != nil {
		return err
	}

	*o = QbdCheck(varQbdCheck)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "objectType")
		delete(additionalProperties, "createdAt")
		delete(additionalProperties, "updatedAt")
		delete(additionalProperties, "revisionNumber")
		delete(additionalProperties, "bankAccount")
		delete(additionalProperties, "payee")
		delete(additionalProperties, "refNumber")
		delete(additionalProperties, "transactionDate")
		delete(additionalProperties, "amount")
		delete(additionalProperties, "currency")
		delete(additionalProperties, "exchangeRate")
		delete(additionalProperties, "amountInHomeCurrency")
		delete(additionalProperties, "memo")
		delete(additionalProperties, "address")
		delete(additionalProperties, "isPending")
		delete(additionalProperties, "isQueuedForPrint")
		delete(additionalProperties, "salesTaxCode")
		delete(additionalProperties, "externalId")
		delete(additionalProperties, "linkedTransactions")
		delete(additionalProperties, "expenseLines")
		delete(additionalProperties, "itemLines")
		delete(additionalProperties, "itemLineGroups")
		delete(additionalProperties, "customFields")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableQbdCheck struct {
	value *QbdCheck
	isSet bool
}

func (v NullableQbdCheck) Get() *QbdCheck {
	return v.value
}

func (v *NullableQbdCheck) Set(val *QbdCheck) {
	v.value = val
	v.isSet = true
}

func (v NullableQbdCheck) IsSet() bool {
	return v.isSet
}

func (v *NullableQbdCheck) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQbdCheck(val *QbdCheck) *NullableQbdCheck {
	return &NullableQbdCheck{value: val, isSet: true}
}

func (v NullableQbdCheck) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQbdCheck) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


