/*
Conductor API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package conductor

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the QbdVacationHours type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QbdVacationHours{}

// QbdVacationHours struct for QbdVacationHours
type QbdVacationHours struct {
	// The total number of vacation hours currently available for the employee to use, in ISO 8601 format for time intervals (PTnHnMnS). For example, 1 hour and 30 minutes is represented as PT1H30M. Defaults to 0.
	HoursAvailable NullableString `json:"hoursAvailable"`
	// How frequently the employee's vacation hours are accrued.
	AccrualPeriod NullableString `json:"accrualPeriod"`
	// The number of vacation hours the employee will accrue per accrual period, in ISO 8601 format for time intervals (PTnHnMnS). For example, 1 hour and 30 minutes is represented as PT1H30M.
	HoursAccruedPerPeriod NullableString `json:"hoursAccruedPerPeriod"`
	// The maximum number of vacation hours the employee can accrue, in ISO 8601 format for time intervals (PTnHnMnS). For example, 1 hour and 30 minutes is represented as PT1H30M.
	MaximumHours NullableString `json:"maximumHours"`
	// Indicates whether the employee's vacation hours reset to zero at the beginning of the new year.
	ResetsHoursEachYear NullableBool `json:"resetsHoursEachYear"`
	// The number of vacation hours the employee has used, in ISO 8601 format for time intervals (PTnHnMnS). For example, 1 hour and 30 minutes is represented as PT1H30M.
	HoursUsed NullableString `json:"hoursUsed"`
	// The date the employee's vacation hours began to accrue, in ISO 8601 format (YYYY-MM-DD).
	AccrualStartDate NullableString `json:"accrualStartDate"`
}

type _QbdVacationHours QbdVacationHours

// NewQbdVacationHours instantiates a new QbdVacationHours object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQbdVacationHours(hoursAvailable NullableString, accrualPeriod NullableString, hoursAccruedPerPeriod NullableString, maximumHours NullableString, resetsHoursEachYear NullableBool, hoursUsed NullableString, accrualStartDate NullableString) *QbdVacationHours {
	this := QbdVacationHours{}
	this.HoursAvailable = hoursAvailable
	this.AccrualPeriod = accrualPeriod
	this.HoursAccruedPerPeriod = hoursAccruedPerPeriod
	this.MaximumHours = maximumHours
	this.ResetsHoursEachYear = resetsHoursEachYear
	this.HoursUsed = hoursUsed
	this.AccrualStartDate = accrualStartDate
	return &this
}

// NewQbdVacationHoursWithDefaults instantiates a new QbdVacationHours object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQbdVacationHoursWithDefaults() *QbdVacationHours {
	this := QbdVacationHours{}
	return &this
}

// GetHoursAvailable returns the HoursAvailable field value
// If the value is explicit nil, the zero value for string will be returned
func (o *QbdVacationHours) GetHoursAvailable() string {
	if o == nil || o.HoursAvailable.Get() == nil {
		var ret string
		return ret
	}

	return *o.HoursAvailable.Get()
}

// GetHoursAvailableOk returns a tuple with the HoursAvailable field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QbdVacationHours) GetHoursAvailableOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.HoursAvailable.Get(), o.HoursAvailable.IsSet()
}

// SetHoursAvailable sets field value
func (o *QbdVacationHours) SetHoursAvailable(v string) {
	o.HoursAvailable.Set(&v)
}

// GetAccrualPeriod returns the AccrualPeriod field value
// If the value is explicit nil, the zero value for string will be returned
func (o *QbdVacationHours) GetAccrualPeriod() string {
	if o == nil || o.AccrualPeriod.Get() == nil {
		var ret string
		return ret
	}

	return *o.AccrualPeriod.Get()
}

// GetAccrualPeriodOk returns a tuple with the AccrualPeriod field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QbdVacationHours) GetAccrualPeriodOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AccrualPeriod.Get(), o.AccrualPeriod.IsSet()
}

// SetAccrualPeriod sets field value
func (o *QbdVacationHours) SetAccrualPeriod(v string) {
	o.AccrualPeriod.Set(&v)
}

// GetHoursAccruedPerPeriod returns the HoursAccruedPerPeriod field value
// If the value is explicit nil, the zero value for string will be returned
func (o *QbdVacationHours) GetHoursAccruedPerPeriod() string {
	if o == nil || o.HoursAccruedPerPeriod.Get() == nil {
		var ret string
		return ret
	}

	return *o.HoursAccruedPerPeriod.Get()
}

// GetHoursAccruedPerPeriodOk returns a tuple with the HoursAccruedPerPeriod field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QbdVacationHours) GetHoursAccruedPerPeriodOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.HoursAccruedPerPeriod.Get(), o.HoursAccruedPerPeriod.IsSet()
}

// SetHoursAccruedPerPeriod sets field value
func (o *QbdVacationHours) SetHoursAccruedPerPeriod(v string) {
	o.HoursAccruedPerPeriod.Set(&v)
}

// GetMaximumHours returns the MaximumHours field value
// If the value is explicit nil, the zero value for string will be returned
func (o *QbdVacationHours) GetMaximumHours() string {
	if o == nil || o.MaximumHours.Get() == nil {
		var ret string
		return ret
	}

	return *o.MaximumHours.Get()
}

// GetMaximumHoursOk returns a tuple with the MaximumHours field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QbdVacationHours) GetMaximumHoursOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MaximumHours.Get(), o.MaximumHours.IsSet()
}

// SetMaximumHours sets field value
func (o *QbdVacationHours) SetMaximumHours(v string) {
	o.MaximumHours.Set(&v)
}

// GetResetsHoursEachYear returns the ResetsHoursEachYear field value
// If the value is explicit nil, the zero value for bool will be returned
func (o *QbdVacationHours) GetResetsHoursEachYear() bool {
	if o == nil || o.ResetsHoursEachYear.Get() == nil {
		var ret bool
		return ret
	}

	return *o.ResetsHoursEachYear.Get()
}

// GetResetsHoursEachYearOk returns a tuple with the ResetsHoursEachYear field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QbdVacationHours) GetResetsHoursEachYearOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.ResetsHoursEachYear.Get(), o.ResetsHoursEachYear.IsSet()
}

// SetResetsHoursEachYear sets field value
func (o *QbdVacationHours) SetResetsHoursEachYear(v bool) {
	o.ResetsHoursEachYear.Set(&v)
}

// GetHoursUsed returns the HoursUsed field value
// If the value is explicit nil, the zero value for string will be returned
func (o *QbdVacationHours) GetHoursUsed() string {
	if o == nil || o.HoursUsed.Get() == nil {
		var ret string
		return ret
	}

	return *o.HoursUsed.Get()
}

// GetHoursUsedOk returns a tuple with the HoursUsed field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QbdVacationHours) GetHoursUsedOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.HoursUsed.Get(), o.HoursUsed.IsSet()
}

// SetHoursUsed sets field value
func (o *QbdVacationHours) SetHoursUsed(v string) {
	o.HoursUsed.Set(&v)
}

// GetAccrualStartDate returns the AccrualStartDate field value
// If the value is explicit nil, the zero value for string will be returned
func (o *QbdVacationHours) GetAccrualStartDate() string {
	if o == nil || o.AccrualStartDate.Get() == nil {
		var ret string
		return ret
	}

	return *o.AccrualStartDate.Get()
}

// GetAccrualStartDateOk returns a tuple with the AccrualStartDate field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QbdVacationHours) GetAccrualStartDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AccrualStartDate.Get(), o.AccrualStartDate.IsSet()
}

// SetAccrualStartDate sets field value
func (o *QbdVacationHours) SetAccrualStartDate(v string) {
	o.AccrualStartDate.Set(&v)
}

func (o QbdVacationHours) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QbdVacationHours) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["hoursAvailable"] = o.HoursAvailable.Get()
	toSerialize["accrualPeriod"] = o.AccrualPeriod.Get()
	toSerialize["hoursAccruedPerPeriod"] = o.HoursAccruedPerPeriod.Get()
	toSerialize["maximumHours"] = o.MaximumHours.Get()
	toSerialize["resetsHoursEachYear"] = o.ResetsHoursEachYear.Get()
	toSerialize["hoursUsed"] = o.HoursUsed.Get()
	toSerialize["accrualStartDate"] = o.AccrualStartDate.Get()
	return toSerialize, nil
}

func (o *QbdVacationHours) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"hoursAvailable",
		"accrualPeriod",
		"hoursAccruedPerPeriod",
		"maximumHours",
		"resetsHoursEachYear",
		"hoursUsed",
		"accrualStartDate",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varQbdVacationHours := _QbdVacationHours{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varQbdVacationHours)

	if err != nil {
		return err
	}

	*o = QbdVacationHours(varQbdVacationHours)

	return err
}

type NullableQbdVacationHours struct {
	value *QbdVacationHours
	isSet bool
}

func (v NullableQbdVacationHours) Get() *QbdVacationHours {
	return v.value
}

func (v *NullableQbdVacationHours) Set(val *QbdVacationHours) {
	v.value = val
	v.isSet = true
}

func (v NullableQbdVacationHours) IsSet() bool {
	return v.isSet
}

func (v *NullableQbdVacationHours) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQbdVacationHours(val *QbdVacationHours) *NullableQbdVacationHours {
	return &NullableQbdVacationHours{value: val, isSet: true}
}

func (v NullableQbdVacationHours) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQbdVacationHours) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


