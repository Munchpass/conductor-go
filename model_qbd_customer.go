/*
Conductor API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package conductor

import (
	"encoding/json"
	"fmt"
)

// checks if the QbdCustomer type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QbdCustomer{}

// QbdCustomer struct for QbdCustomer
type QbdCustomer struct {
	// The unique identifier assigned by QuickBooks to this customer. This ID is unique across all customers but not across different QuickBooks object types.
	Id string `json:"id"`
	// The type of object. This value is always `\"qbd_customer\"`.
	ObjectType string `json:"objectType"`
	// The date and time when this customer was created, in ISO 8601 format (YYYY-MM-DDThh:mm:ss±hh:mm). The time zone is the same as the user's time zone in QuickBooks.
	CreatedAt string `json:"createdAt"`
	// The date and time when this customer was last updated, in ISO 8601 format (YYYY-MM-DDThh:mm:ss±hh:mm). The time zone is the same as the user's time zone in QuickBooks.
	UpdatedAt string `json:"updatedAt"`
	// The current QuickBooks-assigned revision number of this customer object, which changes each time the object is modified. When updating this object, you must provide the most recent `revisionNumber` to ensure you're working with the latest data; otherwise, the update will return an error.
	RevisionNumber string `json:"revisionNumber"`
	// The case-insensitive name of this customer. Not guaranteed to be unique because it does not include the names of its hierarchical parent objects like `fullName` does. For example, two customers could both have the `name` \"Website Redesign Project\", but they could have unique `fullName` values, such as \"ABC Corporation:Website Redesign Project\" and \"Baker:Website Redesign Project\".
	Name string `json:"name"`
	// The case-insensitive fully-qualified unique name of this customer, formed by combining the names of its hierarchical parent objects with its own `name`, separated by colons. For example, if a customer is under \"ABC Corporation\" and has the `name` \"Website Redesign Project\", its `fullName` would be \"ABC Corporation:Website Redesign Project\".  **NOTE**: Unlike `name`, `fullName` is guaranteed to be unique across all customer objects. However, `fullName` can still be arbitrarily changed by the QuickBooks user when they modify the underlying `name` field.  **IMPORTANT**: If this object is a job (i.e., a sub-customer), this value would likely be the job's `name` prefixed by the customer's `name`.
	FullName string `json:"fullName"`
	// Indicates whether this customer is active. Inactive objects are typically hidden from views and reports in QuickBooks. Defaults to `true`.
	IsActive bool `json:"isActive"`
	Class *QbdCustomerClass `json:"class,omitempty"`
	Parent *QbdCustomerParent `json:"parent,omitempty"`
	// The depth level of this customer in the hierarchy. A top-level customer has a `sublevel` of 0; each subsequent sublevel increases this number by 1. For example, a customer with a `fullName` of \"ABC Corporation:Website Redesign Project\" would have a `sublevel` of 1. When `sublevel` is 0, this object is a customer; when `sublevel` is greater than 0, this object is typically a job (i.e., a sub-customer).
	Sublevel float32 `json:"sublevel"`
	// The name of the company associated with this customer. This name is used on invoices, checks, and other forms.
	CompanyName *string `json:"companyName,omitempty"`
	// The formal salutation title that precedes the name of the contact person for this customer, such as \"Mr.\", \"Ms.\", or \"Dr.\".
	Salutation *string `json:"salutation,omitempty"`
	// The first name of the contact person for this customer.
	FirstName *string `json:"firstName,omitempty"`
	// The middle name of the contact person for this customer.
	MiddleName *string `json:"middleName,omitempty"`
	// The last name of the contact person for this customer.
	LastName *string `json:"lastName,omitempty"`
	// The job title of the contact person for this customer.
	JobTitle *string `json:"jobTitle,omitempty"`
	BillingAddress *QbdCustomerBillingAddress `json:"billingAddress,omitempty"`
	ShippingAddress *QbdCustomerShippingAddress `json:"shippingAddress,omitempty"`
	// A list of additional shipping addresses for this customer. Useful when the customer has multiple shipping locations.
	AlternateShippingAddresses []QbdShippingAddress `json:"alternateShippingAddresses,omitempty"`
	// The customer's primary telephone number.
	Phone *string `json:"phone,omitempty"`
	// The customer's alternate telephone number.
	AlternatePhone *string `json:"alternatePhone,omitempty"`
	// The customer's fax number.
	Fax *string `json:"fax,omitempty"`
	// The customer's email address.
	Email *string `json:"email,omitempty"`
	// An email address to carbon copy (CC) on communications with this customer.
	CcEmail *string `json:"ccEmail,omitempty"`
	// The name of the primary contact person for this customer.
	Contact *string `json:"contact,omitempty"`
	// The name of a alternate contact person for this customer.
	AlternateContact *string `json:"alternateContact,omitempty"`
	// Additional custom contact fields for this customer, such as phone numbers or email addresses.
	CustomContactFields []QbdCustomContactField `json:"customContactFields,omitempty"`
	// Additional alternate contacts for this customer.
	AdditionalContacts []QbdContact `json:"additionalContacts,omitempty"`
	CustomerType *QbdCustomerCustomerType `json:"customerType,omitempty"`
	Terms *QbdCustomerTerms `json:"terms,omitempty"`
	SalesRepresentative *QbdCustomerSalesRepresentative `json:"salesRepresentative,omitempty"`
	// The current balance owed by this customer, excluding balances from any jobs (i.e., sub-customers), represented as a decimal string. Compare with `totalBalance`. A positive number indicates money owed by the customer.
	Balance *string `json:"balance,omitempty"`
	// The combined balance of this customer and all of this customer's jobs (i.e., sub-customers), represented as a decimal string. If there are no sub-customers, `totalBalance` and `balance` are equal. A positive number indicates money owed by the customer.
	TotalBalance *string `json:"totalBalance,omitempty"`
	SalesTaxCode *QbdCustomerSalesTaxCode `json:"salesTaxCode,omitempty"`
	SalesTaxItem *QbdCustomerSalesTaxItem `json:"salesTaxItem,omitempty"`
	// The country for which sales tax is collected for this customer.
	SalesTaxCountry *string `json:"salesTaxCountry,omitempty"`
	// The customer's resale number, used if the customer is purchasing items for resale. This number does not affect sales tax calculations or reports in QuickBooks.
	ResaleNumber *string `json:"resaleNumber,omitempty"`
	// The customer's account number, which appears in the QuickBooks chart of accounts, reports, and graphs.  Note that if the \"Use Account Numbers\" preference is turned off in QuickBooks, the account number may not be visible in the user interface, but it can still be set and retrieved through the API.
	AccountNumber *string `json:"accountNumber,omitempty"`
	// The customer's credit limit, represented as a decimal string. This is the maximum amount of money this customer can spend before being billed. If `null`, there is no credit limit.
	CreditLimit *string `json:"creditLimit,omitempty"`
	PreferredPaymentMethod *QbdCustomerPreferredPaymentMethod `json:"preferredPaymentMethod,omitempty"`
	CreditCard *QbdCustomerCreditCard `json:"creditCard,omitempty"`
	// The status of this customer's job, if this object is a job (i.e., sub-customer).
	JobStatus *string `json:"jobStatus,omitempty"`
	// The date when work on this customer's job began, if applicable, in ISO 8601 format (YYYY-MM-DD).
	JobStartDate *string `json:"jobStartDate,omitempty"`
	// The projected completion date for this customer's job, if applicable, in ISO 8601 format (YYYY-MM-DD).
	JobProjectedEndDate *string `json:"jobProjectedEndDate,omitempty"`
	// The actual completion date of this customer's job, if applicable, in ISO 8601 format (YYYY-MM-DD).
	JobEndDate *string `json:"jobEndDate,omitempty"`
	// A brief description of this customer's job, if this object is a job (i.e., sub-customer).
	JobDescription *string `json:"jobDescription,omitempty"`
	JobType *QbdCustomerJobType `json:"jobType,omitempty"`
	// A note or comment about this customer.
	Note *string `json:"note,omitempty"`
	// Additional notes about this customer.
	AdditionalNotes []QbdNote `json:"additionalNotes,omitempty"`
	// The preferred method for delivering invoices and other documents to this customer.
	PreferredDeliveryMethod *string `json:"preferredDeliveryMethod,omitempty"`
	PriceLevel *QbdCustomerPriceLevel `json:"priceLevel,omitempty"`
	// A globally unique identifier (GUID) you, the developer, can provide for tracking this object in your external system. This field is immutable and can only be set during object creation.
	ExternalId *string `json:"externalId,omitempty"`
	// The customer's tax registration number, for use in Canada or the UK.
	TaxRegistrationNumber *string `json:"taxRegistrationNumber,omitempty"`
	Currency *QbdCustomerCurrency `json:"currency,omitempty"`
	// The custom fields for the customer object, added as user-defined data extensions, not included in the standard QuickBooks object.
	CustomFields []QbdCustomField `json:"customFields,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _QbdCustomer QbdCustomer

// NewQbdCustomer instantiates a new QbdCustomer object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQbdCustomer(id string, objectType string, createdAt string, updatedAt string, revisionNumber string, name string, fullName string, isActive bool, sublevel float32) *QbdCustomer {
	this := QbdCustomer{}
	this.Id = id
	this.ObjectType = objectType
	this.CreatedAt = createdAt
	this.UpdatedAt = updatedAt
	this.RevisionNumber = revisionNumber
	this.Name = name
	this.FullName = fullName
	this.IsActive = isActive
	this.Sublevel = sublevel
	return &this
}

// NewQbdCustomerWithDefaults instantiates a new QbdCustomer object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQbdCustomerWithDefaults() *QbdCustomer {
	this := QbdCustomer{}
	return &this
}

// GetId returns the Id field value
func (o *QbdCustomer) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *QbdCustomer) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *QbdCustomer) SetId(v string) {
	o.Id = v
}

// GetObjectType returns the ObjectType field value
func (o *QbdCustomer) GetObjectType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ObjectType
}

// GetObjectTypeOk returns a tuple with the ObjectType field value
// and a boolean to check if the value has been set.
func (o *QbdCustomer) GetObjectTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ObjectType, true
}

// SetObjectType sets field value
func (o *QbdCustomer) SetObjectType(v string) {
	o.ObjectType = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *QbdCustomer) GetCreatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *QbdCustomer) GetCreatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *QbdCustomer) SetCreatedAt(v string) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *QbdCustomer) GetUpdatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *QbdCustomer) GetUpdatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *QbdCustomer) SetUpdatedAt(v string) {
	o.UpdatedAt = v
}

// GetRevisionNumber returns the RevisionNumber field value
func (o *QbdCustomer) GetRevisionNumber() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RevisionNumber
}

// GetRevisionNumberOk returns a tuple with the RevisionNumber field value
// and a boolean to check if the value has been set.
func (o *QbdCustomer) GetRevisionNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RevisionNumber, true
}

// SetRevisionNumber sets field value
func (o *QbdCustomer) SetRevisionNumber(v string) {
	o.RevisionNumber = v
}

// GetName returns the Name field value
func (o *QbdCustomer) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *QbdCustomer) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *QbdCustomer) SetName(v string) {
	o.Name = v
}

// GetFullName returns the FullName field value
func (o *QbdCustomer) GetFullName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FullName
}

// GetFullNameOk returns a tuple with the FullName field value
// and a boolean to check if the value has been set.
func (o *QbdCustomer) GetFullNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FullName, true
}

// SetFullName sets field value
func (o *QbdCustomer) SetFullName(v string) {
	o.FullName = v
}

// GetIsActive returns the IsActive field value
func (o *QbdCustomer) GetIsActive() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsActive
}

// GetIsActiveOk returns a tuple with the IsActive field value
// and a boolean to check if the value has been set.
func (o *QbdCustomer) GetIsActiveOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsActive, true
}

// SetIsActive sets field value
func (o *QbdCustomer) SetIsActive(v bool) {
	o.IsActive = v
}

// GetClass returns the Class field value if set, zero value otherwise.
func (o *QbdCustomer) GetClass() QbdCustomerClass {
	if o == nil || IsNil(o.Class) {
		var ret QbdCustomerClass
		return ret
	}
	return *o.Class
}

// GetClassOk returns a tuple with the Class field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QbdCustomer) GetClassOk() (*QbdCustomerClass, bool) {
	if o == nil || IsNil(o.Class) {
		return nil, false
	}
	return o.Class, true
}

// HasClass returns a boolean if a field has been set.
func (o *QbdCustomer) HasClass() bool {
	if o != nil && !IsNil(o.Class) {
		return true
	}

	return false
}

// SetClass gets a reference to the given QbdCustomerClass and assigns it to the Class field.
func (o *QbdCustomer) SetClass(v QbdCustomerClass) {
	o.Class = &v
}

// GetParent returns the Parent field value if set, zero value otherwise.
func (o *QbdCustomer) GetParent() QbdCustomerParent {
	if o == nil || IsNil(o.Parent) {
		var ret QbdCustomerParent
		return ret
	}
	return *o.Parent
}

// GetParentOk returns a tuple with the Parent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QbdCustomer) GetParentOk() (*QbdCustomerParent, bool) {
	if o == nil || IsNil(o.Parent) {
		return nil, false
	}
	return o.Parent, true
}

// HasParent returns a boolean if a field has been set.
func (o *QbdCustomer) HasParent() bool {
	if o != nil && !IsNil(o.Parent) {
		return true
	}

	return false
}

// SetParent gets a reference to the given QbdCustomerParent and assigns it to the Parent field.
func (o *QbdCustomer) SetParent(v QbdCustomerParent) {
	o.Parent = &v
}

// GetSublevel returns the Sublevel field value
func (o *QbdCustomer) GetSublevel() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Sublevel
}

// GetSublevelOk returns a tuple with the Sublevel field value
// and a boolean to check if the value has been set.
func (o *QbdCustomer) GetSublevelOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Sublevel, true
}

// SetSublevel sets field value
func (o *QbdCustomer) SetSublevel(v float32) {
	o.Sublevel = v
}

// GetCompanyName returns the CompanyName field value if set, zero value otherwise.
func (o *QbdCustomer) GetCompanyName() string {
	if o == nil || IsNil(o.CompanyName) {
		var ret string
		return ret
	}
	return *o.CompanyName
}

// GetCompanyNameOk returns a tuple with the CompanyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QbdCustomer) GetCompanyNameOk() (*string, bool) {
	if o == nil || IsNil(o.CompanyName) {
		return nil, false
	}
	return o.CompanyName, true
}

// HasCompanyName returns a boolean if a field has been set.
func (o *QbdCustomer) HasCompanyName() bool {
	if o != nil && !IsNil(o.CompanyName) {
		return true
	}

	return false
}

// SetCompanyName gets a reference to the given string and assigns it to the CompanyName field.
func (o *QbdCustomer) SetCompanyName(v string) {
	o.CompanyName = &v
}

// GetSalutation returns the Salutation field value if set, zero value otherwise.
func (o *QbdCustomer) GetSalutation() string {
	if o == nil || IsNil(o.Salutation) {
		var ret string
		return ret
	}
	return *o.Salutation
}

// GetSalutationOk returns a tuple with the Salutation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QbdCustomer) GetSalutationOk() (*string, bool) {
	if o == nil || IsNil(o.Salutation) {
		return nil, false
	}
	return o.Salutation, true
}

// HasSalutation returns a boolean if a field has been set.
func (o *QbdCustomer) HasSalutation() bool {
	if o != nil && !IsNil(o.Salutation) {
		return true
	}

	return false
}

// SetSalutation gets a reference to the given string and assigns it to the Salutation field.
func (o *QbdCustomer) SetSalutation(v string) {
	o.Salutation = &v
}

// GetFirstName returns the FirstName field value if set, zero value otherwise.
func (o *QbdCustomer) GetFirstName() string {
	if o == nil || IsNil(o.FirstName) {
		var ret string
		return ret
	}
	return *o.FirstName
}

// GetFirstNameOk returns a tuple with the FirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QbdCustomer) GetFirstNameOk() (*string, bool) {
	if o == nil || IsNil(o.FirstName) {
		return nil, false
	}
	return o.FirstName, true
}

// HasFirstName returns a boolean if a field has been set.
func (o *QbdCustomer) HasFirstName() bool {
	if o != nil && !IsNil(o.FirstName) {
		return true
	}

	return false
}

// SetFirstName gets a reference to the given string and assigns it to the FirstName field.
func (o *QbdCustomer) SetFirstName(v string) {
	o.FirstName = &v
}

// GetMiddleName returns the MiddleName field value if set, zero value otherwise.
func (o *QbdCustomer) GetMiddleName() string {
	if o == nil || IsNil(o.MiddleName) {
		var ret string
		return ret
	}
	return *o.MiddleName
}

// GetMiddleNameOk returns a tuple with the MiddleName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QbdCustomer) GetMiddleNameOk() (*string, bool) {
	if o == nil || IsNil(o.MiddleName) {
		return nil, false
	}
	return o.MiddleName, true
}

// HasMiddleName returns a boolean if a field has been set.
func (o *QbdCustomer) HasMiddleName() bool {
	if o != nil && !IsNil(o.MiddleName) {
		return true
	}

	return false
}

// SetMiddleName gets a reference to the given string and assigns it to the MiddleName field.
func (o *QbdCustomer) SetMiddleName(v string) {
	o.MiddleName = &v
}

// GetLastName returns the LastName field value if set, zero value otherwise.
func (o *QbdCustomer) GetLastName() string {
	if o == nil || IsNil(o.LastName) {
		var ret string
		return ret
	}
	return *o.LastName
}

// GetLastNameOk returns a tuple with the LastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QbdCustomer) GetLastNameOk() (*string, bool) {
	if o == nil || IsNil(o.LastName) {
		return nil, false
	}
	return o.LastName, true
}

// HasLastName returns a boolean if a field has been set.
func (o *QbdCustomer) HasLastName() bool {
	if o != nil && !IsNil(o.LastName) {
		return true
	}

	return false
}

// SetLastName gets a reference to the given string and assigns it to the LastName field.
func (o *QbdCustomer) SetLastName(v string) {
	o.LastName = &v
}

// GetJobTitle returns the JobTitle field value if set, zero value otherwise.
func (o *QbdCustomer) GetJobTitle() string {
	if o == nil || IsNil(o.JobTitle) {
		var ret string
		return ret
	}
	return *o.JobTitle
}

// GetJobTitleOk returns a tuple with the JobTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QbdCustomer) GetJobTitleOk() (*string, bool) {
	if o == nil || IsNil(o.JobTitle) {
		return nil, false
	}
	return o.JobTitle, true
}

// HasJobTitle returns a boolean if a field has been set.
func (o *QbdCustomer) HasJobTitle() bool {
	if o != nil && !IsNil(o.JobTitle) {
		return true
	}

	return false
}

// SetJobTitle gets a reference to the given string and assigns it to the JobTitle field.
func (o *QbdCustomer) SetJobTitle(v string) {
	o.JobTitle = &v
}

// GetBillingAddress returns the BillingAddress field value if set, zero value otherwise.
func (o *QbdCustomer) GetBillingAddress() QbdCustomerBillingAddress {
	if o == nil || IsNil(o.BillingAddress) {
		var ret QbdCustomerBillingAddress
		return ret
	}
	return *o.BillingAddress
}

// GetBillingAddressOk returns a tuple with the BillingAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QbdCustomer) GetBillingAddressOk() (*QbdCustomerBillingAddress, bool) {
	if o == nil || IsNil(o.BillingAddress) {
		return nil, false
	}
	return o.BillingAddress, true
}

// HasBillingAddress returns a boolean if a field has been set.
func (o *QbdCustomer) HasBillingAddress() bool {
	if o != nil && !IsNil(o.BillingAddress) {
		return true
	}

	return false
}

// SetBillingAddress gets a reference to the given QbdCustomerBillingAddress and assigns it to the BillingAddress field.
func (o *QbdCustomer) SetBillingAddress(v QbdCustomerBillingAddress) {
	o.BillingAddress = &v
}

// GetShippingAddress returns the ShippingAddress field value if set, zero value otherwise.
func (o *QbdCustomer) GetShippingAddress() QbdCustomerShippingAddress {
	if o == nil || IsNil(o.ShippingAddress) {
		var ret QbdCustomerShippingAddress
		return ret
	}
	return *o.ShippingAddress
}

// GetShippingAddressOk returns a tuple with the ShippingAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QbdCustomer) GetShippingAddressOk() (*QbdCustomerShippingAddress, bool) {
	if o == nil || IsNil(o.ShippingAddress) {
		return nil, false
	}
	return o.ShippingAddress, true
}

// HasShippingAddress returns a boolean if a field has been set.
func (o *QbdCustomer) HasShippingAddress() bool {
	if o != nil && !IsNil(o.ShippingAddress) {
		return true
	}

	return false
}

// SetShippingAddress gets a reference to the given QbdCustomerShippingAddress and assigns it to the ShippingAddress field.
func (o *QbdCustomer) SetShippingAddress(v QbdCustomerShippingAddress) {
	o.ShippingAddress = &v
}

// GetAlternateShippingAddresses returns the AlternateShippingAddresses field value if set, zero value otherwise.
func (o *QbdCustomer) GetAlternateShippingAddresses() []QbdShippingAddress {
	if o == nil || IsNil(o.AlternateShippingAddresses) {
		var ret []QbdShippingAddress
		return ret
	}
	return o.AlternateShippingAddresses
}

// GetAlternateShippingAddressesOk returns a tuple with the AlternateShippingAddresses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QbdCustomer) GetAlternateShippingAddressesOk() ([]QbdShippingAddress, bool) {
	if o == nil || IsNil(o.AlternateShippingAddresses) {
		return nil, false
	}
	return o.AlternateShippingAddresses, true
}

// HasAlternateShippingAddresses returns a boolean if a field has been set.
func (o *QbdCustomer) HasAlternateShippingAddresses() bool {
	if o != nil && !IsNil(o.AlternateShippingAddresses) {
		return true
	}

	return false
}

// SetAlternateShippingAddresses gets a reference to the given []QbdShippingAddress and assigns it to the AlternateShippingAddresses field.
func (o *QbdCustomer) SetAlternateShippingAddresses(v []QbdShippingAddress) {
	o.AlternateShippingAddresses = v
}

// GetPhone returns the Phone field value if set, zero value otherwise.
func (o *QbdCustomer) GetPhone() string {
	if o == nil || IsNil(o.Phone) {
		var ret string
		return ret
	}
	return *o.Phone
}

// GetPhoneOk returns a tuple with the Phone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QbdCustomer) GetPhoneOk() (*string, bool) {
	if o == nil || IsNil(o.Phone) {
		return nil, false
	}
	return o.Phone, true
}

// HasPhone returns a boolean if a field has been set.
func (o *QbdCustomer) HasPhone() bool {
	if o != nil && !IsNil(o.Phone) {
		return true
	}

	return false
}

// SetPhone gets a reference to the given string and assigns it to the Phone field.
func (o *QbdCustomer) SetPhone(v string) {
	o.Phone = &v
}

// GetAlternatePhone returns the AlternatePhone field value if set, zero value otherwise.
func (o *QbdCustomer) GetAlternatePhone() string {
	if o == nil || IsNil(o.AlternatePhone) {
		var ret string
		return ret
	}
	return *o.AlternatePhone
}

// GetAlternatePhoneOk returns a tuple with the AlternatePhone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QbdCustomer) GetAlternatePhoneOk() (*string, bool) {
	if o == nil || IsNil(o.AlternatePhone) {
		return nil, false
	}
	return o.AlternatePhone, true
}

// HasAlternatePhone returns a boolean if a field has been set.
func (o *QbdCustomer) HasAlternatePhone() bool {
	if o != nil && !IsNil(o.AlternatePhone) {
		return true
	}

	return false
}

// SetAlternatePhone gets a reference to the given string and assigns it to the AlternatePhone field.
func (o *QbdCustomer) SetAlternatePhone(v string) {
	o.AlternatePhone = &v
}

// GetFax returns the Fax field value if set, zero value otherwise.
func (o *QbdCustomer) GetFax() string {
	if o == nil || IsNil(o.Fax) {
		var ret string
		return ret
	}
	return *o.Fax
}

// GetFaxOk returns a tuple with the Fax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QbdCustomer) GetFaxOk() (*string, bool) {
	if o == nil || IsNil(o.Fax) {
		return nil, false
	}
	return o.Fax, true
}

// HasFax returns a boolean if a field has been set.
func (o *QbdCustomer) HasFax() bool {
	if o != nil && !IsNil(o.Fax) {
		return true
	}

	return false
}

// SetFax gets a reference to the given string and assigns it to the Fax field.
func (o *QbdCustomer) SetFax(v string) {
	o.Fax = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *QbdCustomer) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QbdCustomer) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *QbdCustomer) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *QbdCustomer) SetEmail(v string) {
	o.Email = &v
}

// GetCcEmail returns the CcEmail field value if set, zero value otherwise.
func (o *QbdCustomer) GetCcEmail() string {
	if o == nil || IsNil(o.CcEmail) {
		var ret string
		return ret
	}
	return *o.CcEmail
}

// GetCcEmailOk returns a tuple with the CcEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QbdCustomer) GetCcEmailOk() (*string, bool) {
	if o == nil || IsNil(o.CcEmail) {
		return nil, false
	}
	return o.CcEmail, true
}

// HasCcEmail returns a boolean if a field has been set.
func (o *QbdCustomer) HasCcEmail() bool {
	if o != nil && !IsNil(o.CcEmail) {
		return true
	}

	return false
}

// SetCcEmail gets a reference to the given string and assigns it to the CcEmail field.
func (o *QbdCustomer) SetCcEmail(v string) {
	o.CcEmail = &v
}

// GetContact returns the Contact field value if set, zero value otherwise.
func (o *QbdCustomer) GetContact() string {
	if o == nil || IsNil(o.Contact) {
		var ret string
		return ret
	}
	return *o.Contact
}

// GetContactOk returns a tuple with the Contact field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QbdCustomer) GetContactOk() (*string, bool) {
	if o == nil || IsNil(o.Contact) {
		return nil, false
	}
	return o.Contact, true
}

// HasContact returns a boolean if a field has been set.
func (o *QbdCustomer) HasContact() bool {
	if o != nil && !IsNil(o.Contact) {
		return true
	}

	return false
}

// SetContact gets a reference to the given string and assigns it to the Contact field.
func (o *QbdCustomer) SetContact(v string) {
	o.Contact = &v
}

// GetAlternateContact returns the AlternateContact field value if set, zero value otherwise.
func (o *QbdCustomer) GetAlternateContact() string {
	if o == nil || IsNil(o.AlternateContact) {
		var ret string
		return ret
	}
	return *o.AlternateContact
}

// GetAlternateContactOk returns a tuple with the AlternateContact field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QbdCustomer) GetAlternateContactOk() (*string, bool) {
	if o == nil || IsNil(o.AlternateContact) {
		return nil, false
	}
	return o.AlternateContact, true
}

// HasAlternateContact returns a boolean if a field has been set.
func (o *QbdCustomer) HasAlternateContact() bool {
	if o != nil && !IsNil(o.AlternateContact) {
		return true
	}

	return false
}

// SetAlternateContact gets a reference to the given string and assigns it to the AlternateContact field.
func (o *QbdCustomer) SetAlternateContact(v string) {
	o.AlternateContact = &v
}

// GetCustomContactFields returns the CustomContactFields field value if set, zero value otherwise.
func (o *QbdCustomer) GetCustomContactFields() []QbdCustomContactField {
	if o == nil || IsNil(o.CustomContactFields) {
		var ret []QbdCustomContactField
		return ret
	}
	return o.CustomContactFields
}

// GetCustomContactFieldsOk returns a tuple with the CustomContactFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QbdCustomer) GetCustomContactFieldsOk() ([]QbdCustomContactField, bool) {
	if o == nil || IsNil(o.CustomContactFields) {
		return nil, false
	}
	return o.CustomContactFields, true
}

// HasCustomContactFields returns a boolean if a field has been set.
func (o *QbdCustomer) HasCustomContactFields() bool {
	if o != nil && !IsNil(o.CustomContactFields) {
		return true
	}

	return false
}

// SetCustomContactFields gets a reference to the given []QbdCustomContactField and assigns it to the CustomContactFields field.
func (o *QbdCustomer) SetCustomContactFields(v []QbdCustomContactField) {
	o.CustomContactFields = v
}

// GetAdditionalContacts returns the AdditionalContacts field value if set, zero value otherwise.
func (o *QbdCustomer) GetAdditionalContacts() []QbdContact {
	if o == nil || IsNil(o.AdditionalContacts) {
		var ret []QbdContact
		return ret
	}
	return o.AdditionalContacts
}

// GetAdditionalContactsOk returns a tuple with the AdditionalContacts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QbdCustomer) GetAdditionalContactsOk() ([]QbdContact, bool) {
	if o == nil || IsNil(o.AdditionalContacts) {
		return nil, false
	}
	return o.AdditionalContacts, true
}

// HasAdditionalContacts returns a boolean if a field has been set.
func (o *QbdCustomer) HasAdditionalContacts() bool {
	if o != nil && !IsNil(o.AdditionalContacts) {
		return true
	}

	return false
}

// SetAdditionalContacts gets a reference to the given []QbdContact and assigns it to the AdditionalContacts field.
func (o *QbdCustomer) SetAdditionalContacts(v []QbdContact) {
	o.AdditionalContacts = v
}

// GetCustomerType returns the CustomerType field value if set, zero value otherwise.
func (o *QbdCustomer) GetCustomerType() QbdCustomerCustomerType {
	if o == nil || IsNil(o.CustomerType) {
		var ret QbdCustomerCustomerType
		return ret
	}
	return *o.CustomerType
}

// GetCustomerTypeOk returns a tuple with the CustomerType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QbdCustomer) GetCustomerTypeOk() (*QbdCustomerCustomerType, bool) {
	if o == nil || IsNil(o.CustomerType) {
		return nil, false
	}
	return o.CustomerType, true
}

// HasCustomerType returns a boolean if a field has been set.
func (o *QbdCustomer) HasCustomerType() bool {
	if o != nil && !IsNil(o.CustomerType) {
		return true
	}

	return false
}

// SetCustomerType gets a reference to the given QbdCustomerCustomerType and assigns it to the CustomerType field.
func (o *QbdCustomer) SetCustomerType(v QbdCustomerCustomerType) {
	o.CustomerType = &v
}

// GetTerms returns the Terms field value if set, zero value otherwise.
func (o *QbdCustomer) GetTerms() QbdCustomerTerms {
	if o == nil || IsNil(o.Terms) {
		var ret QbdCustomerTerms
		return ret
	}
	return *o.Terms
}

// GetTermsOk returns a tuple with the Terms field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QbdCustomer) GetTermsOk() (*QbdCustomerTerms, bool) {
	if o == nil || IsNil(o.Terms) {
		return nil, false
	}
	return o.Terms, true
}

// HasTerms returns a boolean if a field has been set.
func (o *QbdCustomer) HasTerms() bool {
	if o != nil && !IsNil(o.Terms) {
		return true
	}

	return false
}

// SetTerms gets a reference to the given QbdCustomerTerms and assigns it to the Terms field.
func (o *QbdCustomer) SetTerms(v QbdCustomerTerms) {
	o.Terms = &v
}

// GetSalesRepresentative returns the SalesRepresentative field value if set, zero value otherwise.
func (o *QbdCustomer) GetSalesRepresentative() QbdCustomerSalesRepresentative {
	if o == nil || IsNil(o.SalesRepresentative) {
		var ret QbdCustomerSalesRepresentative
		return ret
	}
	return *o.SalesRepresentative
}

// GetSalesRepresentativeOk returns a tuple with the SalesRepresentative field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QbdCustomer) GetSalesRepresentativeOk() (*QbdCustomerSalesRepresentative, bool) {
	if o == nil || IsNil(o.SalesRepresentative) {
		return nil, false
	}
	return o.SalesRepresentative, true
}

// HasSalesRepresentative returns a boolean if a field has been set.
func (o *QbdCustomer) HasSalesRepresentative() bool {
	if o != nil && !IsNil(o.SalesRepresentative) {
		return true
	}

	return false
}

// SetSalesRepresentative gets a reference to the given QbdCustomerSalesRepresentative and assigns it to the SalesRepresentative field.
func (o *QbdCustomer) SetSalesRepresentative(v QbdCustomerSalesRepresentative) {
	o.SalesRepresentative = &v
}

// GetBalance returns the Balance field value if set, zero value otherwise.
func (o *QbdCustomer) GetBalance() string {
	if o == nil || IsNil(o.Balance) {
		var ret string
		return ret
	}
	return *o.Balance
}

// GetBalanceOk returns a tuple with the Balance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QbdCustomer) GetBalanceOk() (*string, bool) {
	if o == nil || IsNil(o.Balance) {
		return nil, false
	}
	return o.Balance, true
}

// HasBalance returns a boolean if a field has been set.
func (o *QbdCustomer) HasBalance() bool {
	if o != nil && !IsNil(o.Balance) {
		return true
	}

	return false
}

// SetBalance gets a reference to the given string and assigns it to the Balance field.
func (o *QbdCustomer) SetBalance(v string) {
	o.Balance = &v
}

// GetTotalBalance returns the TotalBalance field value if set, zero value otherwise.
func (o *QbdCustomer) GetTotalBalance() string {
	if o == nil || IsNil(o.TotalBalance) {
		var ret string
		return ret
	}
	return *o.TotalBalance
}

// GetTotalBalanceOk returns a tuple with the TotalBalance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QbdCustomer) GetTotalBalanceOk() (*string, bool) {
	if o == nil || IsNil(o.TotalBalance) {
		return nil, false
	}
	return o.TotalBalance, true
}

// HasTotalBalance returns a boolean if a field has been set.
func (o *QbdCustomer) HasTotalBalance() bool {
	if o != nil && !IsNil(o.TotalBalance) {
		return true
	}

	return false
}

// SetTotalBalance gets a reference to the given string and assigns it to the TotalBalance field.
func (o *QbdCustomer) SetTotalBalance(v string) {
	o.TotalBalance = &v
}

// GetSalesTaxCode returns the SalesTaxCode field value if set, zero value otherwise.
func (o *QbdCustomer) GetSalesTaxCode() QbdCustomerSalesTaxCode {
	if o == nil || IsNil(o.SalesTaxCode) {
		var ret QbdCustomerSalesTaxCode
		return ret
	}
	return *o.SalesTaxCode
}

// GetSalesTaxCodeOk returns a tuple with the SalesTaxCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QbdCustomer) GetSalesTaxCodeOk() (*QbdCustomerSalesTaxCode, bool) {
	if o == nil || IsNil(o.SalesTaxCode) {
		return nil, false
	}
	return o.SalesTaxCode, true
}

// HasSalesTaxCode returns a boolean if a field has been set.
func (o *QbdCustomer) HasSalesTaxCode() bool {
	if o != nil && !IsNil(o.SalesTaxCode) {
		return true
	}

	return false
}

// SetSalesTaxCode gets a reference to the given QbdCustomerSalesTaxCode and assigns it to the SalesTaxCode field.
func (o *QbdCustomer) SetSalesTaxCode(v QbdCustomerSalesTaxCode) {
	o.SalesTaxCode = &v
}

// GetSalesTaxItem returns the SalesTaxItem field value if set, zero value otherwise.
func (o *QbdCustomer) GetSalesTaxItem() QbdCustomerSalesTaxItem {
	if o == nil || IsNil(o.SalesTaxItem) {
		var ret QbdCustomerSalesTaxItem
		return ret
	}
	return *o.SalesTaxItem
}

// GetSalesTaxItemOk returns a tuple with the SalesTaxItem field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QbdCustomer) GetSalesTaxItemOk() (*QbdCustomerSalesTaxItem, bool) {
	if o == nil || IsNil(o.SalesTaxItem) {
		return nil, false
	}
	return o.SalesTaxItem, true
}

// HasSalesTaxItem returns a boolean if a field has been set.
func (o *QbdCustomer) HasSalesTaxItem() bool {
	if o != nil && !IsNil(o.SalesTaxItem) {
		return true
	}

	return false
}

// SetSalesTaxItem gets a reference to the given QbdCustomerSalesTaxItem and assigns it to the SalesTaxItem field.
func (o *QbdCustomer) SetSalesTaxItem(v QbdCustomerSalesTaxItem) {
	o.SalesTaxItem = &v
}

// GetSalesTaxCountry returns the SalesTaxCountry field value if set, zero value otherwise.
func (o *QbdCustomer) GetSalesTaxCountry() string {
	if o == nil || IsNil(o.SalesTaxCountry) {
		var ret string
		return ret
	}
	return *o.SalesTaxCountry
}

// GetSalesTaxCountryOk returns a tuple with the SalesTaxCountry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QbdCustomer) GetSalesTaxCountryOk() (*string, bool) {
	if o == nil || IsNil(o.SalesTaxCountry) {
		return nil, false
	}
	return o.SalesTaxCountry, true
}

// HasSalesTaxCountry returns a boolean if a field has been set.
func (o *QbdCustomer) HasSalesTaxCountry() bool {
	if o != nil && !IsNil(o.SalesTaxCountry) {
		return true
	}

	return false
}

// SetSalesTaxCountry gets a reference to the given string and assigns it to the SalesTaxCountry field.
func (o *QbdCustomer) SetSalesTaxCountry(v string) {
	o.SalesTaxCountry = &v
}

// GetResaleNumber returns the ResaleNumber field value if set, zero value otherwise.
func (o *QbdCustomer) GetResaleNumber() string {
	if o == nil || IsNil(o.ResaleNumber) {
		var ret string
		return ret
	}
	return *o.ResaleNumber
}

// GetResaleNumberOk returns a tuple with the ResaleNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QbdCustomer) GetResaleNumberOk() (*string, bool) {
	if o == nil || IsNil(o.ResaleNumber) {
		return nil, false
	}
	return o.ResaleNumber, true
}

// HasResaleNumber returns a boolean if a field has been set.
func (o *QbdCustomer) HasResaleNumber() bool {
	if o != nil && !IsNil(o.ResaleNumber) {
		return true
	}

	return false
}

// SetResaleNumber gets a reference to the given string and assigns it to the ResaleNumber field.
func (o *QbdCustomer) SetResaleNumber(v string) {
	o.ResaleNumber = &v
}

// GetAccountNumber returns the AccountNumber field value if set, zero value otherwise.
func (o *QbdCustomer) GetAccountNumber() string {
	if o == nil || IsNil(o.AccountNumber) {
		var ret string
		return ret
	}
	return *o.AccountNumber
}

// GetAccountNumberOk returns a tuple with the AccountNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QbdCustomer) GetAccountNumberOk() (*string, bool) {
	if o == nil || IsNil(o.AccountNumber) {
		return nil, false
	}
	return o.AccountNumber, true
}

// HasAccountNumber returns a boolean if a field has been set.
func (o *QbdCustomer) HasAccountNumber() bool {
	if o != nil && !IsNil(o.AccountNumber) {
		return true
	}

	return false
}

// SetAccountNumber gets a reference to the given string and assigns it to the AccountNumber field.
func (o *QbdCustomer) SetAccountNumber(v string) {
	o.AccountNumber = &v
}

// GetCreditLimit returns the CreditLimit field value if set, zero value otherwise.
func (o *QbdCustomer) GetCreditLimit() string {
	if o == nil || IsNil(o.CreditLimit) {
		var ret string
		return ret
	}
	return *o.CreditLimit
}

// GetCreditLimitOk returns a tuple with the CreditLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QbdCustomer) GetCreditLimitOk() (*string, bool) {
	if o == nil || IsNil(o.CreditLimit) {
		return nil, false
	}
	return o.CreditLimit, true
}

// HasCreditLimit returns a boolean if a field has been set.
func (o *QbdCustomer) HasCreditLimit() bool {
	if o != nil && !IsNil(o.CreditLimit) {
		return true
	}

	return false
}

// SetCreditLimit gets a reference to the given string and assigns it to the CreditLimit field.
func (o *QbdCustomer) SetCreditLimit(v string) {
	o.CreditLimit = &v
}

// GetPreferredPaymentMethod returns the PreferredPaymentMethod field value if set, zero value otherwise.
func (o *QbdCustomer) GetPreferredPaymentMethod() QbdCustomerPreferredPaymentMethod {
	if o == nil || IsNil(o.PreferredPaymentMethod) {
		var ret QbdCustomerPreferredPaymentMethod
		return ret
	}
	return *o.PreferredPaymentMethod
}

// GetPreferredPaymentMethodOk returns a tuple with the PreferredPaymentMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QbdCustomer) GetPreferredPaymentMethodOk() (*QbdCustomerPreferredPaymentMethod, bool) {
	if o == nil || IsNil(o.PreferredPaymentMethod) {
		return nil, false
	}
	return o.PreferredPaymentMethod, true
}

// HasPreferredPaymentMethod returns a boolean if a field has been set.
func (o *QbdCustomer) HasPreferredPaymentMethod() bool {
	if o != nil && !IsNil(o.PreferredPaymentMethod) {
		return true
	}

	return false
}

// SetPreferredPaymentMethod gets a reference to the given QbdCustomerPreferredPaymentMethod and assigns it to the PreferredPaymentMethod field.
func (o *QbdCustomer) SetPreferredPaymentMethod(v QbdCustomerPreferredPaymentMethod) {
	o.PreferredPaymentMethod = &v
}

// GetCreditCard returns the CreditCard field value if set, zero value otherwise.
func (o *QbdCustomer) GetCreditCard() QbdCustomerCreditCard {
	if o == nil || IsNil(o.CreditCard) {
		var ret QbdCustomerCreditCard
		return ret
	}
	return *o.CreditCard
}

// GetCreditCardOk returns a tuple with the CreditCard field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QbdCustomer) GetCreditCardOk() (*QbdCustomerCreditCard, bool) {
	if o == nil || IsNil(o.CreditCard) {
		return nil, false
	}
	return o.CreditCard, true
}

// HasCreditCard returns a boolean if a field has been set.
func (o *QbdCustomer) HasCreditCard() bool {
	if o != nil && !IsNil(o.CreditCard) {
		return true
	}

	return false
}

// SetCreditCard gets a reference to the given QbdCustomerCreditCard and assigns it to the CreditCard field.
func (o *QbdCustomer) SetCreditCard(v QbdCustomerCreditCard) {
	o.CreditCard = &v
}

// GetJobStatus returns the JobStatus field value if set, zero value otherwise.
func (o *QbdCustomer) GetJobStatus() string {
	if o == nil || IsNil(o.JobStatus) {
		var ret string
		return ret
	}
	return *o.JobStatus
}

// GetJobStatusOk returns a tuple with the JobStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QbdCustomer) GetJobStatusOk() (*string, bool) {
	if o == nil || IsNil(o.JobStatus) {
		return nil, false
	}
	return o.JobStatus, true
}

// HasJobStatus returns a boolean if a field has been set.
func (o *QbdCustomer) HasJobStatus() bool {
	if o != nil && !IsNil(o.JobStatus) {
		return true
	}

	return false
}

// SetJobStatus gets a reference to the given string and assigns it to the JobStatus field.
func (o *QbdCustomer) SetJobStatus(v string) {
	o.JobStatus = &v
}

// GetJobStartDate returns the JobStartDate field value if set, zero value otherwise.
func (o *QbdCustomer) GetJobStartDate() string {
	if o == nil || IsNil(o.JobStartDate) {
		var ret string
		return ret
	}
	return *o.JobStartDate
}

// GetJobStartDateOk returns a tuple with the JobStartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QbdCustomer) GetJobStartDateOk() (*string, bool) {
	if o == nil || IsNil(o.JobStartDate) {
		return nil, false
	}
	return o.JobStartDate, true
}

// HasJobStartDate returns a boolean if a field has been set.
func (o *QbdCustomer) HasJobStartDate() bool {
	if o != nil && !IsNil(o.JobStartDate) {
		return true
	}

	return false
}

// SetJobStartDate gets a reference to the given string and assigns it to the JobStartDate field.
func (o *QbdCustomer) SetJobStartDate(v string) {
	o.JobStartDate = &v
}

// GetJobProjectedEndDate returns the JobProjectedEndDate field value if set, zero value otherwise.
func (o *QbdCustomer) GetJobProjectedEndDate() string {
	if o == nil || IsNil(o.JobProjectedEndDate) {
		var ret string
		return ret
	}
	return *o.JobProjectedEndDate
}

// GetJobProjectedEndDateOk returns a tuple with the JobProjectedEndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QbdCustomer) GetJobProjectedEndDateOk() (*string, bool) {
	if o == nil || IsNil(o.JobProjectedEndDate) {
		return nil, false
	}
	return o.JobProjectedEndDate, true
}

// HasJobProjectedEndDate returns a boolean if a field has been set.
func (o *QbdCustomer) HasJobProjectedEndDate() bool {
	if o != nil && !IsNil(o.JobProjectedEndDate) {
		return true
	}

	return false
}

// SetJobProjectedEndDate gets a reference to the given string and assigns it to the JobProjectedEndDate field.
func (o *QbdCustomer) SetJobProjectedEndDate(v string) {
	o.JobProjectedEndDate = &v
}

// GetJobEndDate returns the JobEndDate field value if set, zero value otherwise.
func (o *QbdCustomer) GetJobEndDate() string {
	if o == nil || IsNil(o.JobEndDate) {
		var ret string
		return ret
	}
	return *o.JobEndDate
}

// GetJobEndDateOk returns a tuple with the JobEndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QbdCustomer) GetJobEndDateOk() (*string, bool) {
	if o == nil || IsNil(o.JobEndDate) {
		return nil, false
	}
	return o.JobEndDate, true
}

// HasJobEndDate returns a boolean if a field has been set.
func (o *QbdCustomer) HasJobEndDate() bool {
	if o != nil && !IsNil(o.JobEndDate) {
		return true
	}

	return false
}

// SetJobEndDate gets a reference to the given string and assigns it to the JobEndDate field.
func (o *QbdCustomer) SetJobEndDate(v string) {
	o.JobEndDate = &v
}

// GetJobDescription returns the JobDescription field value if set, zero value otherwise.
func (o *QbdCustomer) GetJobDescription() string {
	if o == nil || IsNil(o.JobDescription) {
		var ret string
		return ret
	}
	return *o.JobDescription
}

// GetJobDescriptionOk returns a tuple with the JobDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QbdCustomer) GetJobDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.JobDescription) {
		return nil, false
	}
	return o.JobDescription, true
}

// HasJobDescription returns a boolean if a field has been set.
func (o *QbdCustomer) HasJobDescription() bool {
	if o != nil && !IsNil(o.JobDescription) {
		return true
	}

	return false
}

// SetJobDescription gets a reference to the given string and assigns it to the JobDescription field.
func (o *QbdCustomer) SetJobDescription(v string) {
	o.JobDescription = &v
}

// GetJobType returns the JobType field value if set, zero value otherwise.
func (o *QbdCustomer) GetJobType() QbdCustomerJobType {
	if o == nil || IsNil(o.JobType) {
		var ret QbdCustomerJobType
		return ret
	}
	return *o.JobType
}

// GetJobTypeOk returns a tuple with the JobType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QbdCustomer) GetJobTypeOk() (*QbdCustomerJobType, bool) {
	if o == nil || IsNil(o.JobType) {
		return nil, false
	}
	return o.JobType, true
}

// HasJobType returns a boolean if a field has been set.
func (o *QbdCustomer) HasJobType() bool {
	if o != nil && !IsNil(o.JobType) {
		return true
	}

	return false
}

// SetJobType gets a reference to the given QbdCustomerJobType and assigns it to the JobType field.
func (o *QbdCustomer) SetJobType(v QbdCustomerJobType) {
	o.JobType = &v
}

// GetNote returns the Note field value if set, zero value otherwise.
func (o *QbdCustomer) GetNote() string {
	if o == nil || IsNil(o.Note) {
		var ret string
		return ret
	}
	return *o.Note
}

// GetNoteOk returns a tuple with the Note field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QbdCustomer) GetNoteOk() (*string, bool) {
	if o == nil || IsNil(o.Note) {
		return nil, false
	}
	return o.Note, true
}

// HasNote returns a boolean if a field has been set.
func (o *QbdCustomer) HasNote() bool {
	if o != nil && !IsNil(o.Note) {
		return true
	}

	return false
}

// SetNote gets a reference to the given string and assigns it to the Note field.
func (o *QbdCustomer) SetNote(v string) {
	o.Note = &v
}

// GetAdditionalNotes returns the AdditionalNotes field value if set, zero value otherwise.
func (o *QbdCustomer) GetAdditionalNotes() []QbdNote {
	if o == nil || IsNil(o.AdditionalNotes) {
		var ret []QbdNote
		return ret
	}
	return o.AdditionalNotes
}

// GetAdditionalNotesOk returns a tuple with the AdditionalNotes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QbdCustomer) GetAdditionalNotesOk() ([]QbdNote, bool) {
	if o == nil || IsNil(o.AdditionalNotes) {
		return nil, false
	}
	return o.AdditionalNotes, true
}

// HasAdditionalNotes returns a boolean if a field has been set.
func (o *QbdCustomer) HasAdditionalNotes() bool {
	if o != nil && !IsNil(o.AdditionalNotes) {
		return true
	}

	return false
}

// SetAdditionalNotes gets a reference to the given []QbdNote and assigns it to the AdditionalNotes field.
func (o *QbdCustomer) SetAdditionalNotes(v []QbdNote) {
	o.AdditionalNotes = v
}

// GetPreferredDeliveryMethod returns the PreferredDeliveryMethod field value if set, zero value otherwise.
func (o *QbdCustomer) GetPreferredDeliveryMethod() string {
	if o == nil || IsNil(o.PreferredDeliveryMethod) {
		var ret string
		return ret
	}
	return *o.PreferredDeliveryMethod
}

// GetPreferredDeliveryMethodOk returns a tuple with the PreferredDeliveryMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QbdCustomer) GetPreferredDeliveryMethodOk() (*string, bool) {
	if o == nil || IsNil(o.PreferredDeliveryMethod) {
		return nil, false
	}
	return o.PreferredDeliveryMethod, true
}

// HasPreferredDeliveryMethod returns a boolean if a field has been set.
func (o *QbdCustomer) HasPreferredDeliveryMethod() bool {
	if o != nil && !IsNil(o.PreferredDeliveryMethod) {
		return true
	}

	return false
}

// SetPreferredDeliveryMethod gets a reference to the given string and assigns it to the PreferredDeliveryMethod field.
func (o *QbdCustomer) SetPreferredDeliveryMethod(v string) {
	o.PreferredDeliveryMethod = &v
}

// GetPriceLevel returns the PriceLevel field value if set, zero value otherwise.
func (o *QbdCustomer) GetPriceLevel() QbdCustomerPriceLevel {
	if o == nil || IsNil(o.PriceLevel) {
		var ret QbdCustomerPriceLevel
		return ret
	}
	return *o.PriceLevel
}

// GetPriceLevelOk returns a tuple with the PriceLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QbdCustomer) GetPriceLevelOk() (*QbdCustomerPriceLevel, bool) {
	if o == nil || IsNil(o.PriceLevel) {
		return nil, false
	}
	return o.PriceLevel, true
}

// HasPriceLevel returns a boolean if a field has been set.
func (o *QbdCustomer) HasPriceLevel() bool {
	if o != nil && !IsNil(o.PriceLevel) {
		return true
	}

	return false
}

// SetPriceLevel gets a reference to the given QbdCustomerPriceLevel and assigns it to the PriceLevel field.
func (o *QbdCustomer) SetPriceLevel(v QbdCustomerPriceLevel) {
	o.PriceLevel = &v
}

// GetExternalId returns the ExternalId field value if set, zero value otherwise.
func (o *QbdCustomer) GetExternalId() string {
	if o == nil || IsNil(o.ExternalId) {
		var ret string
		return ret
	}
	return *o.ExternalId
}

// GetExternalIdOk returns a tuple with the ExternalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QbdCustomer) GetExternalIdOk() (*string, bool) {
	if o == nil || IsNil(o.ExternalId) {
		return nil, false
	}
	return o.ExternalId, true
}

// HasExternalId returns a boolean if a field has been set.
func (o *QbdCustomer) HasExternalId() bool {
	if o != nil && !IsNil(o.ExternalId) {
		return true
	}

	return false
}

// SetExternalId gets a reference to the given string and assigns it to the ExternalId field.
func (o *QbdCustomer) SetExternalId(v string) {
	o.ExternalId = &v
}

// GetTaxRegistrationNumber returns the TaxRegistrationNumber field value if set, zero value otherwise.
func (o *QbdCustomer) GetTaxRegistrationNumber() string {
	if o == nil || IsNil(o.TaxRegistrationNumber) {
		var ret string
		return ret
	}
	return *o.TaxRegistrationNumber
}

// GetTaxRegistrationNumberOk returns a tuple with the TaxRegistrationNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QbdCustomer) GetTaxRegistrationNumberOk() (*string, bool) {
	if o == nil || IsNil(o.TaxRegistrationNumber) {
		return nil, false
	}
	return o.TaxRegistrationNumber, true
}

// HasTaxRegistrationNumber returns a boolean if a field has been set.
func (o *QbdCustomer) HasTaxRegistrationNumber() bool {
	if o != nil && !IsNil(o.TaxRegistrationNumber) {
		return true
	}

	return false
}

// SetTaxRegistrationNumber gets a reference to the given string and assigns it to the TaxRegistrationNumber field.
func (o *QbdCustomer) SetTaxRegistrationNumber(v string) {
	o.TaxRegistrationNumber = &v
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *QbdCustomer) GetCurrency() QbdCustomerCurrency {
	if o == nil || IsNil(o.Currency) {
		var ret QbdCustomerCurrency
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QbdCustomer) GetCurrencyOk() (*QbdCustomerCurrency, bool) {
	if o == nil || IsNil(o.Currency) {
		return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *QbdCustomer) HasCurrency() bool {
	if o != nil && !IsNil(o.Currency) {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given QbdCustomerCurrency and assigns it to the Currency field.
func (o *QbdCustomer) SetCurrency(v QbdCustomerCurrency) {
	o.Currency = &v
}

// GetCustomFields returns the CustomFields field value if set, zero value otherwise.
func (o *QbdCustomer) GetCustomFields() []QbdCustomField {
	if o == nil || IsNil(o.CustomFields) {
		var ret []QbdCustomField
		return ret
	}
	return o.CustomFields
}

// GetCustomFieldsOk returns a tuple with the CustomFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QbdCustomer) GetCustomFieldsOk() ([]QbdCustomField, bool) {
	if o == nil || IsNil(o.CustomFields) {
		return nil, false
	}
	return o.CustomFields, true
}

// HasCustomFields returns a boolean if a field has been set.
func (o *QbdCustomer) HasCustomFields() bool {
	if o != nil && !IsNil(o.CustomFields) {
		return true
	}

	return false
}

// SetCustomFields gets a reference to the given []QbdCustomField and assigns it to the CustomFields field.
func (o *QbdCustomer) SetCustomFields(v []QbdCustomField) {
	o.CustomFields = v
}

func (o QbdCustomer) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QbdCustomer) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["objectType"] = o.ObjectType
	toSerialize["createdAt"] = o.CreatedAt
	toSerialize["updatedAt"] = o.UpdatedAt
	toSerialize["revisionNumber"] = o.RevisionNumber
	toSerialize["name"] = o.Name
	toSerialize["fullName"] = o.FullName
	toSerialize["isActive"] = o.IsActive
	if !IsNil(o.Class) {
		toSerialize["class"] = o.Class
	}
	if !IsNil(o.Parent) {
		toSerialize["parent"] = o.Parent
	}
	toSerialize["sublevel"] = o.Sublevel
	if !IsNil(o.CompanyName) {
		toSerialize["companyName"] = o.CompanyName
	}
	if !IsNil(o.Salutation) {
		toSerialize["salutation"] = o.Salutation
	}
	if !IsNil(o.FirstName) {
		toSerialize["firstName"] = o.FirstName
	}
	if !IsNil(o.MiddleName) {
		toSerialize["middleName"] = o.MiddleName
	}
	if !IsNil(o.LastName) {
		toSerialize["lastName"] = o.LastName
	}
	if !IsNil(o.JobTitle) {
		toSerialize["jobTitle"] = o.JobTitle
	}
	if !IsNil(o.BillingAddress) {
		toSerialize["billingAddress"] = o.BillingAddress
	}
	if !IsNil(o.ShippingAddress) {
		toSerialize["shippingAddress"] = o.ShippingAddress
	}
	if !IsNil(o.AlternateShippingAddresses) {
		toSerialize["alternateShippingAddresses"] = o.AlternateShippingAddresses
	}
	if !IsNil(o.Phone) {
		toSerialize["phone"] = o.Phone
	}
	if !IsNil(o.AlternatePhone) {
		toSerialize["alternatePhone"] = o.AlternatePhone
	}
	if !IsNil(o.Fax) {
		toSerialize["fax"] = o.Fax
	}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.CcEmail) {
		toSerialize["ccEmail"] = o.CcEmail
	}
	if !IsNil(o.Contact) {
		toSerialize["contact"] = o.Contact
	}
	if !IsNil(o.AlternateContact) {
		toSerialize["alternateContact"] = o.AlternateContact
	}
	if !IsNil(o.CustomContactFields) {
		toSerialize["customContactFields"] = o.CustomContactFields
	}
	if !IsNil(o.AdditionalContacts) {
		toSerialize["additionalContacts"] = o.AdditionalContacts
	}
	if !IsNil(o.CustomerType) {
		toSerialize["customerType"] = o.CustomerType
	}
	if !IsNil(o.Terms) {
		toSerialize["terms"] = o.Terms
	}
	if !IsNil(o.SalesRepresentative) {
		toSerialize["salesRepresentative"] = o.SalesRepresentative
	}
	if !IsNil(o.Balance) {
		toSerialize["balance"] = o.Balance
	}
	if !IsNil(o.TotalBalance) {
		toSerialize["totalBalance"] = o.TotalBalance
	}
	if !IsNil(o.SalesTaxCode) {
		toSerialize["salesTaxCode"] = o.SalesTaxCode
	}
	if !IsNil(o.SalesTaxItem) {
		toSerialize["salesTaxItem"] = o.SalesTaxItem
	}
	if !IsNil(o.SalesTaxCountry) {
		toSerialize["salesTaxCountry"] = o.SalesTaxCountry
	}
	if !IsNil(o.ResaleNumber) {
		toSerialize["resaleNumber"] = o.ResaleNumber
	}
	if !IsNil(o.AccountNumber) {
		toSerialize["accountNumber"] = o.AccountNumber
	}
	if !IsNil(o.CreditLimit) {
		toSerialize["creditLimit"] = o.CreditLimit
	}
	if !IsNil(o.PreferredPaymentMethod) {
		toSerialize["preferredPaymentMethod"] = o.PreferredPaymentMethod
	}
	if !IsNil(o.CreditCard) {
		toSerialize["creditCard"] = o.CreditCard
	}
	if !IsNil(o.JobStatus) {
		toSerialize["jobStatus"] = o.JobStatus
	}
	if !IsNil(o.JobStartDate) {
		toSerialize["jobStartDate"] = o.JobStartDate
	}
	if !IsNil(o.JobProjectedEndDate) {
		toSerialize["jobProjectedEndDate"] = o.JobProjectedEndDate
	}
	if !IsNil(o.JobEndDate) {
		toSerialize["jobEndDate"] = o.JobEndDate
	}
	if !IsNil(o.JobDescription) {
		toSerialize["jobDescription"] = o.JobDescription
	}
	if !IsNil(o.JobType) {
		toSerialize["jobType"] = o.JobType
	}
	if !IsNil(o.Note) {
		toSerialize["note"] = o.Note
	}
	if !IsNil(o.AdditionalNotes) {
		toSerialize["additionalNotes"] = o.AdditionalNotes
	}
	if !IsNil(o.PreferredDeliveryMethod) {
		toSerialize["preferredDeliveryMethod"] = o.PreferredDeliveryMethod
	}
	if !IsNil(o.PriceLevel) {
		toSerialize["priceLevel"] = o.PriceLevel
	}
	if !IsNil(o.ExternalId) {
		toSerialize["externalId"] = o.ExternalId
	}
	if !IsNil(o.TaxRegistrationNumber) {
		toSerialize["taxRegistrationNumber"] = o.TaxRegistrationNumber
	}
	if !IsNil(o.Currency) {
		toSerialize["currency"] = o.Currency
	}
	if !IsNil(o.CustomFields) {
		toSerialize["customFields"] = o.CustomFields
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *QbdCustomer) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"objectType",
		"createdAt",
		"updatedAt",
		"revisionNumber",
		"name",
		"fullName",
		"isActive",
		"sublevel",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varQbdCustomer := _QbdCustomer{}

	err = json.Unmarshal(data, &varQbdCustomer)

	if err != nil {
		return err
	}

	*o = QbdCustomer(varQbdCustomer)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "objectType")
		delete(additionalProperties, "createdAt")
		delete(additionalProperties, "updatedAt")
		delete(additionalProperties, "revisionNumber")
		delete(additionalProperties, "name")
		delete(additionalProperties, "fullName")
		delete(additionalProperties, "isActive")
		delete(additionalProperties, "class")
		delete(additionalProperties, "parent")
		delete(additionalProperties, "sublevel")
		delete(additionalProperties, "companyName")
		delete(additionalProperties, "salutation")
		delete(additionalProperties, "firstName")
		delete(additionalProperties, "middleName")
		delete(additionalProperties, "lastName")
		delete(additionalProperties, "jobTitle")
		delete(additionalProperties, "billingAddress")
		delete(additionalProperties, "shippingAddress")
		delete(additionalProperties, "alternateShippingAddresses")
		delete(additionalProperties, "phone")
		delete(additionalProperties, "alternatePhone")
		delete(additionalProperties, "fax")
		delete(additionalProperties, "email")
		delete(additionalProperties, "ccEmail")
		delete(additionalProperties, "contact")
		delete(additionalProperties, "alternateContact")
		delete(additionalProperties, "customContactFields")
		delete(additionalProperties, "additionalContacts")
		delete(additionalProperties, "customerType")
		delete(additionalProperties, "terms")
		delete(additionalProperties, "salesRepresentative")
		delete(additionalProperties, "balance")
		delete(additionalProperties, "totalBalance")
		delete(additionalProperties, "salesTaxCode")
		delete(additionalProperties, "salesTaxItem")
		delete(additionalProperties, "salesTaxCountry")
		delete(additionalProperties, "resaleNumber")
		delete(additionalProperties, "accountNumber")
		delete(additionalProperties, "creditLimit")
		delete(additionalProperties, "preferredPaymentMethod")
		delete(additionalProperties, "creditCard")
		delete(additionalProperties, "jobStatus")
		delete(additionalProperties, "jobStartDate")
		delete(additionalProperties, "jobProjectedEndDate")
		delete(additionalProperties, "jobEndDate")
		delete(additionalProperties, "jobDescription")
		delete(additionalProperties, "jobType")
		delete(additionalProperties, "note")
		delete(additionalProperties, "additionalNotes")
		delete(additionalProperties, "preferredDeliveryMethod")
		delete(additionalProperties, "priceLevel")
		delete(additionalProperties, "externalId")
		delete(additionalProperties, "taxRegistrationNumber")
		delete(additionalProperties, "currency")
		delete(additionalProperties, "customFields")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableQbdCustomer struct {
	value *QbdCustomer
	isSet bool
}

func (v NullableQbdCustomer) Get() *QbdCustomer {
	return v.value
}

func (v *NullableQbdCustomer) Set(val *QbdCustomer) {
	v.value = val
	v.isSet = true
}

func (v NullableQbdCustomer) IsSet() bool {
	return v.isSet
}

func (v *NullableQbdCustomer) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQbdCustomer(val *QbdCustomer) *NullableQbdCustomer {
	return &NullableQbdCustomer{value: val, isSet: true}
}

func (v NullableQbdCustomer) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQbdCustomer) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


