/*
Conductor API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package conductor

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the QbdSubscribedService type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QbdSubscribedService{}

// QbdSubscribedService struct for QbdSubscribedService
type QbdSubscribedService struct {
	// The list of Intuit services that this company is or has been subscribed to, for example, Intuit Payroll, QBMS.
	Services []QbdService `json:"services"`
}

type _QbdSubscribedService QbdSubscribedService

// NewQbdSubscribedService instantiates a new QbdSubscribedService object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQbdSubscribedService(services []QbdService) *QbdSubscribedService {
	this := QbdSubscribedService{}
	this.Services = services
	return &this
}

// NewQbdSubscribedServiceWithDefaults instantiates a new QbdSubscribedService object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQbdSubscribedServiceWithDefaults() *QbdSubscribedService {
	this := QbdSubscribedService{}
	return &this
}

// GetServices returns the Services field value
func (o *QbdSubscribedService) GetServices() []QbdService {
	if o == nil {
		var ret []QbdService
		return ret
	}

	return o.Services
}

// GetServicesOk returns a tuple with the Services field value
// and a boolean to check if the value has been set.
func (o *QbdSubscribedService) GetServicesOk() ([]QbdService, bool) {
	if o == nil {
		return nil, false
	}
	return o.Services, true
}

// SetServices sets field value
func (o *QbdSubscribedService) SetServices(v []QbdService) {
	o.Services = v
}

func (o QbdSubscribedService) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QbdSubscribedService) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["services"] = o.Services
	return toSerialize, nil
}

func (o *QbdSubscribedService) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"services",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varQbdSubscribedService := _QbdSubscribedService{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varQbdSubscribedService)

	if err != nil {
		return err
	}

	*o = QbdSubscribedService(varQbdSubscribedService)

	return err
}

type NullableQbdSubscribedService struct {
	value *QbdSubscribedService
	isSet bool
}

func (v NullableQbdSubscribedService) Get() *QbdSubscribedService {
	return v.value
}

func (v *NullableQbdSubscribedService) Set(val *QbdSubscribedService) {
	v.value = val
	v.isSet = true
}

func (v NullableQbdSubscribedService) IsSet() bool {
	return v.isSet
}

func (v *NullableQbdSubscribedService) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQbdSubscribedService(val *QbdSubscribedService) *NullableQbdSubscribedService {
	return &NullableQbdSubscribedService{value: val, isSet: true}
}

func (v NullableQbdSubscribedService) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQbdSubscribedService) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


