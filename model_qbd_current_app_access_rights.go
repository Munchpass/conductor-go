/*
Conductor API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package conductor

import (
	"encoding/json"
	"fmt"
)

// checks if the QbdCurrentAppAccessRights type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QbdCurrentAppAccessRights{}

// QbdCurrentAppAccessRights struct for QbdCurrentAppAccessRights
type QbdCurrentAppAccessRights struct {
	// Indicates whether applications can use auto-login to access this company file.
	IsAutomaticLoginAllowed bool `json:"isAutomaticLoginAllowed"`
	// If auto-login is allowed for this company file, specifies the user name that is allowed to use auto-login.
	AutomaticLoginUserName string `json:"automaticLoginUserName"`
	// Indicates whether access is allowed to personal (sensitive) data in this company file.
	IsPersonalDataAccessAllowed bool `json:"isPersonalDataAccessAllowed"`
	AdditionalProperties map[string]interface{}
}

type _QbdCurrentAppAccessRights QbdCurrentAppAccessRights

// NewQbdCurrentAppAccessRights instantiates a new QbdCurrentAppAccessRights object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQbdCurrentAppAccessRights(isAutomaticLoginAllowed bool, automaticLoginUserName string, isPersonalDataAccessAllowed bool) *QbdCurrentAppAccessRights {
	this := QbdCurrentAppAccessRights{}
	this.IsAutomaticLoginAllowed = isAutomaticLoginAllowed
	this.AutomaticLoginUserName = automaticLoginUserName
	this.IsPersonalDataAccessAllowed = isPersonalDataAccessAllowed
	return &this
}

// NewQbdCurrentAppAccessRightsWithDefaults instantiates a new QbdCurrentAppAccessRights object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQbdCurrentAppAccessRightsWithDefaults() *QbdCurrentAppAccessRights {
	this := QbdCurrentAppAccessRights{}
	return &this
}

// GetIsAutomaticLoginAllowed returns the IsAutomaticLoginAllowed field value
func (o *QbdCurrentAppAccessRights) GetIsAutomaticLoginAllowed() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsAutomaticLoginAllowed
}

// GetIsAutomaticLoginAllowedOk returns a tuple with the IsAutomaticLoginAllowed field value
// and a boolean to check if the value has been set.
func (o *QbdCurrentAppAccessRights) GetIsAutomaticLoginAllowedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsAutomaticLoginAllowed, true
}

// SetIsAutomaticLoginAllowed sets field value
func (o *QbdCurrentAppAccessRights) SetIsAutomaticLoginAllowed(v bool) {
	o.IsAutomaticLoginAllowed = v
}

// GetAutomaticLoginUserName returns the AutomaticLoginUserName field value
func (o *QbdCurrentAppAccessRights) GetAutomaticLoginUserName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AutomaticLoginUserName
}

// GetAutomaticLoginUserNameOk returns a tuple with the AutomaticLoginUserName field value
// and a boolean to check if the value has been set.
func (o *QbdCurrentAppAccessRights) GetAutomaticLoginUserNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AutomaticLoginUserName, true
}

// SetAutomaticLoginUserName sets field value
func (o *QbdCurrentAppAccessRights) SetAutomaticLoginUserName(v string) {
	o.AutomaticLoginUserName = v
}

// GetIsPersonalDataAccessAllowed returns the IsPersonalDataAccessAllowed field value
func (o *QbdCurrentAppAccessRights) GetIsPersonalDataAccessAllowed() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsPersonalDataAccessAllowed
}

// GetIsPersonalDataAccessAllowedOk returns a tuple with the IsPersonalDataAccessAllowed field value
// and a boolean to check if the value has been set.
func (o *QbdCurrentAppAccessRights) GetIsPersonalDataAccessAllowedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsPersonalDataAccessAllowed, true
}

// SetIsPersonalDataAccessAllowed sets field value
func (o *QbdCurrentAppAccessRights) SetIsPersonalDataAccessAllowed(v bool) {
	o.IsPersonalDataAccessAllowed = v
}

func (o QbdCurrentAppAccessRights) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QbdCurrentAppAccessRights) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["isAutomaticLoginAllowed"] = o.IsAutomaticLoginAllowed
	toSerialize["automaticLoginUserName"] = o.AutomaticLoginUserName
	toSerialize["isPersonalDataAccessAllowed"] = o.IsPersonalDataAccessAllowed

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *QbdCurrentAppAccessRights) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"isAutomaticLoginAllowed",
		"automaticLoginUserName",
		"isPersonalDataAccessAllowed",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varQbdCurrentAppAccessRights := _QbdCurrentAppAccessRights{}

	err = json.Unmarshal(data, &varQbdCurrentAppAccessRights)

	if err != nil {
		return err
	}

	*o = QbdCurrentAppAccessRights(varQbdCurrentAppAccessRights)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "isAutomaticLoginAllowed")
		delete(additionalProperties, "automaticLoginUserName")
		delete(additionalProperties, "isPersonalDataAccessAllowed")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableQbdCurrentAppAccessRights struct {
	value *QbdCurrentAppAccessRights
	isSet bool
}

func (v NullableQbdCurrentAppAccessRights) Get() *QbdCurrentAppAccessRights {
	return v.value
}

func (v *NullableQbdCurrentAppAccessRights) Set(val *QbdCurrentAppAccessRights) {
	v.value = val
	v.isSet = true
}

func (v NullableQbdCurrentAppAccessRights) IsSet() bool {
	return v.isSet
}

func (v *NullableQbdCurrentAppAccessRights) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQbdCurrentAppAccessRights(val *QbdCurrentAppAccessRights) *NullableQbdCurrentAppAccessRights {
	return &NullableQbdCurrentAppAccessRights{value: val, isSet: true}
}

func (v NullableQbdCurrentAppAccessRights) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQbdCurrentAppAccessRights) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


