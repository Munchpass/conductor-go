/*
Conductor API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package conductor

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the QbdSalesReceiptLineGroupOverrideUnitOfMeasureSet type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QbdSalesReceiptLineGroupOverrideUnitOfMeasureSet{}

// QbdSalesReceiptLineGroupOverrideUnitOfMeasureSet Specifies an alternative unit-of-measure set when updating this sales receipt line group's `unitOfMeasure` field (e.g., \"pound\" or \"kilogram\"). This allows you to select units from a different set than the item's default unit-of-measure set, which remains unchanged on the item itself. The override applies only to this specific line. For example, you can sell an item typically measured in volume units using weight units in a specific transaction by specifying a different unit-of-measure set with this field.
type QbdSalesReceiptLineGroupOverrideUnitOfMeasureSet struct {
	// The unique identifier assigned by QuickBooks to this object. This ID is unique across all objects of the same type, but not across different QuickBooks object types.
	Id string `json:"id"`
	// The fully-qualified unique name for this object, formed by combining the names of its parent objects with its own `name`, separated by colons. Not case-sensitive.
	FullName string `json:"fullName"`
}

type _QbdSalesReceiptLineGroupOverrideUnitOfMeasureSet QbdSalesReceiptLineGroupOverrideUnitOfMeasureSet

// NewQbdSalesReceiptLineGroupOverrideUnitOfMeasureSet instantiates a new QbdSalesReceiptLineGroupOverrideUnitOfMeasureSet object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQbdSalesReceiptLineGroupOverrideUnitOfMeasureSet(id string, fullName string) *QbdSalesReceiptLineGroupOverrideUnitOfMeasureSet {
	this := QbdSalesReceiptLineGroupOverrideUnitOfMeasureSet{}
	this.Id = id
	this.FullName = fullName
	return &this
}

// NewQbdSalesReceiptLineGroupOverrideUnitOfMeasureSetWithDefaults instantiates a new QbdSalesReceiptLineGroupOverrideUnitOfMeasureSet object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQbdSalesReceiptLineGroupOverrideUnitOfMeasureSetWithDefaults() *QbdSalesReceiptLineGroupOverrideUnitOfMeasureSet {
	this := QbdSalesReceiptLineGroupOverrideUnitOfMeasureSet{}
	return &this
}

// GetId returns the Id field value
func (o *QbdSalesReceiptLineGroupOverrideUnitOfMeasureSet) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *QbdSalesReceiptLineGroupOverrideUnitOfMeasureSet) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *QbdSalesReceiptLineGroupOverrideUnitOfMeasureSet) SetId(v string) {
	o.Id = v
}

// GetFullName returns the FullName field value
func (o *QbdSalesReceiptLineGroupOverrideUnitOfMeasureSet) GetFullName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FullName
}

// GetFullNameOk returns a tuple with the FullName field value
// and a boolean to check if the value has been set.
func (o *QbdSalesReceiptLineGroupOverrideUnitOfMeasureSet) GetFullNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FullName, true
}

// SetFullName sets field value
func (o *QbdSalesReceiptLineGroupOverrideUnitOfMeasureSet) SetFullName(v string) {
	o.FullName = v
}

func (o QbdSalesReceiptLineGroupOverrideUnitOfMeasureSet) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QbdSalesReceiptLineGroupOverrideUnitOfMeasureSet) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["fullName"] = o.FullName
	return toSerialize, nil
}

func (o *QbdSalesReceiptLineGroupOverrideUnitOfMeasureSet) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"fullName",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varQbdSalesReceiptLineGroupOverrideUnitOfMeasureSet := _QbdSalesReceiptLineGroupOverrideUnitOfMeasureSet{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varQbdSalesReceiptLineGroupOverrideUnitOfMeasureSet)

	if err != nil {
		return err
	}

	*o = QbdSalesReceiptLineGroupOverrideUnitOfMeasureSet(varQbdSalesReceiptLineGroupOverrideUnitOfMeasureSet)

	return err
}

type NullableQbdSalesReceiptLineGroupOverrideUnitOfMeasureSet struct {
	value *QbdSalesReceiptLineGroupOverrideUnitOfMeasureSet
	isSet bool
}

func (v NullableQbdSalesReceiptLineGroupOverrideUnitOfMeasureSet) Get() *QbdSalesReceiptLineGroupOverrideUnitOfMeasureSet {
	return v.value
}

func (v *NullableQbdSalesReceiptLineGroupOverrideUnitOfMeasureSet) Set(val *QbdSalesReceiptLineGroupOverrideUnitOfMeasureSet) {
	v.value = val
	v.isSet = true
}

func (v NullableQbdSalesReceiptLineGroupOverrideUnitOfMeasureSet) IsSet() bool {
	return v.isSet
}

func (v *NullableQbdSalesReceiptLineGroupOverrideUnitOfMeasureSet) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQbdSalesReceiptLineGroupOverrideUnitOfMeasureSet(val *QbdSalesReceiptLineGroupOverrideUnitOfMeasureSet) *NullableQbdSalesReceiptLineGroupOverrideUnitOfMeasureSet {
	return &NullableQbdSalesReceiptLineGroupOverrideUnitOfMeasureSet{value: val, isSet: true}
}

func (v NullableQbdSalesReceiptLineGroupOverrideUnitOfMeasureSet) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQbdSalesReceiptLineGroupOverrideUnitOfMeasureSet) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


