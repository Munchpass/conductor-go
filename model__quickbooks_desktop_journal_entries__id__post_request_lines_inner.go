/*
Conductor API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package conductor

import (
	"encoding/json"
	"fmt"
)

// checks if the QuickbooksDesktopJournalEntriesIdPostRequestLinesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QuickbooksDesktopJournalEntriesIdPostRequestLinesInner{}

// QuickbooksDesktopJournalEntriesIdPostRequestLinesInner struct for QuickbooksDesktopJournalEntriesIdPostRequestLinesInner
type QuickbooksDesktopJournalEntriesIdPostRequestLinesInner struct {
	// The QuickBooks-assigned unique identifier of an existing journal line you wish to retain or update.  **IMPORTANT**: Set this field to `-1` for new journal lines you wish to add.
	Id string `json:"id"`
	// The type of journal line (debit or credit).
	JournalLineType *string `json:"journalLineType,omitempty"`
	// The account to which this journal line is being credited or debited.
	AccountId *string `json:"accountId,omitempty"`
	// The monetary amount of this journal line, represented as a decimal string.
	Amount *string `json:"amount,omitempty"`
	// A memo or note for this journal line.
	Memo *string `json:"memo,omitempty"`
	// The customer, vendor, employee, or other entity associated with this journal line.  **IMPORTANT**: If the journal line's `account` is an Accounts Receivable (A/R) account, this field must refer to a customer. If the journal line's `account` is an Accounts Payable (A/P) account, this field must refer to a vendor. If these requirements are not met, QuickBooks Desktop will not record the transaction.
	EntityId *string `json:"entityId,omitempty"`
	// The journal line's class. Classes can be used to categorize objects into meaningful segments, such as department, location, or type of work. In QuickBooks, class tracking is off by default. If a class is specified for the entire parent transaction, it is automatically applied to all journal lines unless overridden here, at the transaction line level.
	ClassId *string `json:"classId,omitempty"`
	// The sales-tax item used to calculate the actual tax amount for this journal line's transactions by applying a specific tax rate collected for a single tax agency. Unlike `salesTaxCode`, which only indicates general taxability, this field drives the actual tax calculation and reporting.
	SalesTaxItemId *string `json:"salesTaxItemId,omitempty"`
	// The billing status of this journal line.
	BillingStatus *string `json:"billingStatus,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _QuickbooksDesktopJournalEntriesIdPostRequestLinesInner QuickbooksDesktopJournalEntriesIdPostRequestLinesInner

// NewQuickbooksDesktopJournalEntriesIdPostRequestLinesInner instantiates a new QuickbooksDesktopJournalEntriesIdPostRequestLinesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQuickbooksDesktopJournalEntriesIdPostRequestLinesInner(id string) *QuickbooksDesktopJournalEntriesIdPostRequestLinesInner {
	this := QuickbooksDesktopJournalEntriesIdPostRequestLinesInner{}
	this.Id = id
	return &this
}

// NewQuickbooksDesktopJournalEntriesIdPostRequestLinesInnerWithDefaults instantiates a new QuickbooksDesktopJournalEntriesIdPostRequestLinesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQuickbooksDesktopJournalEntriesIdPostRequestLinesInnerWithDefaults() *QuickbooksDesktopJournalEntriesIdPostRequestLinesInner {
	this := QuickbooksDesktopJournalEntriesIdPostRequestLinesInner{}
	return &this
}

// GetId returns the Id field value
func (o *QuickbooksDesktopJournalEntriesIdPostRequestLinesInner) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopJournalEntriesIdPostRequestLinesInner) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *QuickbooksDesktopJournalEntriesIdPostRequestLinesInner) SetId(v string) {
	o.Id = v
}

// GetJournalLineType returns the JournalLineType field value if set, zero value otherwise.
func (o *QuickbooksDesktopJournalEntriesIdPostRequestLinesInner) GetJournalLineType() string {
	if o == nil || IsNil(o.JournalLineType) {
		var ret string
		return ret
	}
	return *o.JournalLineType
}

// GetJournalLineTypeOk returns a tuple with the JournalLineType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopJournalEntriesIdPostRequestLinesInner) GetJournalLineTypeOk() (*string, bool) {
	if o == nil || IsNil(o.JournalLineType) {
		return nil, false
	}
	return o.JournalLineType, true
}

// HasJournalLineType returns a boolean if a field has been set.
func (o *QuickbooksDesktopJournalEntriesIdPostRequestLinesInner) HasJournalLineType() bool {
	if o != nil && !IsNil(o.JournalLineType) {
		return true
	}

	return false
}

// SetJournalLineType gets a reference to the given string and assigns it to the JournalLineType field.
func (o *QuickbooksDesktopJournalEntriesIdPostRequestLinesInner) SetJournalLineType(v string) {
	o.JournalLineType = &v
}

// GetAccountId returns the AccountId field value if set, zero value otherwise.
func (o *QuickbooksDesktopJournalEntriesIdPostRequestLinesInner) GetAccountId() string {
	if o == nil || IsNil(o.AccountId) {
		var ret string
		return ret
	}
	return *o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopJournalEntriesIdPostRequestLinesInner) GetAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.AccountId) {
		return nil, false
	}
	return o.AccountId, true
}

// HasAccountId returns a boolean if a field has been set.
func (o *QuickbooksDesktopJournalEntriesIdPostRequestLinesInner) HasAccountId() bool {
	if o != nil && !IsNil(o.AccountId) {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given string and assigns it to the AccountId field.
func (o *QuickbooksDesktopJournalEntriesIdPostRequestLinesInner) SetAccountId(v string) {
	o.AccountId = &v
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *QuickbooksDesktopJournalEntriesIdPostRequestLinesInner) GetAmount() string {
	if o == nil || IsNil(o.Amount) {
		var ret string
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopJournalEntriesIdPostRequestLinesInner) GetAmountOk() (*string, bool) {
	if o == nil || IsNil(o.Amount) {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *QuickbooksDesktopJournalEntriesIdPostRequestLinesInner) HasAmount() bool {
	if o != nil && !IsNil(o.Amount) {
		return true
	}

	return false
}

// SetAmount gets a reference to the given string and assigns it to the Amount field.
func (o *QuickbooksDesktopJournalEntriesIdPostRequestLinesInner) SetAmount(v string) {
	o.Amount = &v
}

// GetMemo returns the Memo field value if set, zero value otherwise.
func (o *QuickbooksDesktopJournalEntriesIdPostRequestLinesInner) GetMemo() string {
	if o == nil || IsNil(o.Memo) {
		var ret string
		return ret
	}
	return *o.Memo
}

// GetMemoOk returns a tuple with the Memo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopJournalEntriesIdPostRequestLinesInner) GetMemoOk() (*string, bool) {
	if o == nil || IsNil(o.Memo) {
		return nil, false
	}
	return o.Memo, true
}

// HasMemo returns a boolean if a field has been set.
func (o *QuickbooksDesktopJournalEntriesIdPostRequestLinesInner) HasMemo() bool {
	if o != nil && !IsNil(o.Memo) {
		return true
	}

	return false
}

// SetMemo gets a reference to the given string and assigns it to the Memo field.
func (o *QuickbooksDesktopJournalEntriesIdPostRequestLinesInner) SetMemo(v string) {
	o.Memo = &v
}

// GetEntityId returns the EntityId field value if set, zero value otherwise.
func (o *QuickbooksDesktopJournalEntriesIdPostRequestLinesInner) GetEntityId() string {
	if o == nil || IsNil(o.EntityId) {
		var ret string
		return ret
	}
	return *o.EntityId
}

// GetEntityIdOk returns a tuple with the EntityId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopJournalEntriesIdPostRequestLinesInner) GetEntityIdOk() (*string, bool) {
	if o == nil || IsNil(o.EntityId) {
		return nil, false
	}
	return o.EntityId, true
}

// HasEntityId returns a boolean if a field has been set.
func (o *QuickbooksDesktopJournalEntriesIdPostRequestLinesInner) HasEntityId() bool {
	if o != nil && !IsNil(o.EntityId) {
		return true
	}

	return false
}

// SetEntityId gets a reference to the given string and assigns it to the EntityId field.
func (o *QuickbooksDesktopJournalEntriesIdPostRequestLinesInner) SetEntityId(v string) {
	o.EntityId = &v
}

// GetClassId returns the ClassId field value if set, zero value otherwise.
func (o *QuickbooksDesktopJournalEntriesIdPostRequestLinesInner) GetClassId() string {
	if o == nil || IsNil(o.ClassId) {
		var ret string
		return ret
	}
	return *o.ClassId
}

// GetClassIdOk returns a tuple with the ClassId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopJournalEntriesIdPostRequestLinesInner) GetClassIdOk() (*string, bool) {
	if o == nil || IsNil(o.ClassId) {
		return nil, false
	}
	return o.ClassId, true
}

// HasClassId returns a boolean if a field has been set.
func (o *QuickbooksDesktopJournalEntriesIdPostRequestLinesInner) HasClassId() bool {
	if o != nil && !IsNil(o.ClassId) {
		return true
	}

	return false
}

// SetClassId gets a reference to the given string and assigns it to the ClassId field.
func (o *QuickbooksDesktopJournalEntriesIdPostRequestLinesInner) SetClassId(v string) {
	o.ClassId = &v
}

// GetSalesTaxItemId returns the SalesTaxItemId field value if set, zero value otherwise.
func (o *QuickbooksDesktopJournalEntriesIdPostRequestLinesInner) GetSalesTaxItemId() string {
	if o == nil || IsNil(o.SalesTaxItemId) {
		var ret string
		return ret
	}
	return *o.SalesTaxItemId
}

// GetSalesTaxItemIdOk returns a tuple with the SalesTaxItemId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopJournalEntriesIdPostRequestLinesInner) GetSalesTaxItemIdOk() (*string, bool) {
	if o == nil || IsNil(o.SalesTaxItemId) {
		return nil, false
	}
	return o.SalesTaxItemId, true
}

// HasSalesTaxItemId returns a boolean if a field has been set.
func (o *QuickbooksDesktopJournalEntriesIdPostRequestLinesInner) HasSalesTaxItemId() bool {
	if o != nil && !IsNil(o.SalesTaxItemId) {
		return true
	}

	return false
}

// SetSalesTaxItemId gets a reference to the given string and assigns it to the SalesTaxItemId field.
func (o *QuickbooksDesktopJournalEntriesIdPostRequestLinesInner) SetSalesTaxItemId(v string) {
	o.SalesTaxItemId = &v
}

// GetBillingStatus returns the BillingStatus field value if set, zero value otherwise.
func (o *QuickbooksDesktopJournalEntriesIdPostRequestLinesInner) GetBillingStatus() string {
	if o == nil || IsNil(o.BillingStatus) {
		var ret string
		return ret
	}
	return *o.BillingStatus
}

// GetBillingStatusOk returns a tuple with the BillingStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopJournalEntriesIdPostRequestLinesInner) GetBillingStatusOk() (*string, bool) {
	if o == nil || IsNil(o.BillingStatus) {
		return nil, false
	}
	return o.BillingStatus, true
}

// HasBillingStatus returns a boolean if a field has been set.
func (o *QuickbooksDesktopJournalEntriesIdPostRequestLinesInner) HasBillingStatus() bool {
	if o != nil && !IsNil(o.BillingStatus) {
		return true
	}

	return false
}

// SetBillingStatus gets a reference to the given string and assigns it to the BillingStatus field.
func (o *QuickbooksDesktopJournalEntriesIdPostRequestLinesInner) SetBillingStatus(v string) {
	o.BillingStatus = &v
}

func (o QuickbooksDesktopJournalEntriesIdPostRequestLinesInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QuickbooksDesktopJournalEntriesIdPostRequestLinesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	if !IsNil(o.JournalLineType) {
		toSerialize["journalLineType"] = o.JournalLineType
	}
	if !IsNil(o.AccountId) {
		toSerialize["accountId"] = o.AccountId
	}
	if !IsNil(o.Amount) {
		toSerialize["amount"] = o.Amount
	}
	if !IsNil(o.Memo) {
		toSerialize["memo"] = o.Memo
	}
	if !IsNil(o.EntityId) {
		toSerialize["entityId"] = o.EntityId
	}
	if !IsNil(o.ClassId) {
		toSerialize["classId"] = o.ClassId
	}
	if !IsNil(o.SalesTaxItemId) {
		toSerialize["salesTaxItemId"] = o.SalesTaxItemId
	}
	if !IsNil(o.BillingStatus) {
		toSerialize["billingStatus"] = o.BillingStatus
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *QuickbooksDesktopJournalEntriesIdPostRequestLinesInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varQuickbooksDesktopJournalEntriesIdPostRequestLinesInner := _QuickbooksDesktopJournalEntriesIdPostRequestLinesInner{}

	err = json.Unmarshal(data, &varQuickbooksDesktopJournalEntriesIdPostRequestLinesInner)

	if err != nil {
		return err
	}

	*o = QuickbooksDesktopJournalEntriesIdPostRequestLinesInner(varQuickbooksDesktopJournalEntriesIdPostRequestLinesInner)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "journalLineType")
		delete(additionalProperties, "accountId")
		delete(additionalProperties, "amount")
		delete(additionalProperties, "memo")
		delete(additionalProperties, "entityId")
		delete(additionalProperties, "classId")
		delete(additionalProperties, "salesTaxItemId")
		delete(additionalProperties, "billingStatus")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableQuickbooksDesktopJournalEntriesIdPostRequestLinesInner struct {
	value *QuickbooksDesktopJournalEntriesIdPostRequestLinesInner
	isSet bool
}

func (v NullableQuickbooksDesktopJournalEntriesIdPostRequestLinesInner) Get() *QuickbooksDesktopJournalEntriesIdPostRequestLinesInner {
	return v.value
}

func (v *NullableQuickbooksDesktopJournalEntriesIdPostRequestLinesInner) Set(val *QuickbooksDesktopJournalEntriesIdPostRequestLinesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableQuickbooksDesktopJournalEntriesIdPostRequestLinesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableQuickbooksDesktopJournalEntriesIdPostRequestLinesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQuickbooksDesktopJournalEntriesIdPostRequestLinesInner(val *QuickbooksDesktopJournalEntriesIdPostRequestLinesInner) *NullableQuickbooksDesktopJournalEntriesIdPostRequestLinesInner {
	return &NullableQuickbooksDesktopJournalEntriesIdPostRequestLinesInner{value: val, isSet: true}
}

func (v NullableQuickbooksDesktopJournalEntriesIdPostRequestLinesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQuickbooksDesktopJournalEntriesIdPostRequestLinesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


