/*
Conductor API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package conductor

import (
	"encoding/json"
	"fmt"
)

// checks if the QuickbooksDesktopPurchaseOrdersPostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QuickbooksDesktopPurchaseOrdersPostRequest{}

// QuickbooksDesktopPurchaseOrdersPostRequest struct for QuickbooksDesktopPurchaseOrdersPostRequest
type QuickbooksDesktopPurchaseOrdersPostRequest struct {
	// The vendor who sent this purchase order for goods or services purchased.
	VendorId *string `json:"vendorId,omitempty"`
	// The purchase order's class. Classes can be used to categorize objects into meaningful segments, such as department, location, or type of work. In QuickBooks, class tracking is off by default. A class defined here is automatically used in this purchase order's line items unless overridden at the line item level.
	ClassId *string `json:"classId,omitempty"`
	// The site location where inventory for the item associated with this purchase order is stored.
	InventorySiteId *string `json:"inventorySiteId,omitempty"`
	// The customer, vendor, employee, or other entity to whom this purchase order is to be shipped.
	ShipToEntityId *string `json:"shipToEntityId,omitempty"`
	// The predefined template in QuickBooks that determines the layout and formatting for this purchase order when printed or displayed.
	DocumentTemplateId *string `json:"documentTemplateId,omitempty"`
	// The date of this purchase order, in ISO 8601 format (YYYY-MM-DD).
	TransactionDate string `json:"transactionDate"`
	// The case-sensitive user-defined reference number for this purchase order, which can be used to identify the transaction in QuickBooks. This value is not required to be unique and can be arbitrarily changed by the QuickBooks user. When left blank in this create request, this field will be left blank in QuickBooks (i.e., it does *not* auto-increment).
	RefNumber *string `json:"refNumber,omitempty"`
	VendorAddress *QuickbooksDesktopPurchaseOrdersPostRequestVendorAddress `json:"vendorAddress,omitempty"`
	ShippingAddress *QuickbooksDesktopPurchaseOrdersPostRequestShippingAddress `json:"shippingAddress,omitempty"`
	// The purchase order's payment terms, defining when payment is due and any applicable discounts.
	TermsId *string `json:"termsId,omitempty"`
	// The date by which this purchase order must be paid, in ISO 8601 format (YYYY-MM-DD).
	DueDate *string `json:"dueDate,omitempty"`
	// The date on which shipment of this purchase order is expected to be completed, in ISO 8601 format (YYYY-MM-DD).
	ExpectedDate *string `json:"expectedDate,omitempty"`
	// The shipping method used for this purchase order, such as standard mail or overnight delivery.
	ShippingMethodId *string `json:"shippingMethodId,omitempty"`
	// The origin location from where the product associated with this purchase order is shipped. This is the point at which ownership and liability for goods transfer from seller to buyer. Internally, QuickBooks uses the term \"FOB\" for this field, which stands for \"freight on board\". This field is informational and has no accounting implications.
	ShipmentOrigin *string `json:"shipmentOrigin,omitempty"`
	// A memo or note for this purchase order that appears in reports, but not on the purchase order.
	Memo *string `json:"memo,omitempty"`
	// A message to be printed on this purchase order for the vendor to read.
	VendorMessage *string `json:"vendorMessage,omitempty"`
	// Indicates whether this purchase order is included in the queue of documents for QuickBooks to print.
	IsQueuedForPrint *bool `json:"isQueuedForPrint,omitempty"`
	// Indicates whether this purchase order is included in the queue of documents for QuickBooks to email to the customer.
	IsQueuedForEmail *bool `json:"isQueuedForEmail,omitempty"`
	// The sales-tax code for this purchase order, determining whether it is taxable or non-taxable. If set, this overrides any sales-tax codes defined on the vendor. This can be overridden on the purchase order's individual lines.  Default codes include \"Non\" (non-taxable) and \"Tax\" (taxable), but custom codes can also be created in QuickBooks. If QuickBooks is not set up to charge sales tax (via the \"Do You Charge Sales Tax?\" preference), it will assign the default non-taxable code to all sales.
	SalesTaxCodeId *string `json:"salesTaxCodeId,omitempty"`
	// A built-in custom field for additional information specific to this purchase order. Unlike the user-defined fields in the `customFields` array, this is a standard QuickBooks field that exists for all purchase orders for convenience. Developers often use this field for tracking information that doesn't fit into other standard QuickBooks fields. Hidden by default in the QuickBooks UI.
	OtherCustomField1 *string `json:"otherCustomField1,omitempty"`
	// A second built-in custom field for additional information specific to this purchase order. Unlike the user-defined fields in the `customFields` array, this is a standard QuickBooks field that exists for all purchase orders for convenience. Like `otherCustomField1`, developers often use this field for tracking information that doesn't fit into other standard QuickBooks fields. Hidden by default in the QuickBooks UI.
	OtherCustomField2 *string `json:"otherCustomField2,omitempty"`
	// The market exchange rate between this purchase order's currency and the home currency in QuickBooks at the time of this transaction. Represented as a decimal value (e.g., 1.2345 for 1 EUR = 1.2345 USD if USD is the home currency).
	ExchangeRate *float32 `json:"exchangeRate,omitempty"`
	// A globally unique identifier (GUID) you, the developer, can provide for tracking this object in your external system. This field is immutable and can only be set during object creation.  **IMPORTANT**: This field must be formatted as a valid GUID; otherwise, QuickBooks will return an error.
	ExternalId *string `json:"externalId,omitempty"`
	// The purchase order's line items, each representing a single product or service ordered.  **IMPORTANT**: You must specify `lines`, `lineGroups`, or both when creating a purchase order.
	Lines []QuickbooksDesktopPurchaseOrdersPostRequestLinesInner `json:"lines,omitempty"`
	// The purchase order's line item groups, each representing a predefined set of related items.  **IMPORTANT**: You must specify `lines`, `lineGroups`, or both when creating a purchase order.
	LineGroups []QuickbooksDesktopPurchaseOrdersPostRequestLineGroupsInner `json:"lineGroups,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _QuickbooksDesktopPurchaseOrdersPostRequest QuickbooksDesktopPurchaseOrdersPostRequest

// NewQuickbooksDesktopPurchaseOrdersPostRequest instantiates a new QuickbooksDesktopPurchaseOrdersPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQuickbooksDesktopPurchaseOrdersPostRequest(transactionDate string) *QuickbooksDesktopPurchaseOrdersPostRequest {
	this := QuickbooksDesktopPurchaseOrdersPostRequest{}
	this.TransactionDate = transactionDate
	return &this
}

// NewQuickbooksDesktopPurchaseOrdersPostRequestWithDefaults instantiates a new QuickbooksDesktopPurchaseOrdersPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQuickbooksDesktopPurchaseOrdersPostRequestWithDefaults() *QuickbooksDesktopPurchaseOrdersPostRequest {
	this := QuickbooksDesktopPurchaseOrdersPostRequest{}
	return &this
}

// GetVendorId returns the VendorId field value if set, zero value otherwise.
func (o *QuickbooksDesktopPurchaseOrdersPostRequest) GetVendorId() string {
	if o == nil || IsNil(o.VendorId) {
		var ret string
		return ret
	}
	return *o.VendorId
}

// GetVendorIdOk returns a tuple with the VendorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopPurchaseOrdersPostRequest) GetVendorIdOk() (*string, bool) {
	if o == nil || IsNil(o.VendorId) {
		return nil, false
	}
	return o.VendorId, true
}

// HasVendorId returns a boolean if a field has been set.
func (o *QuickbooksDesktopPurchaseOrdersPostRequest) HasVendorId() bool {
	if o != nil && !IsNil(o.VendorId) {
		return true
	}

	return false
}

// SetVendorId gets a reference to the given string and assigns it to the VendorId field.
func (o *QuickbooksDesktopPurchaseOrdersPostRequest) SetVendorId(v string) {
	o.VendorId = &v
}

// GetClassId returns the ClassId field value if set, zero value otherwise.
func (o *QuickbooksDesktopPurchaseOrdersPostRequest) GetClassId() string {
	if o == nil || IsNil(o.ClassId) {
		var ret string
		return ret
	}
	return *o.ClassId
}

// GetClassIdOk returns a tuple with the ClassId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopPurchaseOrdersPostRequest) GetClassIdOk() (*string, bool) {
	if o == nil || IsNil(o.ClassId) {
		return nil, false
	}
	return o.ClassId, true
}

// HasClassId returns a boolean if a field has been set.
func (o *QuickbooksDesktopPurchaseOrdersPostRequest) HasClassId() bool {
	if o != nil && !IsNil(o.ClassId) {
		return true
	}

	return false
}

// SetClassId gets a reference to the given string and assigns it to the ClassId field.
func (o *QuickbooksDesktopPurchaseOrdersPostRequest) SetClassId(v string) {
	o.ClassId = &v
}

// GetInventorySiteId returns the InventorySiteId field value if set, zero value otherwise.
func (o *QuickbooksDesktopPurchaseOrdersPostRequest) GetInventorySiteId() string {
	if o == nil || IsNil(o.InventorySiteId) {
		var ret string
		return ret
	}
	return *o.InventorySiteId
}

// GetInventorySiteIdOk returns a tuple with the InventorySiteId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopPurchaseOrdersPostRequest) GetInventorySiteIdOk() (*string, bool) {
	if o == nil || IsNil(o.InventorySiteId) {
		return nil, false
	}
	return o.InventorySiteId, true
}

// HasInventorySiteId returns a boolean if a field has been set.
func (o *QuickbooksDesktopPurchaseOrdersPostRequest) HasInventorySiteId() bool {
	if o != nil && !IsNil(o.InventorySiteId) {
		return true
	}

	return false
}

// SetInventorySiteId gets a reference to the given string and assigns it to the InventorySiteId field.
func (o *QuickbooksDesktopPurchaseOrdersPostRequest) SetInventorySiteId(v string) {
	o.InventorySiteId = &v
}

// GetShipToEntityId returns the ShipToEntityId field value if set, zero value otherwise.
func (o *QuickbooksDesktopPurchaseOrdersPostRequest) GetShipToEntityId() string {
	if o == nil || IsNil(o.ShipToEntityId) {
		var ret string
		return ret
	}
	return *o.ShipToEntityId
}

// GetShipToEntityIdOk returns a tuple with the ShipToEntityId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopPurchaseOrdersPostRequest) GetShipToEntityIdOk() (*string, bool) {
	if o == nil || IsNil(o.ShipToEntityId) {
		return nil, false
	}
	return o.ShipToEntityId, true
}

// HasShipToEntityId returns a boolean if a field has been set.
func (o *QuickbooksDesktopPurchaseOrdersPostRequest) HasShipToEntityId() bool {
	if o != nil && !IsNil(o.ShipToEntityId) {
		return true
	}

	return false
}

// SetShipToEntityId gets a reference to the given string and assigns it to the ShipToEntityId field.
func (o *QuickbooksDesktopPurchaseOrdersPostRequest) SetShipToEntityId(v string) {
	o.ShipToEntityId = &v
}

// GetDocumentTemplateId returns the DocumentTemplateId field value if set, zero value otherwise.
func (o *QuickbooksDesktopPurchaseOrdersPostRequest) GetDocumentTemplateId() string {
	if o == nil || IsNil(o.DocumentTemplateId) {
		var ret string
		return ret
	}
	return *o.DocumentTemplateId
}

// GetDocumentTemplateIdOk returns a tuple with the DocumentTemplateId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopPurchaseOrdersPostRequest) GetDocumentTemplateIdOk() (*string, bool) {
	if o == nil || IsNil(o.DocumentTemplateId) {
		return nil, false
	}
	return o.DocumentTemplateId, true
}

// HasDocumentTemplateId returns a boolean if a field has been set.
func (o *QuickbooksDesktopPurchaseOrdersPostRequest) HasDocumentTemplateId() bool {
	if o != nil && !IsNil(o.DocumentTemplateId) {
		return true
	}

	return false
}

// SetDocumentTemplateId gets a reference to the given string and assigns it to the DocumentTemplateId field.
func (o *QuickbooksDesktopPurchaseOrdersPostRequest) SetDocumentTemplateId(v string) {
	o.DocumentTemplateId = &v
}

// GetTransactionDate returns the TransactionDate field value
func (o *QuickbooksDesktopPurchaseOrdersPostRequest) GetTransactionDate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TransactionDate
}

// GetTransactionDateOk returns a tuple with the TransactionDate field value
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopPurchaseOrdersPostRequest) GetTransactionDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TransactionDate, true
}

// SetTransactionDate sets field value
func (o *QuickbooksDesktopPurchaseOrdersPostRequest) SetTransactionDate(v string) {
	o.TransactionDate = v
}

// GetRefNumber returns the RefNumber field value if set, zero value otherwise.
func (o *QuickbooksDesktopPurchaseOrdersPostRequest) GetRefNumber() string {
	if o == nil || IsNil(o.RefNumber) {
		var ret string
		return ret
	}
	return *o.RefNumber
}

// GetRefNumberOk returns a tuple with the RefNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopPurchaseOrdersPostRequest) GetRefNumberOk() (*string, bool) {
	if o == nil || IsNil(o.RefNumber) {
		return nil, false
	}
	return o.RefNumber, true
}

// HasRefNumber returns a boolean if a field has been set.
func (o *QuickbooksDesktopPurchaseOrdersPostRequest) HasRefNumber() bool {
	if o != nil && !IsNil(o.RefNumber) {
		return true
	}

	return false
}

// SetRefNumber gets a reference to the given string and assigns it to the RefNumber field.
func (o *QuickbooksDesktopPurchaseOrdersPostRequest) SetRefNumber(v string) {
	o.RefNumber = &v
}

// GetVendorAddress returns the VendorAddress field value if set, zero value otherwise.
func (o *QuickbooksDesktopPurchaseOrdersPostRequest) GetVendorAddress() QuickbooksDesktopPurchaseOrdersPostRequestVendorAddress {
	if o == nil || IsNil(o.VendorAddress) {
		var ret QuickbooksDesktopPurchaseOrdersPostRequestVendorAddress
		return ret
	}
	return *o.VendorAddress
}

// GetVendorAddressOk returns a tuple with the VendorAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopPurchaseOrdersPostRequest) GetVendorAddressOk() (*QuickbooksDesktopPurchaseOrdersPostRequestVendorAddress, bool) {
	if o == nil || IsNil(o.VendorAddress) {
		return nil, false
	}
	return o.VendorAddress, true
}

// HasVendorAddress returns a boolean if a field has been set.
func (o *QuickbooksDesktopPurchaseOrdersPostRequest) HasVendorAddress() bool {
	if o != nil && !IsNil(o.VendorAddress) {
		return true
	}

	return false
}

// SetVendorAddress gets a reference to the given QuickbooksDesktopPurchaseOrdersPostRequestVendorAddress and assigns it to the VendorAddress field.
func (o *QuickbooksDesktopPurchaseOrdersPostRequest) SetVendorAddress(v QuickbooksDesktopPurchaseOrdersPostRequestVendorAddress) {
	o.VendorAddress = &v
}

// GetShippingAddress returns the ShippingAddress field value if set, zero value otherwise.
func (o *QuickbooksDesktopPurchaseOrdersPostRequest) GetShippingAddress() QuickbooksDesktopPurchaseOrdersPostRequestShippingAddress {
	if o == nil || IsNil(o.ShippingAddress) {
		var ret QuickbooksDesktopPurchaseOrdersPostRequestShippingAddress
		return ret
	}
	return *o.ShippingAddress
}

// GetShippingAddressOk returns a tuple with the ShippingAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopPurchaseOrdersPostRequest) GetShippingAddressOk() (*QuickbooksDesktopPurchaseOrdersPostRequestShippingAddress, bool) {
	if o == nil || IsNil(o.ShippingAddress) {
		return nil, false
	}
	return o.ShippingAddress, true
}

// HasShippingAddress returns a boolean if a field has been set.
func (o *QuickbooksDesktopPurchaseOrdersPostRequest) HasShippingAddress() bool {
	if o != nil && !IsNil(o.ShippingAddress) {
		return true
	}

	return false
}

// SetShippingAddress gets a reference to the given QuickbooksDesktopPurchaseOrdersPostRequestShippingAddress and assigns it to the ShippingAddress field.
func (o *QuickbooksDesktopPurchaseOrdersPostRequest) SetShippingAddress(v QuickbooksDesktopPurchaseOrdersPostRequestShippingAddress) {
	o.ShippingAddress = &v
}

// GetTermsId returns the TermsId field value if set, zero value otherwise.
func (o *QuickbooksDesktopPurchaseOrdersPostRequest) GetTermsId() string {
	if o == nil || IsNil(o.TermsId) {
		var ret string
		return ret
	}
	return *o.TermsId
}

// GetTermsIdOk returns a tuple with the TermsId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopPurchaseOrdersPostRequest) GetTermsIdOk() (*string, bool) {
	if o == nil || IsNil(o.TermsId) {
		return nil, false
	}
	return o.TermsId, true
}

// HasTermsId returns a boolean if a field has been set.
func (o *QuickbooksDesktopPurchaseOrdersPostRequest) HasTermsId() bool {
	if o != nil && !IsNil(o.TermsId) {
		return true
	}

	return false
}

// SetTermsId gets a reference to the given string and assigns it to the TermsId field.
func (o *QuickbooksDesktopPurchaseOrdersPostRequest) SetTermsId(v string) {
	o.TermsId = &v
}

// GetDueDate returns the DueDate field value if set, zero value otherwise.
func (o *QuickbooksDesktopPurchaseOrdersPostRequest) GetDueDate() string {
	if o == nil || IsNil(o.DueDate) {
		var ret string
		return ret
	}
	return *o.DueDate
}

// GetDueDateOk returns a tuple with the DueDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopPurchaseOrdersPostRequest) GetDueDateOk() (*string, bool) {
	if o == nil || IsNil(o.DueDate) {
		return nil, false
	}
	return o.DueDate, true
}

// HasDueDate returns a boolean if a field has been set.
func (o *QuickbooksDesktopPurchaseOrdersPostRequest) HasDueDate() bool {
	if o != nil && !IsNil(o.DueDate) {
		return true
	}

	return false
}

// SetDueDate gets a reference to the given string and assigns it to the DueDate field.
func (o *QuickbooksDesktopPurchaseOrdersPostRequest) SetDueDate(v string) {
	o.DueDate = &v
}

// GetExpectedDate returns the ExpectedDate field value if set, zero value otherwise.
func (o *QuickbooksDesktopPurchaseOrdersPostRequest) GetExpectedDate() string {
	if o == nil || IsNil(o.ExpectedDate) {
		var ret string
		return ret
	}
	return *o.ExpectedDate
}

// GetExpectedDateOk returns a tuple with the ExpectedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopPurchaseOrdersPostRequest) GetExpectedDateOk() (*string, bool) {
	if o == nil || IsNil(o.ExpectedDate) {
		return nil, false
	}
	return o.ExpectedDate, true
}

// HasExpectedDate returns a boolean if a field has been set.
func (o *QuickbooksDesktopPurchaseOrdersPostRequest) HasExpectedDate() bool {
	if o != nil && !IsNil(o.ExpectedDate) {
		return true
	}

	return false
}

// SetExpectedDate gets a reference to the given string and assigns it to the ExpectedDate field.
func (o *QuickbooksDesktopPurchaseOrdersPostRequest) SetExpectedDate(v string) {
	o.ExpectedDate = &v
}

// GetShippingMethodId returns the ShippingMethodId field value if set, zero value otherwise.
func (o *QuickbooksDesktopPurchaseOrdersPostRequest) GetShippingMethodId() string {
	if o == nil || IsNil(o.ShippingMethodId) {
		var ret string
		return ret
	}
	return *o.ShippingMethodId
}

// GetShippingMethodIdOk returns a tuple with the ShippingMethodId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopPurchaseOrdersPostRequest) GetShippingMethodIdOk() (*string, bool) {
	if o == nil || IsNil(o.ShippingMethodId) {
		return nil, false
	}
	return o.ShippingMethodId, true
}

// HasShippingMethodId returns a boolean if a field has been set.
func (o *QuickbooksDesktopPurchaseOrdersPostRequest) HasShippingMethodId() bool {
	if o != nil && !IsNil(o.ShippingMethodId) {
		return true
	}

	return false
}

// SetShippingMethodId gets a reference to the given string and assigns it to the ShippingMethodId field.
func (o *QuickbooksDesktopPurchaseOrdersPostRequest) SetShippingMethodId(v string) {
	o.ShippingMethodId = &v
}

// GetShipmentOrigin returns the ShipmentOrigin field value if set, zero value otherwise.
func (o *QuickbooksDesktopPurchaseOrdersPostRequest) GetShipmentOrigin() string {
	if o == nil || IsNil(o.ShipmentOrigin) {
		var ret string
		return ret
	}
	return *o.ShipmentOrigin
}

// GetShipmentOriginOk returns a tuple with the ShipmentOrigin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopPurchaseOrdersPostRequest) GetShipmentOriginOk() (*string, bool) {
	if o == nil || IsNil(o.ShipmentOrigin) {
		return nil, false
	}
	return o.ShipmentOrigin, true
}

// HasShipmentOrigin returns a boolean if a field has been set.
func (o *QuickbooksDesktopPurchaseOrdersPostRequest) HasShipmentOrigin() bool {
	if o != nil && !IsNil(o.ShipmentOrigin) {
		return true
	}

	return false
}

// SetShipmentOrigin gets a reference to the given string and assigns it to the ShipmentOrigin field.
func (o *QuickbooksDesktopPurchaseOrdersPostRequest) SetShipmentOrigin(v string) {
	o.ShipmentOrigin = &v
}

// GetMemo returns the Memo field value if set, zero value otherwise.
func (o *QuickbooksDesktopPurchaseOrdersPostRequest) GetMemo() string {
	if o == nil || IsNil(o.Memo) {
		var ret string
		return ret
	}
	return *o.Memo
}

// GetMemoOk returns a tuple with the Memo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopPurchaseOrdersPostRequest) GetMemoOk() (*string, bool) {
	if o == nil || IsNil(o.Memo) {
		return nil, false
	}
	return o.Memo, true
}

// HasMemo returns a boolean if a field has been set.
func (o *QuickbooksDesktopPurchaseOrdersPostRequest) HasMemo() bool {
	if o != nil && !IsNil(o.Memo) {
		return true
	}

	return false
}

// SetMemo gets a reference to the given string and assigns it to the Memo field.
func (o *QuickbooksDesktopPurchaseOrdersPostRequest) SetMemo(v string) {
	o.Memo = &v
}

// GetVendorMessage returns the VendorMessage field value if set, zero value otherwise.
func (o *QuickbooksDesktopPurchaseOrdersPostRequest) GetVendorMessage() string {
	if o == nil || IsNil(o.VendorMessage) {
		var ret string
		return ret
	}
	return *o.VendorMessage
}

// GetVendorMessageOk returns a tuple with the VendorMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopPurchaseOrdersPostRequest) GetVendorMessageOk() (*string, bool) {
	if o == nil || IsNil(o.VendorMessage) {
		return nil, false
	}
	return o.VendorMessage, true
}

// HasVendorMessage returns a boolean if a field has been set.
func (o *QuickbooksDesktopPurchaseOrdersPostRequest) HasVendorMessage() bool {
	if o != nil && !IsNil(o.VendorMessage) {
		return true
	}

	return false
}

// SetVendorMessage gets a reference to the given string and assigns it to the VendorMessage field.
func (o *QuickbooksDesktopPurchaseOrdersPostRequest) SetVendorMessage(v string) {
	o.VendorMessage = &v
}

// GetIsQueuedForPrint returns the IsQueuedForPrint field value if set, zero value otherwise.
func (o *QuickbooksDesktopPurchaseOrdersPostRequest) GetIsQueuedForPrint() bool {
	if o == nil || IsNil(o.IsQueuedForPrint) {
		var ret bool
		return ret
	}
	return *o.IsQueuedForPrint
}

// GetIsQueuedForPrintOk returns a tuple with the IsQueuedForPrint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopPurchaseOrdersPostRequest) GetIsQueuedForPrintOk() (*bool, bool) {
	if o == nil || IsNil(o.IsQueuedForPrint) {
		return nil, false
	}
	return o.IsQueuedForPrint, true
}

// HasIsQueuedForPrint returns a boolean if a field has been set.
func (o *QuickbooksDesktopPurchaseOrdersPostRequest) HasIsQueuedForPrint() bool {
	if o != nil && !IsNil(o.IsQueuedForPrint) {
		return true
	}

	return false
}

// SetIsQueuedForPrint gets a reference to the given bool and assigns it to the IsQueuedForPrint field.
func (o *QuickbooksDesktopPurchaseOrdersPostRequest) SetIsQueuedForPrint(v bool) {
	o.IsQueuedForPrint = &v
}

// GetIsQueuedForEmail returns the IsQueuedForEmail field value if set, zero value otherwise.
func (o *QuickbooksDesktopPurchaseOrdersPostRequest) GetIsQueuedForEmail() bool {
	if o == nil || IsNil(o.IsQueuedForEmail) {
		var ret bool
		return ret
	}
	return *o.IsQueuedForEmail
}

// GetIsQueuedForEmailOk returns a tuple with the IsQueuedForEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopPurchaseOrdersPostRequest) GetIsQueuedForEmailOk() (*bool, bool) {
	if o == nil || IsNil(o.IsQueuedForEmail) {
		return nil, false
	}
	return o.IsQueuedForEmail, true
}

// HasIsQueuedForEmail returns a boolean if a field has been set.
func (o *QuickbooksDesktopPurchaseOrdersPostRequest) HasIsQueuedForEmail() bool {
	if o != nil && !IsNil(o.IsQueuedForEmail) {
		return true
	}

	return false
}

// SetIsQueuedForEmail gets a reference to the given bool and assigns it to the IsQueuedForEmail field.
func (o *QuickbooksDesktopPurchaseOrdersPostRequest) SetIsQueuedForEmail(v bool) {
	o.IsQueuedForEmail = &v
}

// GetSalesTaxCodeId returns the SalesTaxCodeId field value if set, zero value otherwise.
func (o *QuickbooksDesktopPurchaseOrdersPostRequest) GetSalesTaxCodeId() string {
	if o == nil || IsNil(o.SalesTaxCodeId) {
		var ret string
		return ret
	}
	return *o.SalesTaxCodeId
}

// GetSalesTaxCodeIdOk returns a tuple with the SalesTaxCodeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopPurchaseOrdersPostRequest) GetSalesTaxCodeIdOk() (*string, bool) {
	if o == nil || IsNil(o.SalesTaxCodeId) {
		return nil, false
	}
	return o.SalesTaxCodeId, true
}

// HasSalesTaxCodeId returns a boolean if a field has been set.
func (o *QuickbooksDesktopPurchaseOrdersPostRequest) HasSalesTaxCodeId() bool {
	if o != nil && !IsNil(o.SalesTaxCodeId) {
		return true
	}

	return false
}

// SetSalesTaxCodeId gets a reference to the given string and assigns it to the SalesTaxCodeId field.
func (o *QuickbooksDesktopPurchaseOrdersPostRequest) SetSalesTaxCodeId(v string) {
	o.SalesTaxCodeId = &v
}

// GetOtherCustomField1 returns the OtherCustomField1 field value if set, zero value otherwise.
func (o *QuickbooksDesktopPurchaseOrdersPostRequest) GetOtherCustomField1() string {
	if o == nil || IsNil(o.OtherCustomField1) {
		var ret string
		return ret
	}
	return *o.OtherCustomField1
}

// GetOtherCustomField1Ok returns a tuple with the OtherCustomField1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopPurchaseOrdersPostRequest) GetOtherCustomField1Ok() (*string, bool) {
	if o == nil || IsNil(o.OtherCustomField1) {
		return nil, false
	}
	return o.OtherCustomField1, true
}

// HasOtherCustomField1 returns a boolean if a field has been set.
func (o *QuickbooksDesktopPurchaseOrdersPostRequest) HasOtherCustomField1() bool {
	if o != nil && !IsNil(o.OtherCustomField1) {
		return true
	}

	return false
}

// SetOtherCustomField1 gets a reference to the given string and assigns it to the OtherCustomField1 field.
func (o *QuickbooksDesktopPurchaseOrdersPostRequest) SetOtherCustomField1(v string) {
	o.OtherCustomField1 = &v
}

// GetOtherCustomField2 returns the OtherCustomField2 field value if set, zero value otherwise.
func (o *QuickbooksDesktopPurchaseOrdersPostRequest) GetOtherCustomField2() string {
	if o == nil || IsNil(o.OtherCustomField2) {
		var ret string
		return ret
	}
	return *o.OtherCustomField2
}

// GetOtherCustomField2Ok returns a tuple with the OtherCustomField2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopPurchaseOrdersPostRequest) GetOtherCustomField2Ok() (*string, bool) {
	if o == nil || IsNil(o.OtherCustomField2) {
		return nil, false
	}
	return o.OtherCustomField2, true
}

// HasOtherCustomField2 returns a boolean if a field has been set.
func (o *QuickbooksDesktopPurchaseOrdersPostRequest) HasOtherCustomField2() bool {
	if o != nil && !IsNil(o.OtherCustomField2) {
		return true
	}

	return false
}

// SetOtherCustomField2 gets a reference to the given string and assigns it to the OtherCustomField2 field.
func (o *QuickbooksDesktopPurchaseOrdersPostRequest) SetOtherCustomField2(v string) {
	o.OtherCustomField2 = &v
}

// GetExchangeRate returns the ExchangeRate field value if set, zero value otherwise.
func (o *QuickbooksDesktopPurchaseOrdersPostRequest) GetExchangeRate() float32 {
	if o == nil || IsNil(o.ExchangeRate) {
		var ret float32
		return ret
	}
	return *o.ExchangeRate
}

// GetExchangeRateOk returns a tuple with the ExchangeRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopPurchaseOrdersPostRequest) GetExchangeRateOk() (*float32, bool) {
	if o == nil || IsNil(o.ExchangeRate) {
		return nil, false
	}
	return o.ExchangeRate, true
}

// HasExchangeRate returns a boolean if a field has been set.
func (o *QuickbooksDesktopPurchaseOrdersPostRequest) HasExchangeRate() bool {
	if o != nil && !IsNil(o.ExchangeRate) {
		return true
	}

	return false
}

// SetExchangeRate gets a reference to the given float32 and assigns it to the ExchangeRate field.
func (o *QuickbooksDesktopPurchaseOrdersPostRequest) SetExchangeRate(v float32) {
	o.ExchangeRate = &v
}

// GetExternalId returns the ExternalId field value if set, zero value otherwise.
func (o *QuickbooksDesktopPurchaseOrdersPostRequest) GetExternalId() string {
	if o == nil || IsNil(o.ExternalId) {
		var ret string
		return ret
	}
	return *o.ExternalId
}

// GetExternalIdOk returns a tuple with the ExternalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopPurchaseOrdersPostRequest) GetExternalIdOk() (*string, bool) {
	if o == nil || IsNil(o.ExternalId) {
		return nil, false
	}
	return o.ExternalId, true
}

// HasExternalId returns a boolean if a field has been set.
func (o *QuickbooksDesktopPurchaseOrdersPostRequest) HasExternalId() bool {
	if o != nil && !IsNil(o.ExternalId) {
		return true
	}

	return false
}

// SetExternalId gets a reference to the given string and assigns it to the ExternalId field.
func (o *QuickbooksDesktopPurchaseOrdersPostRequest) SetExternalId(v string) {
	o.ExternalId = &v
}

// GetLines returns the Lines field value if set, zero value otherwise.
func (o *QuickbooksDesktopPurchaseOrdersPostRequest) GetLines() []QuickbooksDesktopPurchaseOrdersPostRequestLinesInner {
	if o == nil || IsNil(o.Lines) {
		var ret []QuickbooksDesktopPurchaseOrdersPostRequestLinesInner
		return ret
	}
	return o.Lines
}

// GetLinesOk returns a tuple with the Lines field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopPurchaseOrdersPostRequest) GetLinesOk() ([]QuickbooksDesktopPurchaseOrdersPostRequestLinesInner, bool) {
	if o == nil || IsNil(o.Lines) {
		return nil, false
	}
	return o.Lines, true
}

// HasLines returns a boolean if a field has been set.
func (o *QuickbooksDesktopPurchaseOrdersPostRequest) HasLines() bool {
	if o != nil && !IsNil(o.Lines) {
		return true
	}

	return false
}

// SetLines gets a reference to the given []QuickbooksDesktopPurchaseOrdersPostRequestLinesInner and assigns it to the Lines field.
func (o *QuickbooksDesktopPurchaseOrdersPostRequest) SetLines(v []QuickbooksDesktopPurchaseOrdersPostRequestLinesInner) {
	o.Lines = v
}

// GetLineGroups returns the LineGroups field value if set, zero value otherwise.
func (o *QuickbooksDesktopPurchaseOrdersPostRequest) GetLineGroups() []QuickbooksDesktopPurchaseOrdersPostRequestLineGroupsInner {
	if o == nil || IsNil(o.LineGroups) {
		var ret []QuickbooksDesktopPurchaseOrdersPostRequestLineGroupsInner
		return ret
	}
	return o.LineGroups
}

// GetLineGroupsOk returns a tuple with the LineGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopPurchaseOrdersPostRequest) GetLineGroupsOk() ([]QuickbooksDesktopPurchaseOrdersPostRequestLineGroupsInner, bool) {
	if o == nil || IsNil(o.LineGroups) {
		return nil, false
	}
	return o.LineGroups, true
}

// HasLineGroups returns a boolean if a field has been set.
func (o *QuickbooksDesktopPurchaseOrdersPostRequest) HasLineGroups() bool {
	if o != nil && !IsNil(o.LineGroups) {
		return true
	}

	return false
}

// SetLineGroups gets a reference to the given []QuickbooksDesktopPurchaseOrdersPostRequestLineGroupsInner and assigns it to the LineGroups field.
func (o *QuickbooksDesktopPurchaseOrdersPostRequest) SetLineGroups(v []QuickbooksDesktopPurchaseOrdersPostRequestLineGroupsInner) {
	o.LineGroups = v
}

func (o QuickbooksDesktopPurchaseOrdersPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QuickbooksDesktopPurchaseOrdersPostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.VendorId) {
		toSerialize["vendorId"] = o.VendorId
	}
	if !IsNil(o.ClassId) {
		toSerialize["classId"] = o.ClassId
	}
	if !IsNil(o.InventorySiteId) {
		toSerialize["inventorySiteId"] = o.InventorySiteId
	}
	if !IsNil(o.ShipToEntityId) {
		toSerialize["shipToEntityId"] = o.ShipToEntityId
	}
	if !IsNil(o.DocumentTemplateId) {
		toSerialize["documentTemplateId"] = o.DocumentTemplateId
	}
	toSerialize["transactionDate"] = o.TransactionDate
	if !IsNil(o.RefNumber) {
		toSerialize["refNumber"] = o.RefNumber
	}
	if !IsNil(o.VendorAddress) {
		toSerialize["vendorAddress"] = o.VendorAddress
	}
	if !IsNil(o.ShippingAddress) {
		toSerialize["shippingAddress"] = o.ShippingAddress
	}
	if !IsNil(o.TermsId) {
		toSerialize["termsId"] = o.TermsId
	}
	if !IsNil(o.DueDate) {
		toSerialize["dueDate"] = o.DueDate
	}
	if !IsNil(o.ExpectedDate) {
		toSerialize["expectedDate"] = o.ExpectedDate
	}
	if !IsNil(o.ShippingMethodId) {
		toSerialize["shippingMethodId"] = o.ShippingMethodId
	}
	if !IsNil(o.ShipmentOrigin) {
		toSerialize["shipmentOrigin"] = o.ShipmentOrigin
	}
	if !IsNil(o.Memo) {
		toSerialize["memo"] = o.Memo
	}
	if !IsNil(o.VendorMessage) {
		toSerialize["vendorMessage"] = o.VendorMessage
	}
	if !IsNil(o.IsQueuedForPrint) {
		toSerialize["isQueuedForPrint"] = o.IsQueuedForPrint
	}
	if !IsNil(o.IsQueuedForEmail) {
		toSerialize["isQueuedForEmail"] = o.IsQueuedForEmail
	}
	if !IsNil(o.SalesTaxCodeId) {
		toSerialize["salesTaxCodeId"] = o.SalesTaxCodeId
	}
	if !IsNil(o.OtherCustomField1) {
		toSerialize["otherCustomField1"] = o.OtherCustomField1
	}
	if !IsNil(o.OtherCustomField2) {
		toSerialize["otherCustomField2"] = o.OtherCustomField2
	}
	if !IsNil(o.ExchangeRate) {
		toSerialize["exchangeRate"] = o.ExchangeRate
	}
	if !IsNil(o.ExternalId) {
		toSerialize["externalId"] = o.ExternalId
	}
	if !IsNil(o.Lines) {
		toSerialize["lines"] = o.Lines
	}
	if !IsNil(o.LineGroups) {
		toSerialize["lineGroups"] = o.LineGroups
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *QuickbooksDesktopPurchaseOrdersPostRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"transactionDate",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varQuickbooksDesktopPurchaseOrdersPostRequest := _QuickbooksDesktopPurchaseOrdersPostRequest{}

	err = json.Unmarshal(data, &varQuickbooksDesktopPurchaseOrdersPostRequest)

	if err != nil {
		return err
	}

	*o = QuickbooksDesktopPurchaseOrdersPostRequest(varQuickbooksDesktopPurchaseOrdersPostRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "vendorId")
		delete(additionalProperties, "classId")
		delete(additionalProperties, "inventorySiteId")
		delete(additionalProperties, "shipToEntityId")
		delete(additionalProperties, "documentTemplateId")
		delete(additionalProperties, "transactionDate")
		delete(additionalProperties, "refNumber")
		delete(additionalProperties, "vendorAddress")
		delete(additionalProperties, "shippingAddress")
		delete(additionalProperties, "termsId")
		delete(additionalProperties, "dueDate")
		delete(additionalProperties, "expectedDate")
		delete(additionalProperties, "shippingMethodId")
		delete(additionalProperties, "shipmentOrigin")
		delete(additionalProperties, "memo")
		delete(additionalProperties, "vendorMessage")
		delete(additionalProperties, "isQueuedForPrint")
		delete(additionalProperties, "isQueuedForEmail")
		delete(additionalProperties, "salesTaxCodeId")
		delete(additionalProperties, "otherCustomField1")
		delete(additionalProperties, "otherCustomField2")
		delete(additionalProperties, "exchangeRate")
		delete(additionalProperties, "externalId")
		delete(additionalProperties, "lines")
		delete(additionalProperties, "lineGroups")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableQuickbooksDesktopPurchaseOrdersPostRequest struct {
	value *QuickbooksDesktopPurchaseOrdersPostRequest
	isSet bool
}

func (v NullableQuickbooksDesktopPurchaseOrdersPostRequest) Get() *QuickbooksDesktopPurchaseOrdersPostRequest {
	return v.value
}

func (v *NullableQuickbooksDesktopPurchaseOrdersPostRequest) Set(val *QuickbooksDesktopPurchaseOrdersPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableQuickbooksDesktopPurchaseOrdersPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableQuickbooksDesktopPurchaseOrdersPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQuickbooksDesktopPurchaseOrdersPostRequest(val *QuickbooksDesktopPurchaseOrdersPostRequest) *NullableQuickbooksDesktopPurchaseOrdersPostRequest {
	return &NullableQuickbooksDesktopPurchaseOrdersPostRequest{value: val, isSet: true}
}

func (v NullableQuickbooksDesktopPurchaseOrdersPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQuickbooksDesktopPurchaseOrdersPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


