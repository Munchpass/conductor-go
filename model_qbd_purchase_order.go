/*
Conductor API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package conductor

import (
	"encoding/json"
	"fmt"
)

// checks if the QbdPurchaseOrder type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QbdPurchaseOrder{}

// QbdPurchaseOrder struct for QbdPurchaseOrder
type QbdPurchaseOrder struct {
	// The unique identifier assigned by QuickBooks to this purchase order. This ID is unique across all transaction types.
	Id string `json:"id"`
	// The type of object. This value is always `\"qbd_purchase_order\"`.
	ObjectType string `json:"objectType"`
	// The date and time when this purchase order was created, in ISO 8601 format (YYYY-MM-DDThh:mm:ss±hh:mm). The time zone is the same as the user's time zone in QuickBooks.
	CreatedAt string `json:"createdAt"`
	// The date and time when this purchase order was last updated, in ISO 8601 format (YYYY-MM-DDThh:mm:ss±hh:mm). The time zone is the same as the user's time zone in QuickBooks.
	UpdatedAt string `json:"updatedAt"`
	// The current QuickBooks-assigned revision number of this purchase order object, which changes each time the object is modified. When updating this object, you must provide the most recent `revisionNumber` to ensure you're working with the latest data; otherwise, the update will return an error.
	RevisionNumber string `json:"revisionNumber"`
	Vendor QbdPurchaseOrderVendor `json:"vendor"`
	Class QbdPurchaseOrderClass `json:"class"`
	InventorySite QbdPurchaseOrderInventorySite `json:"inventorySite"`
	ShipToEntity QbdPurchaseOrderShipToEntity `json:"shipToEntity"`
	DocumentTemplate QbdPurchaseOrderDocumentTemplate `json:"documentTemplate"`
	// The date of this purchase order, in ISO 8601 format (YYYY-MM-DD).
	TransactionDate string `json:"transactionDate"`
	// The case-sensitive user-defined reference number for this purchase order, which can be used to identify the transaction in QuickBooks. This value is not required to be unique and can be arbitrarily changed by the QuickBooks user.
	RefNumber string `json:"refNumber"`
	VendorAddress QbdPurchaseOrderVendorAddress `json:"vendorAddress"`
	ShippingAddress QbdPurchaseOrderShippingAddress `json:"shippingAddress"`
	Terms QbdPurchaseOrderTerms `json:"terms"`
	// The date by which this purchase order must be paid, in ISO 8601 format (YYYY-MM-DD).
	DueDate string `json:"dueDate"`
	// The date on which shipment of this purchase order is expected to be completed, in ISO 8601 format (YYYY-MM-DD).
	ExpectedDate string `json:"expectedDate"`
	ShippingMethod QbdPurchaseOrderShippingMethod `json:"shippingMethod"`
	// The origin location from where the product associated with this purchase order is shipped. This is the point at which ownership and liability for goods transfer from seller to buyer. Internally, QuickBooks uses the term \"FOB\" for this field, which stands for \"freight on board\". This field is informational and has no accounting implications.
	ShipmentOrigin string `json:"shipmentOrigin"`
	// The total monetary amount of this purchase order, equivalent to the sum of the amounts in `lines` and `lineGroups`, represented as a decimal string.
	TotalAmount string `json:"totalAmount"`
	Currency QbdPurchaseOrderCurrency `json:"currency"`
	// The market exchange rate between this purchase order's currency and the home currency in QuickBooks at the time of this transaction. Represented as a decimal value (e.g., 1.2345 for 1 EUR = 1.2345 USD if USD is the home currency).
	ExchangeRate float32 `json:"exchangeRate"`
	// The total monetary amount of this purchase order converted to the home currency of the QuickBooks company file. Represented as a decimal string.
	TotalAmountInHomeCurrency string `json:"totalAmountInHomeCurrency"`
	// Indicates whether this purchase order has been manually marked as closed, even if all items have not been received or the sale has not been cancelled. Once the purchase order is marked as closed, all of its line items become closed as well. You cannot change `isManuallyClosed` to `false` after the purchase order has been fully received.
	IsManuallyClosed bool `json:"isManuallyClosed"`
	// Indicates whether all items in this purchase order have been received and none of them were closed manually.
	IsFullyReceived bool `json:"isFullyReceived"`
	// A memo or note for this purchase order that appears in reports, but not on the purchase order.
	Memo string `json:"memo"`
	// A message to be printed on this purchase order for the vendor to read.
	VendorMessage string `json:"vendorMessage"`
	// Indicates whether this purchase order is included in the queue of documents for QuickBooks to print.
	IsQueuedForPrint bool `json:"isQueuedForPrint"`
	// Indicates whether this purchase order is included in the queue of documents for QuickBooks to email to the customer.
	IsQueuedForEmail bool `json:"isQueuedForEmail"`
	SalesTaxCode QbdPurchaseOrderSalesTaxCode `json:"salesTaxCode"`
	// A built-in custom field for additional information specific to this purchase order. Unlike the user-defined fields in the `customFields` array, this is a standard QuickBooks field that exists for all purchase orders for convenience. Developers often use this field for tracking information that doesn't fit into other standard QuickBooks fields. Hidden by default in the QuickBooks UI.
	OtherCustomField1 string `json:"otherCustomField1"`
	// A second built-in custom field for additional information specific to this purchase order. Unlike the user-defined fields in the `customFields` array, this is a standard QuickBooks field that exists for all purchase orders for convenience. Like `otherCustomField1`, developers often use this field for tracking information that doesn't fit into other standard QuickBooks fields. Hidden by default in the QuickBooks UI.
	OtherCustomField2 string `json:"otherCustomField2"`
	// A globally unique identifier (GUID) you, the developer, can provide for tracking this object in your external system. This field is immutable and can only be set during object creation.
	ExternalId string `json:"externalId"`
	// The purchase order's linked transactions, such as payments applied, credits used, or associated purchase orders.  **IMPORTANT**: You must specify the parameter `includeLinkedTransactions` when fetching a list of purchase orders to receive this field because it is not returned by default.
	LinkedTransactions []QbdLinkedTransaction `json:"linkedTransactions"`
	// The purchase order's line items, each representing a single product or service ordered.
	Lines []QbdPurchaseOrderLine `json:"lines"`
	// The purchase order's line item groups, each representing a predefined set of related items.
	LineGroups []QbdPurchaseOrderLineGroup `json:"lineGroups"`
	// The custom fields for the purchase order object, added as user-defined data extensions, not included in the standard QuickBooks object.
	CustomFields []QbdCustomField `json:"customFields"`
	AdditionalProperties map[string]interface{}
}

type _QbdPurchaseOrder QbdPurchaseOrder

// NewQbdPurchaseOrder instantiates a new QbdPurchaseOrder object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQbdPurchaseOrder(id string, objectType string, createdAt string, updatedAt string, revisionNumber string, vendor QbdPurchaseOrderVendor, class QbdPurchaseOrderClass, inventorySite QbdPurchaseOrderInventorySite, shipToEntity QbdPurchaseOrderShipToEntity, documentTemplate QbdPurchaseOrderDocumentTemplate, transactionDate string, refNumber string, vendorAddress QbdPurchaseOrderVendorAddress, shippingAddress QbdPurchaseOrderShippingAddress, terms QbdPurchaseOrderTerms, dueDate string, expectedDate string, shippingMethod QbdPurchaseOrderShippingMethod, shipmentOrigin string, totalAmount string, currency QbdPurchaseOrderCurrency, exchangeRate float32, totalAmountInHomeCurrency string, isManuallyClosed bool, isFullyReceived bool, memo string, vendorMessage string, isQueuedForPrint bool, isQueuedForEmail bool, salesTaxCode QbdPurchaseOrderSalesTaxCode, otherCustomField1 string, otherCustomField2 string, externalId string, linkedTransactions []QbdLinkedTransaction, lines []QbdPurchaseOrderLine, lineGroups []QbdPurchaseOrderLineGroup, customFields []QbdCustomField) *QbdPurchaseOrder {
	this := QbdPurchaseOrder{}
	this.Id = id
	this.ObjectType = objectType
	this.CreatedAt = createdAt
	this.UpdatedAt = updatedAt
	this.RevisionNumber = revisionNumber
	this.Vendor = vendor
	this.Class = class
	this.InventorySite = inventorySite
	this.ShipToEntity = shipToEntity
	this.DocumentTemplate = documentTemplate
	this.TransactionDate = transactionDate
	this.RefNumber = refNumber
	this.VendorAddress = vendorAddress
	this.ShippingAddress = shippingAddress
	this.Terms = terms
	this.DueDate = dueDate
	this.ExpectedDate = expectedDate
	this.ShippingMethod = shippingMethod
	this.ShipmentOrigin = shipmentOrigin
	this.TotalAmount = totalAmount
	this.Currency = currency
	this.ExchangeRate = exchangeRate
	this.TotalAmountInHomeCurrency = totalAmountInHomeCurrency
	this.IsManuallyClosed = isManuallyClosed
	this.IsFullyReceived = isFullyReceived
	this.Memo = memo
	this.VendorMessage = vendorMessage
	this.IsQueuedForPrint = isQueuedForPrint
	this.IsQueuedForEmail = isQueuedForEmail
	this.SalesTaxCode = salesTaxCode
	this.OtherCustomField1 = otherCustomField1
	this.OtherCustomField2 = otherCustomField2
	this.ExternalId = externalId
	this.LinkedTransactions = linkedTransactions
	this.Lines = lines
	this.LineGroups = lineGroups
	this.CustomFields = customFields
	return &this
}

// NewQbdPurchaseOrderWithDefaults instantiates a new QbdPurchaseOrder object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQbdPurchaseOrderWithDefaults() *QbdPurchaseOrder {
	this := QbdPurchaseOrder{}
	return &this
}

// GetId returns the Id field value
func (o *QbdPurchaseOrder) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *QbdPurchaseOrder) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *QbdPurchaseOrder) SetId(v string) {
	o.Id = v
}

// GetObjectType returns the ObjectType field value
func (o *QbdPurchaseOrder) GetObjectType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ObjectType
}

// GetObjectTypeOk returns a tuple with the ObjectType field value
// and a boolean to check if the value has been set.
func (o *QbdPurchaseOrder) GetObjectTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ObjectType, true
}

// SetObjectType sets field value
func (o *QbdPurchaseOrder) SetObjectType(v string) {
	o.ObjectType = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *QbdPurchaseOrder) GetCreatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *QbdPurchaseOrder) GetCreatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *QbdPurchaseOrder) SetCreatedAt(v string) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *QbdPurchaseOrder) GetUpdatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *QbdPurchaseOrder) GetUpdatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *QbdPurchaseOrder) SetUpdatedAt(v string) {
	o.UpdatedAt = v
}

// GetRevisionNumber returns the RevisionNumber field value
func (o *QbdPurchaseOrder) GetRevisionNumber() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RevisionNumber
}

// GetRevisionNumberOk returns a tuple with the RevisionNumber field value
// and a boolean to check if the value has been set.
func (o *QbdPurchaseOrder) GetRevisionNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RevisionNumber, true
}

// SetRevisionNumber sets field value
func (o *QbdPurchaseOrder) SetRevisionNumber(v string) {
	o.RevisionNumber = v
}

// GetVendor returns the Vendor field value
func (o *QbdPurchaseOrder) GetVendor() QbdPurchaseOrderVendor {
	if o == nil {
		var ret QbdPurchaseOrderVendor
		return ret
	}

	return o.Vendor
}

// GetVendorOk returns a tuple with the Vendor field value
// and a boolean to check if the value has been set.
func (o *QbdPurchaseOrder) GetVendorOk() (*QbdPurchaseOrderVendor, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Vendor, true
}

// SetVendor sets field value
func (o *QbdPurchaseOrder) SetVendor(v QbdPurchaseOrderVendor) {
	o.Vendor = v
}

// GetClass returns the Class field value
func (o *QbdPurchaseOrder) GetClass() QbdPurchaseOrderClass {
	if o == nil {
		var ret QbdPurchaseOrderClass
		return ret
	}

	return o.Class
}

// GetClassOk returns a tuple with the Class field value
// and a boolean to check if the value has been set.
func (o *QbdPurchaseOrder) GetClassOk() (*QbdPurchaseOrderClass, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Class, true
}

// SetClass sets field value
func (o *QbdPurchaseOrder) SetClass(v QbdPurchaseOrderClass) {
	o.Class = v
}

// GetInventorySite returns the InventorySite field value
func (o *QbdPurchaseOrder) GetInventorySite() QbdPurchaseOrderInventorySite {
	if o == nil {
		var ret QbdPurchaseOrderInventorySite
		return ret
	}

	return o.InventorySite
}

// GetInventorySiteOk returns a tuple with the InventorySite field value
// and a boolean to check if the value has been set.
func (o *QbdPurchaseOrder) GetInventorySiteOk() (*QbdPurchaseOrderInventorySite, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InventorySite, true
}

// SetInventorySite sets field value
func (o *QbdPurchaseOrder) SetInventorySite(v QbdPurchaseOrderInventorySite) {
	o.InventorySite = v
}

// GetShipToEntity returns the ShipToEntity field value
func (o *QbdPurchaseOrder) GetShipToEntity() QbdPurchaseOrderShipToEntity {
	if o == nil {
		var ret QbdPurchaseOrderShipToEntity
		return ret
	}

	return o.ShipToEntity
}

// GetShipToEntityOk returns a tuple with the ShipToEntity field value
// and a boolean to check if the value has been set.
func (o *QbdPurchaseOrder) GetShipToEntityOk() (*QbdPurchaseOrderShipToEntity, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ShipToEntity, true
}

// SetShipToEntity sets field value
func (o *QbdPurchaseOrder) SetShipToEntity(v QbdPurchaseOrderShipToEntity) {
	o.ShipToEntity = v
}

// GetDocumentTemplate returns the DocumentTemplate field value
func (o *QbdPurchaseOrder) GetDocumentTemplate() QbdPurchaseOrderDocumentTemplate {
	if o == nil {
		var ret QbdPurchaseOrderDocumentTemplate
		return ret
	}

	return o.DocumentTemplate
}

// GetDocumentTemplateOk returns a tuple with the DocumentTemplate field value
// and a boolean to check if the value has been set.
func (o *QbdPurchaseOrder) GetDocumentTemplateOk() (*QbdPurchaseOrderDocumentTemplate, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DocumentTemplate, true
}

// SetDocumentTemplate sets field value
func (o *QbdPurchaseOrder) SetDocumentTemplate(v QbdPurchaseOrderDocumentTemplate) {
	o.DocumentTemplate = v
}

// GetTransactionDate returns the TransactionDate field value
func (o *QbdPurchaseOrder) GetTransactionDate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TransactionDate
}

// GetTransactionDateOk returns a tuple with the TransactionDate field value
// and a boolean to check if the value has been set.
func (o *QbdPurchaseOrder) GetTransactionDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TransactionDate, true
}

// SetTransactionDate sets field value
func (o *QbdPurchaseOrder) SetTransactionDate(v string) {
	o.TransactionDate = v
}

// GetRefNumber returns the RefNumber field value
func (o *QbdPurchaseOrder) GetRefNumber() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RefNumber
}

// GetRefNumberOk returns a tuple with the RefNumber field value
// and a boolean to check if the value has been set.
func (o *QbdPurchaseOrder) GetRefNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RefNumber, true
}

// SetRefNumber sets field value
func (o *QbdPurchaseOrder) SetRefNumber(v string) {
	o.RefNumber = v
}

// GetVendorAddress returns the VendorAddress field value
func (o *QbdPurchaseOrder) GetVendorAddress() QbdPurchaseOrderVendorAddress {
	if o == nil {
		var ret QbdPurchaseOrderVendorAddress
		return ret
	}

	return o.VendorAddress
}

// GetVendorAddressOk returns a tuple with the VendorAddress field value
// and a boolean to check if the value has been set.
func (o *QbdPurchaseOrder) GetVendorAddressOk() (*QbdPurchaseOrderVendorAddress, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VendorAddress, true
}

// SetVendorAddress sets field value
func (o *QbdPurchaseOrder) SetVendorAddress(v QbdPurchaseOrderVendorAddress) {
	o.VendorAddress = v
}

// GetShippingAddress returns the ShippingAddress field value
func (o *QbdPurchaseOrder) GetShippingAddress() QbdPurchaseOrderShippingAddress {
	if o == nil {
		var ret QbdPurchaseOrderShippingAddress
		return ret
	}

	return o.ShippingAddress
}

// GetShippingAddressOk returns a tuple with the ShippingAddress field value
// and a boolean to check if the value has been set.
func (o *QbdPurchaseOrder) GetShippingAddressOk() (*QbdPurchaseOrderShippingAddress, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ShippingAddress, true
}

// SetShippingAddress sets field value
func (o *QbdPurchaseOrder) SetShippingAddress(v QbdPurchaseOrderShippingAddress) {
	o.ShippingAddress = v
}

// GetTerms returns the Terms field value
func (o *QbdPurchaseOrder) GetTerms() QbdPurchaseOrderTerms {
	if o == nil {
		var ret QbdPurchaseOrderTerms
		return ret
	}

	return o.Terms
}

// GetTermsOk returns a tuple with the Terms field value
// and a boolean to check if the value has been set.
func (o *QbdPurchaseOrder) GetTermsOk() (*QbdPurchaseOrderTerms, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Terms, true
}

// SetTerms sets field value
func (o *QbdPurchaseOrder) SetTerms(v QbdPurchaseOrderTerms) {
	o.Terms = v
}

// GetDueDate returns the DueDate field value
func (o *QbdPurchaseOrder) GetDueDate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DueDate
}

// GetDueDateOk returns a tuple with the DueDate field value
// and a boolean to check if the value has been set.
func (o *QbdPurchaseOrder) GetDueDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DueDate, true
}

// SetDueDate sets field value
func (o *QbdPurchaseOrder) SetDueDate(v string) {
	o.DueDate = v
}

// GetExpectedDate returns the ExpectedDate field value
func (o *QbdPurchaseOrder) GetExpectedDate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ExpectedDate
}

// GetExpectedDateOk returns a tuple with the ExpectedDate field value
// and a boolean to check if the value has been set.
func (o *QbdPurchaseOrder) GetExpectedDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExpectedDate, true
}

// SetExpectedDate sets field value
func (o *QbdPurchaseOrder) SetExpectedDate(v string) {
	o.ExpectedDate = v
}

// GetShippingMethod returns the ShippingMethod field value
func (o *QbdPurchaseOrder) GetShippingMethod() QbdPurchaseOrderShippingMethod {
	if o == nil {
		var ret QbdPurchaseOrderShippingMethod
		return ret
	}

	return o.ShippingMethod
}

// GetShippingMethodOk returns a tuple with the ShippingMethod field value
// and a boolean to check if the value has been set.
func (o *QbdPurchaseOrder) GetShippingMethodOk() (*QbdPurchaseOrderShippingMethod, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ShippingMethod, true
}

// SetShippingMethod sets field value
func (o *QbdPurchaseOrder) SetShippingMethod(v QbdPurchaseOrderShippingMethod) {
	o.ShippingMethod = v
}

// GetShipmentOrigin returns the ShipmentOrigin field value
func (o *QbdPurchaseOrder) GetShipmentOrigin() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ShipmentOrigin
}

// GetShipmentOriginOk returns a tuple with the ShipmentOrigin field value
// and a boolean to check if the value has been set.
func (o *QbdPurchaseOrder) GetShipmentOriginOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ShipmentOrigin, true
}

// SetShipmentOrigin sets field value
func (o *QbdPurchaseOrder) SetShipmentOrigin(v string) {
	o.ShipmentOrigin = v
}

// GetTotalAmount returns the TotalAmount field value
func (o *QbdPurchaseOrder) GetTotalAmount() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TotalAmount
}

// GetTotalAmountOk returns a tuple with the TotalAmount field value
// and a boolean to check if the value has been set.
func (o *QbdPurchaseOrder) GetTotalAmountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalAmount, true
}

// SetTotalAmount sets field value
func (o *QbdPurchaseOrder) SetTotalAmount(v string) {
	o.TotalAmount = v
}

// GetCurrency returns the Currency field value
func (o *QbdPurchaseOrder) GetCurrency() QbdPurchaseOrderCurrency {
	if o == nil {
		var ret QbdPurchaseOrderCurrency
		return ret
	}

	return o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value
// and a boolean to check if the value has been set.
func (o *QbdPurchaseOrder) GetCurrencyOk() (*QbdPurchaseOrderCurrency, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Currency, true
}

// SetCurrency sets field value
func (o *QbdPurchaseOrder) SetCurrency(v QbdPurchaseOrderCurrency) {
	o.Currency = v
}

// GetExchangeRate returns the ExchangeRate field value
func (o *QbdPurchaseOrder) GetExchangeRate() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.ExchangeRate
}

// GetExchangeRateOk returns a tuple with the ExchangeRate field value
// and a boolean to check if the value has been set.
func (o *QbdPurchaseOrder) GetExchangeRateOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExchangeRate, true
}

// SetExchangeRate sets field value
func (o *QbdPurchaseOrder) SetExchangeRate(v float32) {
	o.ExchangeRate = v
}

// GetTotalAmountInHomeCurrency returns the TotalAmountInHomeCurrency field value
func (o *QbdPurchaseOrder) GetTotalAmountInHomeCurrency() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TotalAmountInHomeCurrency
}

// GetTotalAmountInHomeCurrencyOk returns a tuple with the TotalAmountInHomeCurrency field value
// and a boolean to check if the value has been set.
func (o *QbdPurchaseOrder) GetTotalAmountInHomeCurrencyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalAmountInHomeCurrency, true
}

// SetTotalAmountInHomeCurrency sets field value
func (o *QbdPurchaseOrder) SetTotalAmountInHomeCurrency(v string) {
	o.TotalAmountInHomeCurrency = v
}

// GetIsManuallyClosed returns the IsManuallyClosed field value
func (o *QbdPurchaseOrder) GetIsManuallyClosed() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsManuallyClosed
}

// GetIsManuallyClosedOk returns a tuple with the IsManuallyClosed field value
// and a boolean to check if the value has been set.
func (o *QbdPurchaseOrder) GetIsManuallyClosedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsManuallyClosed, true
}

// SetIsManuallyClosed sets field value
func (o *QbdPurchaseOrder) SetIsManuallyClosed(v bool) {
	o.IsManuallyClosed = v
}

// GetIsFullyReceived returns the IsFullyReceived field value
func (o *QbdPurchaseOrder) GetIsFullyReceived() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsFullyReceived
}

// GetIsFullyReceivedOk returns a tuple with the IsFullyReceived field value
// and a boolean to check if the value has been set.
func (o *QbdPurchaseOrder) GetIsFullyReceivedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsFullyReceived, true
}

// SetIsFullyReceived sets field value
func (o *QbdPurchaseOrder) SetIsFullyReceived(v bool) {
	o.IsFullyReceived = v
}

// GetMemo returns the Memo field value
func (o *QbdPurchaseOrder) GetMemo() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Memo
}

// GetMemoOk returns a tuple with the Memo field value
// and a boolean to check if the value has been set.
func (o *QbdPurchaseOrder) GetMemoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Memo, true
}

// SetMemo sets field value
func (o *QbdPurchaseOrder) SetMemo(v string) {
	o.Memo = v
}

// GetVendorMessage returns the VendorMessage field value
func (o *QbdPurchaseOrder) GetVendorMessage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.VendorMessage
}

// GetVendorMessageOk returns a tuple with the VendorMessage field value
// and a boolean to check if the value has been set.
func (o *QbdPurchaseOrder) GetVendorMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VendorMessage, true
}

// SetVendorMessage sets field value
func (o *QbdPurchaseOrder) SetVendorMessage(v string) {
	o.VendorMessage = v
}

// GetIsQueuedForPrint returns the IsQueuedForPrint field value
func (o *QbdPurchaseOrder) GetIsQueuedForPrint() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsQueuedForPrint
}

// GetIsQueuedForPrintOk returns a tuple with the IsQueuedForPrint field value
// and a boolean to check if the value has been set.
func (o *QbdPurchaseOrder) GetIsQueuedForPrintOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsQueuedForPrint, true
}

// SetIsQueuedForPrint sets field value
func (o *QbdPurchaseOrder) SetIsQueuedForPrint(v bool) {
	o.IsQueuedForPrint = v
}

// GetIsQueuedForEmail returns the IsQueuedForEmail field value
func (o *QbdPurchaseOrder) GetIsQueuedForEmail() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsQueuedForEmail
}

// GetIsQueuedForEmailOk returns a tuple with the IsQueuedForEmail field value
// and a boolean to check if the value has been set.
func (o *QbdPurchaseOrder) GetIsQueuedForEmailOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsQueuedForEmail, true
}

// SetIsQueuedForEmail sets field value
func (o *QbdPurchaseOrder) SetIsQueuedForEmail(v bool) {
	o.IsQueuedForEmail = v
}

// GetSalesTaxCode returns the SalesTaxCode field value
func (o *QbdPurchaseOrder) GetSalesTaxCode() QbdPurchaseOrderSalesTaxCode {
	if o == nil {
		var ret QbdPurchaseOrderSalesTaxCode
		return ret
	}

	return o.SalesTaxCode
}

// GetSalesTaxCodeOk returns a tuple with the SalesTaxCode field value
// and a boolean to check if the value has been set.
func (o *QbdPurchaseOrder) GetSalesTaxCodeOk() (*QbdPurchaseOrderSalesTaxCode, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SalesTaxCode, true
}

// SetSalesTaxCode sets field value
func (o *QbdPurchaseOrder) SetSalesTaxCode(v QbdPurchaseOrderSalesTaxCode) {
	o.SalesTaxCode = v
}

// GetOtherCustomField1 returns the OtherCustomField1 field value
func (o *QbdPurchaseOrder) GetOtherCustomField1() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OtherCustomField1
}

// GetOtherCustomField1Ok returns a tuple with the OtherCustomField1 field value
// and a boolean to check if the value has been set.
func (o *QbdPurchaseOrder) GetOtherCustomField1Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OtherCustomField1, true
}

// SetOtherCustomField1 sets field value
func (o *QbdPurchaseOrder) SetOtherCustomField1(v string) {
	o.OtherCustomField1 = v
}

// GetOtherCustomField2 returns the OtherCustomField2 field value
func (o *QbdPurchaseOrder) GetOtherCustomField2() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OtherCustomField2
}

// GetOtherCustomField2Ok returns a tuple with the OtherCustomField2 field value
// and a boolean to check if the value has been set.
func (o *QbdPurchaseOrder) GetOtherCustomField2Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OtherCustomField2, true
}

// SetOtherCustomField2 sets field value
func (o *QbdPurchaseOrder) SetOtherCustomField2(v string) {
	o.OtherCustomField2 = v
}

// GetExternalId returns the ExternalId field value
func (o *QbdPurchaseOrder) GetExternalId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ExternalId
}

// GetExternalIdOk returns a tuple with the ExternalId field value
// and a boolean to check if the value has been set.
func (o *QbdPurchaseOrder) GetExternalIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExternalId, true
}

// SetExternalId sets field value
func (o *QbdPurchaseOrder) SetExternalId(v string) {
	o.ExternalId = v
}

// GetLinkedTransactions returns the LinkedTransactions field value
func (o *QbdPurchaseOrder) GetLinkedTransactions() []QbdLinkedTransaction {
	if o == nil {
		var ret []QbdLinkedTransaction
		return ret
	}

	return o.LinkedTransactions
}

// GetLinkedTransactionsOk returns a tuple with the LinkedTransactions field value
// and a boolean to check if the value has been set.
func (o *QbdPurchaseOrder) GetLinkedTransactionsOk() ([]QbdLinkedTransaction, bool) {
	if o == nil {
		return nil, false
	}
	return o.LinkedTransactions, true
}

// SetLinkedTransactions sets field value
func (o *QbdPurchaseOrder) SetLinkedTransactions(v []QbdLinkedTransaction) {
	o.LinkedTransactions = v
}

// GetLines returns the Lines field value
func (o *QbdPurchaseOrder) GetLines() []QbdPurchaseOrderLine {
	if o == nil {
		var ret []QbdPurchaseOrderLine
		return ret
	}

	return o.Lines
}

// GetLinesOk returns a tuple with the Lines field value
// and a boolean to check if the value has been set.
func (o *QbdPurchaseOrder) GetLinesOk() ([]QbdPurchaseOrderLine, bool) {
	if o == nil {
		return nil, false
	}
	return o.Lines, true
}

// SetLines sets field value
func (o *QbdPurchaseOrder) SetLines(v []QbdPurchaseOrderLine) {
	o.Lines = v
}

// GetLineGroups returns the LineGroups field value
func (o *QbdPurchaseOrder) GetLineGroups() []QbdPurchaseOrderLineGroup {
	if o == nil {
		var ret []QbdPurchaseOrderLineGroup
		return ret
	}

	return o.LineGroups
}

// GetLineGroupsOk returns a tuple with the LineGroups field value
// and a boolean to check if the value has been set.
func (o *QbdPurchaseOrder) GetLineGroupsOk() ([]QbdPurchaseOrderLineGroup, bool) {
	if o == nil {
		return nil, false
	}
	return o.LineGroups, true
}

// SetLineGroups sets field value
func (o *QbdPurchaseOrder) SetLineGroups(v []QbdPurchaseOrderLineGroup) {
	o.LineGroups = v
}

// GetCustomFields returns the CustomFields field value
func (o *QbdPurchaseOrder) GetCustomFields() []QbdCustomField {
	if o == nil {
		var ret []QbdCustomField
		return ret
	}

	return o.CustomFields
}

// GetCustomFieldsOk returns a tuple with the CustomFields field value
// and a boolean to check if the value has been set.
func (o *QbdPurchaseOrder) GetCustomFieldsOk() ([]QbdCustomField, bool) {
	if o == nil {
		return nil, false
	}
	return o.CustomFields, true
}

// SetCustomFields sets field value
func (o *QbdPurchaseOrder) SetCustomFields(v []QbdCustomField) {
	o.CustomFields = v
}

func (o QbdPurchaseOrder) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QbdPurchaseOrder) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["objectType"] = o.ObjectType
	toSerialize["createdAt"] = o.CreatedAt
	toSerialize["updatedAt"] = o.UpdatedAt
	toSerialize["revisionNumber"] = o.RevisionNumber
	toSerialize["vendor"] = o.Vendor
	toSerialize["class"] = o.Class
	toSerialize["inventorySite"] = o.InventorySite
	toSerialize["shipToEntity"] = o.ShipToEntity
	toSerialize["documentTemplate"] = o.DocumentTemplate
	toSerialize["transactionDate"] = o.TransactionDate
	toSerialize["refNumber"] = o.RefNumber
	toSerialize["vendorAddress"] = o.VendorAddress
	toSerialize["shippingAddress"] = o.ShippingAddress
	toSerialize["terms"] = o.Terms
	toSerialize["dueDate"] = o.DueDate
	toSerialize["expectedDate"] = o.ExpectedDate
	toSerialize["shippingMethod"] = o.ShippingMethod
	toSerialize["shipmentOrigin"] = o.ShipmentOrigin
	toSerialize["totalAmount"] = o.TotalAmount
	toSerialize["currency"] = o.Currency
	toSerialize["exchangeRate"] = o.ExchangeRate
	toSerialize["totalAmountInHomeCurrency"] = o.TotalAmountInHomeCurrency
	toSerialize["isManuallyClosed"] = o.IsManuallyClosed
	toSerialize["isFullyReceived"] = o.IsFullyReceived
	toSerialize["memo"] = o.Memo
	toSerialize["vendorMessage"] = o.VendorMessage
	toSerialize["isQueuedForPrint"] = o.IsQueuedForPrint
	toSerialize["isQueuedForEmail"] = o.IsQueuedForEmail
	toSerialize["salesTaxCode"] = o.SalesTaxCode
	toSerialize["otherCustomField1"] = o.OtherCustomField1
	toSerialize["otherCustomField2"] = o.OtherCustomField2
	toSerialize["externalId"] = o.ExternalId
	toSerialize["linkedTransactions"] = o.LinkedTransactions
	toSerialize["lines"] = o.Lines
	toSerialize["lineGroups"] = o.LineGroups
	toSerialize["customFields"] = o.CustomFields

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *QbdPurchaseOrder) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"objectType",
		"createdAt",
		"updatedAt",
		"revisionNumber",
		"vendor",
		"class",
		"inventorySite",
		"shipToEntity",
		"documentTemplate",
		"transactionDate",
		"refNumber",
		"vendorAddress",
		"shippingAddress",
		"terms",
		"dueDate",
		"expectedDate",
		"shippingMethod",
		"shipmentOrigin",
		"totalAmount",
		"currency",
		"exchangeRate",
		"totalAmountInHomeCurrency",
		"isManuallyClosed",
		"isFullyReceived",
		"memo",
		"vendorMessage",
		"isQueuedForPrint",
		"isQueuedForEmail",
		"salesTaxCode",
		"otherCustomField1",
		"otherCustomField2",
		"externalId",
		"linkedTransactions",
		"lines",
		"lineGroups",
		"customFields",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varQbdPurchaseOrder := _QbdPurchaseOrder{}

	err = json.Unmarshal(data, &varQbdPurchaseOrder)

	if err != nil {
		return err
	}

	*o = QbdPurchaseOrder(varQbdPurchaseOrder)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "objectType")
		delete(additionalProperties, "createdAt")
		delete(additionalProperties, "updatedAt")
		delete(additionalProperties, "revisionNumber")
		delete(additionalProperties, "vendor")
		delete(additionalProperties, "class")
		delete(additionalProperties, "inventorySite")
		delete(additionalProperties, "shipToEntity")
		delete(additionalProperties, "documentTemplate")
		delete(additionalProperties, "transactionDate")
		delete(additionalProperties, "refNumber")
		delete(additionalProperties, "vendorAddress")
		delete(additionalProperties, "shippingAddress")
		delete(additionalProperties, "terms")
		delete(additionalProperties, "dueDate")
		delete(additionalProperties, "expectedDate")
		delete(additionalProperties, "shippingMethod")
		delete(additionalProperties, "shipmentOrigin")
		delete(additionalProperties, "totalAmount")
		delete(additionalProperties, "currency")
		delete(additionalProperties, "exchangeRate")
		delete(additionalProperties, "totalAmountInHomeCurrency")
		delete(additionalProperties, "isManuallyClosed")
		delete(additionalProperties, "isFullyReceived")
		delete(additionalProperties, "memo")
		delete(additionalProperties, "vendorMessage")
		delete(additionalProperties, "isQueuedForPrint")
		delete(additionalProperties, "isQueuedForEmail")
		delete(additionalProperties, "salesTaxCode")
		delete(additionalProperties, "otherCustomField1")
		delete(additionalProperties, "otherCustomField2")
		delete(additionalProperties, "externalId")
		delete(additionalProperties, "linkedTransactions")
		delete(additionalProperties, "lines")
		delete(additionalProperties, "lineGroups")
		delete(additionalProperties, "customFields")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableQbdPurchaseOrder struct {
	value *QbdPurchaseOrder
	isSet bool
}

func (v NullableQbdPurchaseOrder) Get() *QbdPurchaseOrder {
	return v.value
}

func (v *NullableQbdPurchaseOrder) Set(val *QbdPurchaseOrder) {
	v.value = val
	v.isSet = true
}

func (v NullableQbdPurchaseOrder) IsSet() bool {
	return v.isSet
}

func (v *NullableQbdPurchaseOrder) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQbdPurchaseOrder(val *QbdPurchaseOrder) *NullableQbdPurchaseOrder {
	return &NullableQbdPurchaseOrder{value: val, isSet: true}
}

func (v NullableQbdPurchaseOrder) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQbdPurchaseOrder) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


