/*
Conductor API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package conductor

import (
	"encoding/json"
)

// checks if the QuickbooksDesktopInventoryAdjustmentsPostRequestLinesInnerAdjustLotNumber type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QuickbooksDesktopInventoryAdjustmentsPostRequestLinesInnerAdjustLotNumber{}

// QuickbooksDesktopInventoryAdjustmentsPostRequestLinesInnerAdjustLotNumber Adjusts the lot number of this inventory adjustment line.
type QuickbooksDesktopInventoryAdjustmentsPostRequestLinesInnerAdjustLotNumber struct {
	// The lot number of the item associated with this inventory adjustment line. Used for tracking groups of inventory items that are purchased or manufactured together.
	LotNumber *string `json:"lotNumber,omitempty"`
	// The amount to adjust the count of the inventory item associated with this inventory adjustment line.
	AdjustCount *float32 `json:"adjustCount,omitempty"`
	// The expiration date for the serial number or lot number of the item associated with this inventory adjustment line, in ISO 8601 format (YYYY-MM-DD). This is particularly relevant for perishable or time-sensitive inventory items. Note that this field is only supported on QuickBooks Desktop 2023 or later.
	ExpirationDate *string `json:"expirationDate,omitempty"`
	// The specific location (e.g., bin or shelf) within the inventory site where the item associated with this inventory adjustment line is stored.
	InventorySiteLocationId *string `json:"inventorySiteLocationId,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _QuickbooksDesktopInventoryAdjustmentsPostRequestLinesInnerAdjustLotNumber QuickbooksDesktopInventoryAdjustmentsPostRequestLinesInnerAdjustLotNumber

// NewQuickbooksDesktopInventoryAdjustmentsPostRequestLinesInnerAdjustLotNumber instantiates a new QuickbooksDesktopInventoryAdjustmentsPostRequestLinesInnerAdjustLotNumber object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQuickbooksDesktopInventoryAdjustmentsPostRequestLinesInnerAdjustLotNumber() *QuickbooksDesktopInventoryAdjustmentsPostRequestLinesInnerAdjustLotNumber {
	this := QuickbooksDesktopInventoryAdjustmentsPostRequestLinesInnerAdjustLotNumber{}
	return &this
}

// NewQuickbooksDesktopInventoryAdjustmentsPostRequestLinesInnerAdjustLotNumberWithDefaults instantiates a new QuickbooksDesktopInventoryAdjustmentsPostRequestLinesInnerAdjustLotNumber object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQuickbooksDesktopInventoryAdjustmentsPostRequestLinesInnerAdjustLotNumberWithDefaults() *QuickbooksDesktopInventoryAdjustmentsPostRequestLinesInnerAdjustLotNumber {
	this := QuickbooksDesktopInventoryAdjustmentsPostRequestLinesInnerAdjustLotNumber{}
	return &this
}

// GetLotNumber returns the LotNumber field value if set, zero value otherwise.
func (o *QuickbooksDesktopInventoryAdjustmentsPostRequestLinesInnerAdjustLotNumber) GetLotNumber() string {
	if o == nil || IsNil(o.LotNumber) {
		var ret string
		return ret
	}
	return *o.LotNumber
}

// GetLotNumberOk returns a tuple with the LotNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopInventoryAdjustmentsPostRequestLinesInnerAdjustLotNumber) GetLotNumberOk() (*string, bool) {
	if o == nil || IsNil(o.LotNumber) {
		return nil, false
	}
	return o.LotNumber, true
}

// HasLotNumber returns a boolean if a field has been set.
func (o *QuickbooksDesktopInventoryAdjustmentsPostRequestLinesInnerAdjustLotNumber) HasLotNumber() bool {
	if o != nil && !IsNil(o.LotNumber) {
		return true
	}

	return false
}

// SetLotNumber gets a reference to the given string and assigns it to the LotNumber field.
func (o *QuickbooksDesktopInventoryAdjustmentsPostRequestLinesInnerAdjustLotNumber) SetLotNumber(v string) {
	o.LotNumber = &v
}

// GetAdjustCount returns the AdjustCount field value if set, zero value otherwise.
func (o *QuickbooksDesktopInventoryAdjustmentsPostRequestLinesInnerAdjustLotNumber) GetAdjustCount() float32 {
	if o == nil || IsNil(o.AdjustCount) {
		var ret float32
		return ret
	}
	return *o.AdjustCount
}

// GetAdjustCountOk returns a tuple with the AdjustCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopInventoryAdjustmentsPostRequestLinesInnerAdjustLotNumber) GetAdjustCountOk() (*float32, bool) {
	if o == nil || IsNil(o.AdjustCount) {
		return nil, false
	}
	return o.AdjustCount, true
}

// HasAdjustCount returns a boolean if a field has been set.
func (o *QuickbooksDesktopInventoryAdjustmentsPostRequestLinesInnerAdjustLotNumber) HasAdjustCount() bool {
	if o != nil && !IsNil(o.AdjustCount) {
		return true
	}

	return false
}

// SetAdjustCount gets a reference to the given float32 and assigns it to the AdjustCount field.
func (o *QuickbooksDesktopInventoryAdjustmentsPostRequestLinesInnerAdjustLotNumber) SetAdjustCount(v float32) {
	o.AdjustCount = &v
}

// GetExpirationDate returns the ExpirationDate field value if set, zero value otherwise.
func (o *QuickbooksDesktopInventoryAdjustmentsPostRequestLinesInnerAdjustLotNumber) GetExpirationDate() string {
	if o == nil || IsNil(o.ExpirationDate) {
		var ret string
		return ret
	}
	return *o.ExpirationDate
}

// GetExpirationDateOk returns a tuple with the ExpirationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopInventoryAdjustmentsPostRequestLinesInnerAdjustLotNumber) GetExpirationDateOk() (*string, bool) {
	if o == nil || IsNil(o.ExpirationDate) {
		return nil, false
	}
	return o.ExpirationDate, true
}

// HasExpirationDate returns a boolean if a field has been set.
func (o *QuickbooksDesktopInventoryAdjustmentsPostRequestLinesInnerAdjustLotNumber) HasExpirationDate() bool {
	if o != nil && !IsNil(o.ExpirationDate) {
		return true
	}

	return false
}

// SetExpirationDate gets a reference to the given string and assigns it to the ExpirationDate field.
func (o *QuickbooksDesktopInventoryAdjustmentsPostRequestLinesInnerAdjustLotNumber) SetExpirationDate(v string) {
	o.ExpirationDate = &v
}

// GetInventorySiteLocationId returns the InventorySiteLocationId field value if set, zero value otherwise.
func (o *QuickbooksDesktopInventoryAdjustmentsPostRequestLinesInnerAdjustLotNumber) GetInventorySiteLocationId() string {
	if o == nil || IsNil(o.InventorySiteLocationId) {
		var ret string
		return ret
	}
	return *o.InventorySiteLocationId
}

// GetInventorySiteLocationIdOk returns a tuple with the InventorySiteLocationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopInventoryAdjustmentsPostRequestLinesInnerAdjustLotNumber) GetInventorySiteLocationIdOk() (*string, bool) {
	if o == nil || IsNil(o.InventorySiteLocationId) {
		return nil, false
	}
	return o.InventorySiteLocationId, true
}

// HasInventorySiteLocationId returns a boolean if a field has been set.
func (o *QuickbooksDesktopInventoryAdjustmentsPostRequestLinesInnerAdjustLotNumber) HasInventorySiteLocationId() bool {
	if o != nil && !IsNil(o.InventorySiteLocationId) {
		return true
	}

	return false
}

// SetInventorySiteLocationId gets a reference to the given string and assigns it to the InventorySiteLocationId field.
func (o *QuickbooksDesktopInventoryAdjustmentsPostRequestLinesInnerAdjustLotNumber) SetInventorySiteLocationId(v string) {
	o.InventorySiteLocationId = &v
}

func (o QuickbooksDesktopInventoryAdjustmentsPostRequestLinesInnerAdjustLotNumber) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QuickbooksDesktopInventoryAdjustmentsPostRequestLinesInnerAdjustLotNumber) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.LotNumber) {
		toSerialize["lotNumber"] = o.LotNumber
	}
	if !IsNil(o.AdjustCount) {
		toSerialize["adjustCount"] = o.AdjustCount
	}
	if !IsNil(o.ExpirationDate) {
		toSerialize["expirationDate"] = o.ExpirationDate
	}
	if !IsNil(o.InventorySiteLocationId) {
		toSerialize["inventorySiteLocationId"] = o.InventorySiteLocationId
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *QuickbooksDesktopInventoryAdjustmentsPostRequestLinesInnerAdjustLotNumber) UnmarshalJSON(data []byte) (err error) {
	varQuickbooksDesktopInventoryAdjustmentsPostRequestLinesInnerAdjustLotNumber := _QuickbooksDesktopInventoryAdjustmentsPostRequestLinesInnerAdjustLotNumber{}

	err = json.Unmarshal(data, &varQuickbooksDesktopInventoryAdjustmentsPostRequestLinesInnerAdjustLotNumber)

	if err != nil {
		return err
	}

	*o = QuickbooksDesktopInventoryAdjustmentsPostRequestLinesInnerAdjustLotNumber(varQuickbooksDesktopInventoryAdjustmentsPostRequestLinesInnerAdjustLotNumber)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "lotNumber")
		delete(additionalProperties, "adjustCount")
		delete(additionalProperties, "expirationDate")
		delete(additionalProperties, "inventorySiteLocationId")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableQuickbooksDesktopInventoryAdjustmentsPostRequestLinesInnerAdjustLotNumber struct {
	value *QuickbooksDesktopInventoryAdjustmentsPostRequestLinesInnerAdjustLotNumber
	isSet bool
}

func (v NullableQuickbooksDesktopInventoryAdjustmentsPostRequestLinesInnerAdjustLotNumber) Get() *QuickbooksDesktopInventoryAdjustmentsPostRequestLinesInnerAdjustLotNumber {
	return v.value
}

func (v *NullableQuickbooksDesktopInventoryAdjustmentsPostRequestLinesInnerAdjustLotNumber) Set(val *QuickbooksDesktopInventoryAdjustmentsPostRequestLinesInnerAdjustLotNumber) {
	v.value = val
	v.isSet = true
}

func (v NullableQuickbooksDesktopInventoryAdjustmentsPostRequestLinesInnerAdjustLotNumber) IsSet() bool {
	return v.isSet
}

func (v *NullableQuickbooksDesktopInventoryAdjustmentsPostRequestLinesInnerAdjustLotNumber) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQuickbooksDesktopInventoryAdjustmentsPostRequestLinesInnerAdjustLotNumber(val *QuickbooksDesktopInventoryAdjustmentsPostRequestLinesInnerAdjustLotNumber) *NullableQuickbooksDesktopInventoryAdjustmentsPostRequestLinesInnerAdjustLotNumber {
	return &NullableQuickbooksDesktopInventoryAdjustmentsPostRequestLinesInnerAdjustLotNumber{value: val, isSet: true}
}

func (v NullableQuickbooksDesktopInventoryAdjustmentsPostRequestLinesInnerAdjustLotNumber) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQuickbooksDesktopInventoryAdjustmentsPostRequestLinesInnerAdjustLotNumber) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


