/*
Conductor API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package conductor

import (
	"encoding/json"
	"fmt"
)

// checks if the QbdNonInventoryItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QbdNonInventoryItem{}

// QbdNonInventoryItem struct for QbdNonInventoryItem
type QbdNonInventoryItem struct {
	// The unique identifier assigned by QuickBooks to this non-inventory item. This ID is unique across all non-inventory items but not across different QuickBooks object types.
	Id string `json:"id"`
	// The type of object. This value is always `\"qbd_non_inventory_item\"`.
	ObjectType string `json:"objectType"`
	// The date and time when this non-inventory item was created, in ISO 8601 format (YYYY-MM-DDThh:mm:ss±hh:mm). The time zone is the same as the user's time zone in QuickBooks.
	CreatedAt string `json:"createdAt"`
	// The date and time when this non-inventory item was last updated, in ISO 8601 format (YYYY-MM-DDThh:mm:ss±hh:mm). The time zone is the same as the user's time zone in QuickBooks.
	UpdatedAt string `json:"updatedAt"`
	// The current QuickBooks-assigned revision number of this non-inventory item object, which changes each time the object is modified. When updating this object, you must provide the most recent `revisionNumber` to ensure you're working with the latest data; otherwise, the update will return an error.
	RevisionNumber string `json:"revisionNumber"`
	// The case-insensitive name of this non-inventory item. Not guaranteed to be unique because it does not include the names of its hierarchical parent objects like `fullName` does. For example, two non-inventory items could both have the `name` \"Printer Ink Cartridge\", but they could have unique `fullName` values, such as \"Office Supplies:Printer Ink Cartridge\" and \"Miscellaneous:Printer Ink Cartridge\".
	Name string `json:"name"`
	// The case-insensitive fully-qualified unique name of this non-inventory item, formed by combining the names of its hierarchical parent objects with its own `name`, separated by colons. For example, if a non-inventory item is under \"Office Supplies\" and has the `name` \"Printer Ink Cartridge\", its `fullName` would be \"Office Supplies:Printer Ink Cartridge\".  **NOTE**: Unlike `name`, `fullName` is guaranteed to be unique across all non-inventory item objects. However, `fullName` can still be arbitrarily changed by the QuickBooks user when they modify the underlying `name` field.
	FullName string `json:"fullName"`
	// The non-inventory item's barcode.
	Barcode string `json:"barcode"`
	// Indicates whether this non-inventory item is active. Inactive objects are typically hidden from views and reports in QuickBooks. Defaults to `true`.
	IsActive bool `json:"isActive"`
	Class QbdNonInventoryItemClass `json:"class"`
	Parent QbdNonInventoryItemParent `json:"parent"`
	// The depth level of this non-inventory item in the hierarchy. A top-level non-inventory item has a `sublevel` of 0; each subsequent sublevel increases this number by 1. For example, a non-inventory item with a `fullName` of \"Office Supplies:Printer Ink Cartridge\" would have a `sublevel` of 1.
	Sublevel float32 `json:"sublevel"`
	// The non-inventory item's stock keeping unit (SKU), which is sometimes the manufacturer's part number.
	Sku string `json:"sku"`
	UnitOfMeasureSet QbdNonInventoryItemUnitOfMeasureSet `json:"unitOfMeasureSet"`
	SalesTaxCode QbdNonInventoryItemSalesTaxCode `json:"salesTaxCode"`
	SalesOrPurchaseDetails QbdNonInventoryItemSalesOrPurchaseDetails `json:"salesOrPurchaseDetails"`
	SalesAndPurchaseDetails QbdNonInventoryItemSalesAndPurchaseDetails `json:"salesAndPurchaseDetails"`
	// A globally unique identifier (GUID) you, the developer, can provide for tracking this object in your external system. This field is immutable and can only be set during object creation.
	ExternalId string `json:"externalId"`
	// The custom fields for the non-inventory item object, added as user-defined data extensions, not included in the standard QuickBooks object.
	CustomFields []QbdCustomField `json:"customFields"`
	AdditionalProperties map[string]interface{}
}

type _QbdNonInventoryItem QbdNonInventoryItem

// NewQbdNonInventoryItem instantiates a new QbdNonInventoryItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQbdNonInventoryItem(id string, objectType string, createdAt string, updatedAt string, revisionNumber string, name string, fullName string, barcode string, isActive bool, class QbdNonInventoryItemClass, parent QbdNonInventoryItemParent, sublevel float32, sku string, unitOfMeasureSet QbdNonInventoryItemUnitOfMeasureSet, salesTaxCode QbdNonInventoryItemSalesTaxCode, salesOrPurchaseDetails QbdNonInventoryItemSalesOrPurchaseDetails, salesAndPurchaseDetails QbdNonInventoryItemSalesAndPurchaseDetails, externalId string, customFields []QbdCustomField) *QbdNonInventoryItem {
	this := QbdNonInventoryItem{}
	this.Id = id
	this.ObjectType = objectType
	this.CreatedAt = createdAt
	this.UpdatedAt = updatedAt
	this.RevisionNumber = revisionNumber
	this.Name = name
	this.FullName = fullName
	this.Barcode = barcode
	this.IsActive = isActive
	this.Class = class
	this.Parent = parent
	this.Sublevel = sublevel
	this.Sku = sku
	this.UnitOfMeasureSet = unitOfMeasureSet
	this.SalesTaxCode = salesTaxCode
	this.SalesOrPurchaseDetails = salesOrPurchaseDetails
	this.SalesAndPurchaseDetails = salesAndPurchaseDetails
	this.ExternalId = externalId
	this.CustomFields = customFields
	return &this
}

// NewQbdNonInventoryItemWithDefaults instantiates a new QbdNonInventoryItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQbdNonInventoryItemWithDefaults() *QbdNonInventoryItem {
	this := QbdNonInventoryItem{}
	return &this
}

// GetId returns the Id field value
func (o *QbdNonInventoryItem) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *QbdNonInventoryItem) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *QbdNonInventoryItem) SetId(v string) {
	o.Id = v
}

// GetObjectType returns the ObjectType field value
func (o *QbdNonInventoryItem) GetObjectType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ObjectType
}

// GetObjectTypeOk returns a tuple with the ObjectType field value
// and a boolean to check if the value has been set.
func (o *QbdNonInventoryItem) GetObjectTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ObjectType, true
}

// SetObjectType sets field value
func (o *QbdNonInventoryItem) SetObjectType(v string) {
	o.ObjectType = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *QbdNonInventoryItem) GetCreatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *QbdNonInventoryItem) GetCreatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *QbdNonInventoryItem) SetCreatedAt(v string) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *QbdNonInventoryItem) GetUpdatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *QbdNonInventoryItem) GetUpdatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *QbdNonInventoryItem) SetUpdatedAt(v string) {
	o.UpdatedAt = v
}

// GetRevisionNumber returns the RevisionNumber field value
func (o *QbdNonInventoryItem) GetRevisionNumber() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RevisionNumber
}

// GetRevisionNumberOk returns a tuple with the RevisionNumber field value
// and a boolean to check if the value has been set.
func (o *QbdNonInventoryItem) GetRevisionNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RevisionNumber, true
}

// SetRevisionNumber sets field value
func (o *QbdNonInventoryItem) SetRevisionNumber(v string) {
	o.RevisionNumber = v
}

// GetName returns the Name field value
func (o *QbdNonInventoryItem) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *QbdNonInventoryItem) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *QbdNonInventoryItem) SetName(v string) {
	o.Name = v
}

// GetFullName returns the FullName field value
func (o *QbdNonInventoryItem) GetFullName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FullName
}

// GetFullNameOk returns a tuple with the FullName field value
// and a boolean to check if the value has been set.
func (o *QbdNonInventoryItem) GetFullNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FullName, true
}

// SetFullName sets field value
func (o *QbdNonInventoryItem) SetFullName(v string) {
	o.FullName = v
}

// GetBarcode returns the Barcode field value
func (o *QbdNonInventoryItem) GetBarcode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Barcode
}

// GetBarcodeOk returns a tuple with the Barcode field value
// and a boolean to check if the value has been set.
func (o *QbdNonInventoryItem) GetBarcodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Barcode, true
}

// SetBarcode sets field value
func (o *QbdNonInventoryItem) SetBarcode(v string) {
	o.Barcode = v
}

// GetIsActive returns the IsActive field value
func (o *QbdNonInventoryItem) GetIsActive() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsActive
}

// GetIsActiveOk returns a tuple with the IsActive field value
// and a boolean to check if the value has been set.
func (o *QbdNonInventoryItem) GetIsActiveOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsActive, true
}

// SetIsActive sets field value
func (o *QbdNonInventoryItem) SetIsActive(v bool) {
	o.IsActive = v
}

// GetClass returns the Class field value
func (o *QbdNonInventoryItem) GetClass() QbdNonInventoryItemClass {
	if o == nil {
		var ret QbdNonInventoryItemClass
		return ret
	}

	return o.Class
}

// GetClassOk returns a tuple with the Class field value
// and a boolean to check if the value has been set.
func (o *QbdNonInventoryItem) GetClassOk() (*QbdNonInventoryItemClass, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Class, true
}

// SetClass sets field value
func (o *QbdNonInventoryItem) SetClass(v QbdNonInventoryItemClass) {
	o.Class = v
}

// GetParent returns the Parent field value
func (o *QbdNonInventoryItem) GetParent() QbdNonInventoryItemParent {
	if o == nil {
		var ret QbdNonInventoryItemParent
		return ret
	}

	return o.Parent
}

// GetParentOk returns a tuple with the Parent field value
// and a boolean to check if the value has been set.
func (o *QbdNonInventoryItem) GetParentOk() (*QbdNonInventoryItemParent, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Parent, true
}

// SetParent sets field value
func (o *QbdNonInventoryItem) SetParent(v QbdNonInventoryItemParent) {
	o.Parent = v
}

// GetSublevel returns the Sublevel field value
func (o *QbdNonInventoryItem) GetSublevel() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Sublevel
}

// GetSublevelOk returns a tuple with the Sublevel field value
// and a boolean to check if the value has been set.
func (o *QbdNonInventoryItem) GetSublevelOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Sublevel, true
}

// SetSublevel sets field value
func (o *QbdNonInventoryItem) SetSublevel(v float32) {
	o.Sublevel = v
}

// GetSku returns the Sku field value
func (o *QbdNonInventoryItem) GetSku() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Sku
}

// GetSkuOk returns a tuple with the Sku field value
// and a boolean to check if the value has been set.
func (o *QbdNonInventoryItem) GetSkuOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Sku, true
}

// SetSku sets field value
func (o *QbdNonInventoryItem) SetSku(v string) {
	o.Sku = v
}

// GetUnitOfMeasureSet returns the UnitOfMeasureSet field value
func (o *QbdNonInventoryItem) GetUnitOfMeasureSet() QbdNonInventoryItemUnitOfMeasureSet {
	if o == nil {
		var ret QbdNonInventoryItemUnitOfMeasureSet
		return ret
	}

	return o.UnitOfMeasureSet
}

// GetUnitOfMeasureSetOk returns a tuple with the UnitOfMeasureSet field value
// and a boolean to check if the value has been set.
func (o *QbdNonInventoryItem) GetUnitOfMeasureSetOk() (*QbdNonInventoryItemUnitOfMeasureSet, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UnitOfMeasureSet, true
}

// SetUnitOfMeasureSet sets field value
func (o *QbdNonInventoryItem) SetUnitOfMeasureSet(v QbdNonInventoryItemUnitOfMeasureSet) {
	o.UnitOfMeasureSet = v
}

// GetSalesTaxCode returns the SalesTaxCode field value
func (o *QbdNonInventoryItem) GetSalesTaxCode() QbdNonInventoryItemSalesTaxCode {
	if o == nil {
		var ret QbdNonInventoryItemSalesTaxCode
		return ret
	}

	return o.SalesTaxCode
}

// GetSalesTaxCodeOk returns a tuple with the SalesTaxCode field value
// and a boolean to check if the value has been set.
func (o *QbdNonInventoryItem) GetSalesTaxCodeOk() (*QbdNonInventoryItemSalesTaxCode, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SalesTaxCode, true
}

// SetSalesTaxCode sets field value
func (o *QbdNonInventoryItem) SetSalesTaxCode(v QbdNonInventoryItemSalesTaxCode) {
	o.SalesTaxCode = v
}

// GetSalesOrPurchaseDetails returns the SalesOrPurchaseDetails field value
func (o *QbdNonInventoryItem) GetSalesOrPurchaseDetails() QbdNonInventoryItemSalesOrPurchaseDetails {
	if o == nil {
		var ret QbdNonInventoryItemSalesOrPurchaseDetails
		return ret
	}

	return o.SalesOrPurchaseDetails
}

// GetSalesOrPurchaseDetailsOk returns a tuple with the SalesOrPurchaseDetails field value
// and a boolean to check if the value has been set.
func (o *QbdNonInventoryItem) GetSalesOrPurchaseDetailsOk() (*QbdNonInventoryItemSalesOrPurchaseDetails, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SalesOrPurchaseDetails, true
}

// SetSalesOrPurchaseDetails sets field value
func (o *QbdNonInventoryItem) SetSalesOrPurchaseDetails(v QbdNonInventoryItemSalesOrPurchaseDetails) {
	o.SalesOrPurchaseDetails = v
}

// GetSalesAndPurchaseDetails returns the SalesAndPurchaseDetails field value
func (o *QbdNonInventoryItem) GetSalesAndPurchaseDetails() QbdNonInventoryItemSalesAndPurchaseDetails {
	if o == nil {
		var ret QbdNonInventoryItemSalesAndPurchaseDetails
		return ret
	}

	return o.SalesAndPurchaseDetails
}

// GetSalesAndPurchaseDetailsOk returns a tuple with the SalesAndPurchaseDetails field value
// and a boolean to check if the value has been set.
func (o *QbdNonInventoryItem) GetSalesAndPurchaseDetailsOk() (*QbdNonInventoryItemSalesAndPurchaseDetails, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SalesAndPurchaseDetails, true
}

// SetSalesAndPurchaseDetails sets field value
func (o *QbdNonInventoryItem) SetSalesAndPurchaseDetails(v QbdNonInventoryItemSalesAndPurchaseDetails) {
	o.SalesAndPurchaseDetails = v
}

// GetExternalId returns the ExternalId field value
func (o *QbdNonInventoryItem) GetExternalId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ExternalId
}

// GetExternalIdOk returns a tuple with the ExternalId field value
// and a boolean to check if the value has been set.
func (o *QbdNonInventoryItem) GetExternalIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExternalId, true
}

// SetExternalId sets field value
func (o *QbdNonInventoryItem) SetExternalId(v string) {
	o.ExternalId = v
}

// GetCustomFields returns the CustomFields field value
func (o *QbdNonInventoryItem) GetCustomFields() []QbdCustomField {
	if o == nil {
		var ret []QbdCustomField
		return ret
	}

	return o.CustomFields
}

// GetCustomFieldsOk returns a tuple with the CustomFields field value
// and a boolean to check if the value has been set.
func (o *QbdNonInventoryItem) GetCustomFieldsOk() ([]QbdCustomField, bool) {
	if o == nil {
		return nil, false
	}
	return o.CustomFields, true
}

// SetCustomFields sets field value
func (o *QbdNonInventoryItem) SetCustomFields(v []QbdCustomField) {
	o.CustomFields = v
}

func (o QbdNonInventoryItem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QbdNonInventoryItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["objectType"] = o.ObjectType
	toSerialize["createdAt"] = o.CreatedAt
	toSerialize["updatedAt"] = o.UpdatedAt
	toSerialize["revisionNumber"] = o.RevisionNumber
	toSerialize["name"] = o.Name
	toSerialize["fullName"] = o.FullName
	toSerialize["barcode"] = o.Barcode
	toSerialize["isActive"] = o.IsActive
	toSerialize["class"] = o.Class
	toSerialize["parent"] = o.Parent
	toSerialize["sublevel"] = o.Sublevel
	toSerialize["sku"] = o.Sku
	toSerialize["unitOfMeasureSet"] = o.UnitOfMeasureSet
	toSerialize["salesTaxCode"] = o.SalesTaxCode
	toSerialize["salesOrPurchaseDetails"] = o.SalesOrPurchaseDetails
	toSerialize["salesAndPurchaseDetails"] = o.SalesAndPurchaseDetails
	toSerialize["externalId"] = o.ExternalId
	toSerialize["customFields"] = o.CustomFields

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *QbdNonInventoryItem) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"objectType",
		"createdAt",
		"updatedAt",
		"revisionNumber",
		"name",
		"fullName",
		"barcode",
		"isActive",
		"class",
		"parent",
		"sublevel",
		"sku",
		"unitOfMeasureSet",
		"salesTaxCode",
		"salesOrPurchaseDetails",
		"salesAndPurchaseDetails",
		"externalId",
		"customFields",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varQbdNonInventoryItem := _QbdNonInventoryItem{}

	err = json.Unmarshal(data, &varQbdNonInventoryItem)

	if err != nil {
		return err
	}

	*o = QbdNonInventoryItem(varQbdNonInventoryItem)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "objectType")
		delete(additionalProperties, "createdAt")
		delete(additionalProperties, "updatedAt")
		delete(additionalProperties, "revisionNumber")
		delete(additionalProperties, "name")
		delete(additionalProperties, "fullName")
		delete(additionalProperties, "barcode")
		delete(additionalProperties, "isActive")
		delete(additionalProperties, "class")
		delete(additionalProperties, "parent")
		delete(additionalProperties, "sublevel")
		delete(additionalProperties, "sku")
		delete(additionalProperties, "unitOfMeasureSet")
		delete(additionalProperties, "salesTaxCode")
		delete(additionalProperties, "salesOrPurchaseDetails")
		delete(additionalProperties, "salesAndPurchaseDetails")
		delete(additionalProperties, "externalId")
		delete(additionalProperties, "customFields")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableQbdNonInventoryItem struct {
	value *QbdNonInventoryItem
	isSet bool
}

func (v NullableQbdNonInventoryItem) Get() *QbdNonInventoryItem {
	return v.value
}

func (v *NullableQbdNonInventoryItem) Set(val *QbdNonInventoryItem) {
	v.value = val
	v.isSet = true
}

func (v NullableQbdNonInventoryItem) IsSet() bool {
	return v.isSet
}

func (v *NullableQbdNonInventoryItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQbdNonInventoryItem(val *QbdNonInventoryItem) *NullableQbdNonInventoryItem {
	return &NullableQbdNonInventoryItem{value: val, isSet: true}
}

func (v NullableQbdNonInventoryItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQbdNonInventoryItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


