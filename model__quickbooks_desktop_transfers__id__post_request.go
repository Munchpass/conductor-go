/*
Conductor API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package conductor

import (
	"encoding/json"
	"fmt"
)

// checks if the QuickbooksDesktopTransfersIdPostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QuickbooksDesktopTransfersIdPostRequest{}

// QuickbooksDesktopTransfersIdPostRequest struct for QuickbooksDesktopTransfersIdPostRequest
type QuickbooksDesktopTransfersIdPostRequest struct {
	// The current QuickBooks-assigned revision number of the transfer object you are updating, which you can get by fetching the object first. Provide the most recent `revisionNumber` to ensure you're working with the latest data; otherwise, the update will return an error.
	RevisionNumber string `json:"revisionNumber"`
	// The date of this transfer, in ISO 8601 format (YYYY-MM-DD).
	TransactionDate *string `json:"transactionDate,omitempty"`
	// The account from which money will be transferred.
	SourceAccountId *string `json:"sourceAccountId,omitempty"`
	// The account to which money will be transferred.
	TargetAccountId *string `json:"targetAccountId,omitempty"`
	// The transfer's class. Classes can be used to categorize objects into meaningful segments, such as department, location, or type of work. In QuickBooks, class tracking is off by default.
	ClassId *string `json:"classId,omitempty"`
	// The monetary amount of this transfer, represented as a decimal string.
	Amount *string `json:"amount,omitempty"`
	// A memo or note for this transfer.
	Memo *string `json:"memo,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _QuickbooksDesktopTransfersIdPostRequest QuickbooksDesktopTransfersIdPostRequest

// NewQuickbooksDesktopTransfersIdPostRequest instantiates a new QuickbooksDesktopTransfersIdPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQuickbooksDesktopTransfersIdPostRequest(revisionNumber string) *QuickbooksDesktopTransfersIdPostRequest {
	this := QuickbooksDesktopTransfersIdPostRequest{}
	this.RevisionNumber = revisionNumber
	return &this
}

// NewQuickbooksDesktopTransfersIdPostRequestWithDefaults instantiates a new QuickbooksDesktopTransfersIdPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQuickbooksDesktopTransfersIdPostRequestWithDefaults() *QuickbooksDesktopTransfersIdPostRequest {
	this := QuickbooksDesktopTransfersIdPostRequest{}
	return &this
}

// GetRevisionNumber returns the RevisionNumber field value
func (o *QuickbooksDesktopTransfersIdPostRequest) GetRevisionNumber() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RevisionNumber
}

// GetRevisionNumberOk returns a tuple with the RevisionNumber field value
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopTransfersIdPostRequest) GetRevisionNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RevisionNumber, true
}

// SetRevisionNumber sets field value
func (o *QuickbooksDesktopTransfersIdPostRequest) SetRevisionNumber(v string) {
	o.RevisionNumber = v
}

// GetTransactionDate returns the TransactionDate field value if set, zero value otherwise.
func (o *QuickbooksDesktopTransfersIdPostRequest) GetTransactionDate() string {
	if o == nil || IsNil(o.TransactionDate) {
		var ret string
		return ret
	}
	return *o.TransactionDate
}

// GetTransactionDateOk returns a tuple with the TransactionDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopTransfersIdPostRequest) GetTransactionDateOk() (*string, bool) {
	if o == nil || IsNil(o.TransactionDate) {
		return nil, false
	}
	return o.TransactionDate, true
}

// HasTransactionDate returns a boolean if a field has been set.
func (o *QuickbooksDesktopTransfersIdPostRequest) HasTransactionDate() bool {
	if o != nil && !IsNil(o.TransactionDate) {
		return true
	}

	return false
}

// SetTransactionDate gets a reference to the given string and assigns it to the TransactionDate field.
func (o *QuickbooksDesktopTransfersIdPostRequest) SetTransactionDate(v string) {
	o.TransactionDate = &v
}

// GetSourceAccountId returns the SourceAccountId field value if set, zero value otherwise.
func (o *QuickbooksDesktopTransfersIdPostRequest) GetSourceAccountId() string {
	if o == nil || IsNil(o.SourceAccountId) {
		var ret string
		return ret
	}
	return *o.SourceAccountId
}

// GetSourceAccountIdOk returns a tuple with the SourceAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopTransfersIdPostRequest) GetSourceAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.SourceAccountId) {
		return nil, false
	}
	return o.SourceAccountId, true
}

// HasSourceAccountId returns a boolean if a field has been set.
func (o *QuickbooksDesktopTransfersIdPostRequest) HasSourceAccountId() bool {
	if o != nil && !IsNil(o.SourceAccountId) {
		return true
	}

	return false
}

// SetSourceAccountId gets a reference to the given string and assigns it to the SourceAccountId field.
func (o *QuickbooksDesktopTransfersIdPostRequest) SetSourceAccountId(v string) {
	o.SourceAccountId = &v
}

// GetTargetAccountId returns the TargetAccountId field value if set, zero value otherwise.
func (o *QuickbooksDesktopTransfersIdPostRequest) GetTargetAccountId() string {
	if o == nil || IsNil(o.TargetAccountId) {
		var ret string
		return ret
	}
	return *o.TargetAccountId
}

// GetTargetAccountIdOk returns a tuple with the TargetAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopTransfersIdPostRequest) GetTargetAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.TargetAccountId) {
		return nil, false
	}
	return o.TargetAccountId, true
}

// HasTargetAccountId returns a boolean if a field has been set.
func (o *QuickbooksDesktopTransfersIdPostRequest) HasTargetAccountId() bool {
	if o != nil && !IsNil(o.TargetAccountId) {
		return true
	}

	return false
}

// SetTargetAccountId gets a reference to the given string and assigns it to the TargetAccountId field.
func (o *QuickbooksDesktopTransfersIdPostRequest) SetTargetAccountId(v string) {
	o.TargetAccountId = &v
}

// GetClassId returns the ClassId field value if set, zero value otherwise.
func (o *QuickbooksDesktopTransfersIdPostRequest) GetClassId() string {
	if o == nil || IsNil(o.ClassId) {
		var ret string
		return ret
	}
	return *o.ClassId
}

// GetClassIdOk returns a tuple with the ClassId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopTransfersIdPostRequest) GetClassIdOk() (*string, bool) {
	if o == nil || IsNil(o.ClassId) {
		return nil, false
	}
	return o.ClassId, true
}

// HasClassId returns a boolean if a field has been set.
func (o *QuickbooksDesktopTransfersIdPostRequest) HasClassId() bool {
	if o != nil && !IsNil(o.ClassId) {
		return true
	}

	return false
}

// SetClassId gets a reference to the given string and assigns it to the ClassId field.
func (o *QuickbooksDesktopTransfersIdPostRequest) SetClassId(v string) {
	o.ClassId = &v
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *QuickbooksDesktopTransfersIdPostRequest) GetAmount() string {
	if o == nil || IsNil(o.Amount) {
		var ret string
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopTransfersIdPostRequest) GetAmountOk() (*string, bool) {
	if o == nil || IsNil(o.Amount) {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *QuickbooksDesktopTransfersIdPostRequest) HasAmount() bool {
	if o != nil && !IsNil(o.Amount) {
		return true
	}

	return false
}

// SetAmount gets a reference to the given string and assigns it to the Amount field.
func (o *QuickbooksDesktopTransfersIdPostRequest) SetAmount(v string) {
	o.Amount = &v
}

// GetMemo returns the Memo field value if set, zero value otherwise.
func (o *QuickbooksDesktopTransfersIdPostRequest) GetMemo() string {
	if o == nil || IsNil(o.Memo) {
		var ret string
		return ret
	}
	return *o.Memo
}

// GetMemoOk returns a tuple with the Memo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopTransfersIdPostRequest) GetMemoOk() (*string, bool) {
	if o == nil || IsNil(o.Memo) {
		return nil, false
	}
	return o.Memo, true
}

// HasMemo returns a boolean if a field has been set.
func (o *QuickbooksDesktopTransfersIdPostRequest) HasMemo() bool {
	if o != nil && !IsNil(o.Memo) {
		return true
	}

	return false
}

// SetMemo gets a reference to the given string and assigns it to the Memo field.
func (o *QuickbooksDesktopTransfersIdPostRequest) SetMemo(v string) {
	o.Memo = &v
}

func (o QuickbooksDesktopTransfersIdPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QuickbooksDesktopTransfersIdPostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["revisionNumber"] = o.RevisionNumber
	if !IsNil(o.TransactionDate) {
		toSerialize["transactionDate"] = o.TransactionDate
	}
	if !IsNil(o.SourceAccountId) {
		toSerialize["sourceAccountId"] = o.SourceAccountId
	}
	if !IsNil(o.TargetAccountId) {
		toSerialize["targetAccountId"] = o.TargetAccountId
	}
	if !IsNil(o.ClassId) {
		toSerialize["classId"] = o.ClassId
	}
	if !IsNil(o.Amount) {
		toSerialize["amount"] = o.Amount
	}
	if !IsNil(o.Memo) {
		toSerialize["memo"] = o.Memo
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *QuickbooksDesktopTransfersIdPostRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"revisionNumber",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varQuickbooksDesktopTransfersIdPostRequest := _QuickbooksDesktopTransfersIdPostRequest{}

	err = json.Unmarshal(data, &varQuickbooksDesktopTransfersIdPostRequest)

	if err != nil {
		return err
	}

	*o = QuickbooksDesktopTransfersIdPostRequest(varQuickbooksDesktopTransfersIdPostRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "revisionNumber")
		delete(additionalProperties, "transactionDate")
		delete(additionalProperties, "sourceAccountId")
		delete(additionalProperties, "targetAccountId")
		delete(additionalProperties, "classId")
		delete(additionalProperties, "amount")
		delete(additionalProperties, "memo")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableQuickbooksDesktopTransfersIdPostRequest struct {
	value *QuickbooksDesktopTransfersIdPostRequest
	isSet bool
}

func (v NullableQuickbooksDesktopTransfersIdPostRequest) Get() *QuickbooksDesktopTransfersIdPostRequest {
	return v.value
}

func (v *NullableQuickbooksDesktopTransfersIdPostRequest) Set(val *QuickbooksDesktopTransfersIdPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableQuickbooksDesktopTransfersIdPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableQuickbooksDesktopTransfersIdPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQuickbooksDesktopTransfersIdPostRequest(val *QuickbooksDesktopTransfersIdPostRequest) *NullableQuickbooksDesktopTransfersIdPostRequest {
	return &NullableQuickbooksDesktopTransfersIdPostRequest{value: val, isSet: true}
}

func (v NullableQuickbooksDesktopTransfersIdPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQuickbooksDesktopTransfersIdPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


