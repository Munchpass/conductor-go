/*
Conductor API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package conductor

import (
	"encoding/json"
	"fmt"
)

// checks if the QbdPurchaseOrderLine type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QbdPurchaseOrderLine{}

// QbdPurchaseOrderLine struct for QbdPurchaseOrderLine
type QbdPurchaseOrderLine struct {
	// The unique identifier assigned by QuickBooks to this purchase order line. This ID is unique across all transaction line types.
	Id string `json:"id"`
	// The type of object. This value is always `\"qbd_purchase_order_line\"`.
	ObjectType string `json:"objectType"`
	Item QbdPurchaseOrderLineItem `json:"item"`
	// The purchase order line's stock keeping unit (SKU), which is sometimes the manufacturer's part number.
	Sku string `json:"sku"`
	// A description of this purchase order line.
	Description string `json:"description"`
	// The quantity of the item associated with this purchase order line. This field cannot be cleared.  **NOTE**: Do not use this field if the associated item is a discount item.
	Quantity float32 `json:"quantity"`
	// The unit-of-measure used for the `quantity` in this purchase order line. Must be a valid unit within the item's available units of measure.
	UnitOfMeasure string `json:"unitOfMeasure"`
	OverrideUnitOfMeasureSet QbdPurchaseOrderLineOverrideUnitOfMeasureSet `json:"overrideUnitOfMeasureSet"`
	// The price per unit for this purchase order line. If both `rate` and `amount` are specified, `rate` will be ignored. If both `quantity` and `amount` are specified but not `rate`, QuickBooks will use them to calculate `rate`. Represented as a decimal string. This field cannot be cleared.
	Rate string `json:"rate"`
	Class QbdPurchaseOrderLineClass `json:"class"`
	// The monetary amount of this purchase order line, represented as a decimal string. If both `quantity` and `rate` are specified but not `amount`, QuickBooks will use them to calculate `amount`. If `amount`, `rate`, and `quantity` are all unspecified, then QuickBooks will calculate `amount` based on a `quantity` of `1` and the suggested `rate`. This field cannot be cleared.
	Amount string `json:"amount"`
	InventorySiteLocation QbdPurchaseOrderLineInventorySiteLocation `json:"inventorySiteLocation"`
	Payee QbdExpenseLinePayee `json:"payee"`
	// The date on which the service for this purchase order line was or will be performed, in ISO 8601 format (YYYY-MM-DD). This is particularly relevant for service items.
	ServiceDate string `json:"serviceDate"`
	SalesTaxCode QbdPurchaseOrderLineSalesTaxCode `json:"salesTaxCode"`
	// The quantity that has been received against this purchase order line.
	ReceivedQuantity float32 `json:"receivedQuantity"`
	// The quantity that has not been billed for this purchase order line.
	UnbilledQuantity float32 `json:"unbilledQuantity"`
	// Indicates whether this purchase order line has been billed.
	IsBilled bool `json:"isBilled"`
	// Indicates whether this purchase order line has been manually marked as closed, even if this item has not been received or its sale has not been cancelled. If all the purchase order lines are marked as closed, the purchase order itself is marked as closed as well. You cannot change `isManuallyClosed` to `false` after the purchase order line has been fully received.
	IsManuallyClosed bool `json:"isManuallyClosed"`
	// A built-in custom field for additional information specific to this purchase order line. Unlike the user-defined fields in the `customFields` array, this is a standard QuickBooks field that exists for all purchase order lines for convenience. Developers often use this field for tracking information that doesn't fit into other standard QuickBooks fields. Hidden by default in the QuickBooks UI.
	OtherCustomField1 string `json:"otherCustomField1"`
	// A second built-in custom field for additional information specific to this purchase order line. Unlike the user-defined fields in the `customFields` array, this is a standard QuickBooks field that exists for all purchase order lines for convenience. Like `otherCustomField1`, developers often use this field for tracking information that doesn't fit into other standard QuickBooks fields. Hidden by default in the QuickBooks UI.
	OtherCustomField2 string `json:"otherCustomField2"`
	// The custom fields for the purchase order line object, added as user-defined data extensions, not included in the standard QuickBooks object.
	CustomFields []QbdCustomField `json:"customFields"`
	AdditionalProperties map[string]interface{}
}

type _QbdPurchaseOrderLine QbdPurchaseOrderLine

// NewQbdPurchaseOrderLine instantiates a new QbdPurchaseOrderLine object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQbdPurchaseOrderLine(id string, objectType string, item QbdPurchaseOrderLineItem, sku string, description string, quantity float32, unitOfMeasure string, overrideUnitOfMeasureSet QbdPurchaseOrderLineOverrideUnitOfMeasureSet, rate string, class QbdPurchaseOrderLineClass, amount string, inventorySiteLocation QbdPurchaseOrderLineInventorySiteLocation, payee QbdExpenseLinePayee, serviceDate string, salesTaxCode QbdPurchaseOrderLineSalesTaxCode, receivedQuantity float32, unbilledQuantity float32, isBilled bool, isManuallyClosed bool, otherCustomField1 string, otherCustomField2 string, customFields []QbdCustomField) *QbdPurchaseOrderLine {
	this := QbdPurchaseOrderLine{}
	this.Id = id
	this.ObjectType = objectType
	this.Item = item
	this.Sku = sku
	this.Description = description
	this.Quantity = quantity
	this.UnitOfMeasure = unitOfMeasure
	this.OverrideUnitOfMeasureSet = overrideUnitOfMeasureSet
	this.Rate = rate
	this.Class = class
	this.Amount = amount
	this.InventorySiteLocation = inventorySiteLocation
	this.Payee = payee
	this.ServiceDate = serviceDate
	this.SalesTaxCode = salesTaxCode
	this.ReceivedQuantity = receivedQuantity
	this.UnbilledQuantity = unbilledQuantity
	this.IsBilled = isBilled
	this.IsManuallyClosed = isManuallyClosed
	this.OtherCustomField1 = otherCustomField1
	this.OtherCustomField2 = otherCustomField2
	this.CustomFields = customFields
	return &this
}

// NewQbdPurchaseOrderLineWithDefaults instantiates a new QbdPurchaseOrderLine object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQbdPurchaseOrderLineWithDefaults() *QbdPurchaseOrderLine {
	this := QbdPurchaseOrderLine{}
	return &this
}

// GetId returns the Id field value
func (o *QbdPurchaseOrderLine) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *QbdPurchaseOrderLine) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *QbdPurchaseOrderLine) SetId(v string) {
	o.Id = v
}

// GetObjectType returns the ObjectType field value
func (o *QbdPurchaseOrderLine) GetObjectType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ObjectType
}

// GetObjectTypeOk returns a tuple with the ObjectType field value
// and a boolean to check if the value has been set.
func (o *QbdPurchaseOrderLine) GetObjectTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ObjectType, true
}

// SetObjectType sets field value
func (o *QbdPurchaseOrderLine) SetObjectType(v string) {
	o.ObjectType = v
}

// GetItem returns the Item field value
func (o *QbdPurchaseOrderLine) GetItem() QbdPurchaseOrderLineItem {
	if o == nil {
		var ret QbdPurchaseOrderLineItem
		return ret
	}

	return o.Item
}

// GetItemOk returns a tuple with the Item field value
// and a boolean to check if the value has been set.
func (o *QbdPurchaseOrderLine) GetItemOk() (*QbdPurchaseOrderLineItem, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Item, true
}

// SetItem sets field value
func (o *QbdPurchaseOrderLine) SetItem(v QbdPurchaseOrderLineItem) {
	o.Item = v
}

// GetSku returns the Sku field value
func (o *QbdPurchaseOrderLine) GetSku() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Sku
}

// GetSkuOk returns a tuple with the Sku field value
// and a boolean to check if the value has been set.
func (o *QbdPurchaseOrderLine) GetSkuOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Sku, true
}

// SetSku sets field value
func (o *QbdPurchaseOrderLine) SetSku(v string) {
	o.Sku = v
}

// GetDescription returns the Description field value
func (o *QbdPurchaseOrderLine) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *QbdPurchaseOrderLine) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *QbdPurchaseOrderLine) SetDescription(v string) {
	o.Description = v
}

// GetQuantity returns the Quantity field value
func (o *QbdPurchaseOrderLine) GetQuantity() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value
// and a boolean to check if the value has been set.
func (o *QbdPurchaseOrderLine) GetQuantityOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Quantity, true
}

// SetQuantity sets field value
func (o *QbdPurchaseOrderLine) SetQuantity(v float32) {
	o.Quantity = v
}

// GetUnitOfMeasure returns the UnitOfMeasure field value
func (o *QbdPurchaseOrderLine) GetUnitOfMeasure() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UnitOfMeasure
}

// GetUnitOfMeasureOk returns a tuple with the UnitOfMeasure field value
// and a boolean to check if the value has been set.
func (o *QbdPurchaseOrderLine) GetUnitOfMeasureOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UnitOfMeasure, true
}

// SetUnitOfMeasure sets field value
func (o *QbdPurchaseOrderLine) SetUnitOfMeasure(v string) {
	o.UnitOfMeasure = v
}

// GetOverrideUnitOfMeasureSet returns the OverrideUnitOfMeasureSet field value
func (o *QbdPurchaseOrderLine) GetOverrideUnitOfMeasureSet() QbdPurchaseOrderLineOverrideUnitOfMeasureSet {
	if o == nil {
		var ret QbdPurchaseOrderLineOverrideUnitOfMeasureSet
		return ret
	}

	return o.OverrideUnitOfMeasureSet
}

// GetOverrideUnitOfMeasureSetOk returns a tuple with the OverrideUnitOfMeasureSet field value
// and a boolean to check if the value has been set.
func (o *QbdPurchaseOrderLine) GetOverrideUnitOfMeasureSetOk() (*QbdPurchaseOrderLineOverrideUnitOfMeasureSet, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OverrideUnitOfMeasureSet, true
}

// SetOverrideUnitOfMeasureSet sets field value
func (o *QbdPurchaseOrderLine) SetOverrideUnitOfMeasureSet(v QbdPurchaseOrderLineOverrideUnitOfMeasureSet) {
	o.OverrideUnitOfMeasureSet = v
}

// GetRate returns the Rate field value
func (o *QbdPurchaseOrderLine) GetRate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Rate
}

// GetRateOk returns a tuple with the Rate field value
// and a boolean to check if the value has been set.
func (o *QbdPurchaseOrderLine) GetRateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Rate, true
}

// SetRate sets field value
func (o *QbdPurchaseOrderLine) SetRate(v string) {
	o.Rate = v
}

// GetClass returns the Class field value
func (o *QbdPurchaseOrderLine) GetClass() QbdPurchaseOrderLineClass {
	if o == nil {
		var ret QbdPurchaseOrderLineClass
		return ret
	}

	return o.Class
}

// GetClassOk returns a tuple with the Class field value
// and a boolean to check if the value has been set.
func (o *QbdPurchaseOrderLine) GetClassOk() (*QbdPurchaseOrderLineClass, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Class, true
}

// SetClass sets field value
func (o *QbdPurchaseOrderLine) SetClass(v QbdPurchaseOrderLineClass) {
	o.Class = v
}

// GetAmount returns the Amount field value
func (o *QbdPurchaseOrderLine) GetAmount() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Amount
}

// GetAmountOk returns a tuple with the Amount field value
// and a boolean to check if the value has been set.
func (o *QbdPurchaseOrderLine) GetAmountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Amount, true
}

// SetAmount sets field value
func (o *QbdPurchaseOrderLine) SetAmount(v string) {
	o.Amount = v
}

// GetInventorySiteLocation returns the InventorySiteLocation field value
func (o *QbdPurchaseOrderLine) GetInventorySiteLocation() QbdPurchaseOrderLineInventorySiteLocation {
	if o == nil {
		var ret QbdPurchaseOrderLineInventorySiteLocation
		return ret
	}

	return o.InventorySiteLocation
}

// GetInventorySiteLocationOk returns a tuple with the InventorySiteLocation field value
// and a boolean to check if the value has been set.
func (o *QbdPurchaseOrderLine) GetInventorySiteLocationOk() (*QbdPurchaseOrderLineInventorySiteLocation, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InventorySiteLocation, true
}

// SetInventorySiteLocation sets field value
func (o *QbdPurchaseOrderLine) SetInventorySiteLocation(v QbdPurchaseOrderLineInventorySiteLocation) {
	o.InventorySiteLocation = v
}

// GetPayee returns the Payee field value
func (o *QbdPurchaseOrderLine) GetPayee() QbdExpenseLinePayee {
	if o == nil {
		var ret QbdExpenseLinePayee
		return ret
	}

	return o.Payee
}

// GetPayeeOk returns a tuple with the Payee field value
// and a boolean to check if the value has been set.
func (o *QbdPurchaseOrderLine) GetPayeeOk() (*QbdExpenseLinePayee, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Payee, true
}

// SetPayee sets field value
func (o *QbdPurchaseOrderLine) SetPayee(v QbdExpenseLinePayee) {
	o.Payee = v
}

// GetServiceDate returns the ServiceDate field value
func (o *QbdPurchaseOrderLine) GetServiceDate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServiceDate
}

// GetServiceDateOk returns a tuple with the ServiceDate field value
// and a boolean to check if the value has been set.
func (o *QbdPurchaseOrderLine) GetServiceDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServiceDate, true
}

// SetServiceDate sets field value
func (o *QbdPurchaseOrderLine) SetServiceDate(v string) {
	o.ServiceDate = v
}

// GetSalesTaxCode returns the SalesTaxCode field value
func (o *QbdPurchaseOrderLine) GetSalesTaxCode() QbdPurchaseOrderLineSalesTaxCode {
	if o == nil {
		var ret QbdPurchaseOrderLineSalesTaxCode
		return ret
	}

	return o.SalesTaxCode
}

// GetSalesTaxCodeOk returns a tuple with the SalesTaxCode field value
// and a boolean to check if the value has been set.
func (o *QbdPurchaseOrderLine) GetSalesTaxCodeOk() (*QbdPurchaseOrderLineSalesTaxCode, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SalesTaxCode, true
}

// SetSalesTaxCode sets field value
func (o *QbdPurchaseOrderLine) SetSalesTaxCode(v QbdPurchaseOrderLineSalesTaxCode) {
	o.SalesTaxCode = v
}

// GetReceivedQuantity returns the ReceivedQuantity field value
func (o *QbdPurchaseOrderLine) GetReceivedQuantity() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.ReceivedQuantity
}

// GetReceivedQuantityOk returns a tuple with the ReceivedQuantity field value
// and a boolean to check if the value has been set.
func (o *QbdPurchaseOrderLine) GetReceivedQuantityOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ReceivedQuantity, true
}

// SetReceivedQuantity sets field value
func (o *QbdPurchaseOrderLine) SetReceivedQuantity(v float32) {
	o.ReceivedQuantity = v
}

// GetUnbilledQuantity returns the UnbilledQuantity field value
func (o *QbdPurchaseOrderLine) GetUnbilledQuantity() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.UnbilledQuantity
}

// GetUnbilledQuantityOk returns a tuple with the UnbilledQuantity field value
// and a boolean to check if the value has been set.
func (o *QbdPurchaseOrderLine) GetUnbilledQuantityOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UnbilledQuantity, true
}

// SetUnbilledQuantity sets field value
func (o *QbdPurchaseOrderLine) SetUnbilledQuantity(v float32) {
	o.UnbilledQuantity = v
}

// GetIsBilled returns the IsBilled field value
func (o *QbdPurchaseOrderLine) GetIsBilled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsBilled
}

// GetIsBilledOk returns a tuple with the IsBilled field value
// and a boolean to check if the value has been set.
func (o *QbdPurchaseOrderLine) GetIsBilledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsBilled, true
}

// SetIsBilled sets field value
func (o *QbdPurchaseOrderLine) SetIsBilled(v bool) {
	o.IsBilled = v
}

// GetIsManuallyClosed returns the IsManuallyClosed field value
func (o *QbdPurchaseOrderLine) GetIsManuallyClosed() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsManuallyClosed
}

// GetIsManuallyClosedOk returns a tuple with the IsManuallyClosed field value
// and a boolean to check if the value has been set.
func (o *QbdPurchaseOrderLine) GetIsManuallyClosedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsManuallyClosed, true
}

// SetIsManuallyClosed sets field value
func (o *QbdPurchaseOrderLine) SetIsManuallyClosed(v bool) {
	o.IsManuallyClosed = v
}

// GetOtherCustomField1 returns the OtherCustomField1 field value
func (o *QbdPurchaseOrderLine) GetOtherCustomField1() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OtherCustomField1
}

// GetOtherCustomField1Ok returns a tuple with the OtherCustomField1 field value
// and a boolean to check if the value has been set.
func (o *QbdPurchaseOrderLine) GetOtherCustomField1Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OtherCustomField1, true
}

// SetOtherCustomField1 sets field value
func (o *QbdPurchaseOrderLine) SetOtherCustomField1(v string) {
	o.OtherCustomField1 = v
}

// GetOtherCustomField2 returns the OtherCustomField2 field value
func (o *QbdPurchaseOrderLine) GetOtherCustomField2() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OtherCustomField2
}

// GetOtherCustomField2Ok returns a tuple with the OtherCustomField2 field value
// and a boolean to check if the value has been set.
func (o *QbdPurchaseOrderLine) GetOtherCustomField2Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OtherCustomField2, true
}

// SetOtherCustomField2 sets field value
func (o *QbdPurchaseOrderLine) SetOtherCustomField2(v string) {
	o.OtherCustomField2 = v
}

// GetCustomFields returns the CustomFields field value
func (o *QbdPurchaseOrderLine) GetCustomFields() []QbdCustomField {
	if o == nil {
		var ret []QbdCustomField
		return ret
	}

	return o.CustomFields
}

// GetCustomFieldsOk returns a tuple with the CustomFields field value
// and a boolean to check if the value has been set.
func (o *QbdPurchaseOrderLine) GetCustomFieldsOk() ([]QbdCustomField, bool) {
	if o == nil {
		return nil, false
	}
	return o.CustomFields, true
}

// SetCustomFields sets field value
func (o *QbdPurchaseOrderLine) SetCustomFields(v []QbdCustomField) {
	o.CustomFields = v
}

func (o QbdPurchaseOrderLine) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QbdPurchaseOrderLine) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["objectType"] = o.ObjectType
	toSerialize["item"] = o.Item
	toSerialize["sku"] = o.Sku
	toSerialize["description"] = o.Description
	toSerialize["quantity"] = o.Quantity
	toSerialize["unitOfMeasure"] = o.UnitOfMeasure
	toSerialize["overrideUnitOfMeasureSet"] = o.OverrideUnitOfMeasureSet
	toSerialize["rate"] = o.Rate
	toSerialize["class"] = o.Class
	toSerialize["amount"] = o.Amount
	toSerialize["inventorySiteLocation"] = o.InventorySiteLocation
	toSerialize["payee"] = o.Payee
	toSerialize["serviceDate"] = o.ServiceDate
	toSerialize["salesTaxCode"] = o.SalesTaxCode
	toSerialize["receivedQuantity"] = o.ReceivedQuantity
	toSerialize["unbilledQuantity"] = o.UnbilledQuantity
	toSerialize["isBilled"] = o.IsBilled
	toSerialize["isManuallyClosed"] = o.IsManuallyClosed
	toSerialize["otherCustomField1"] = o.OtherCustomField1
	toSerialize["otherCustomField2"] = o.OtherCustomField2
	toSerialize["customFields"] = o.CustomFields

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *QbdPurchaseOrderLine) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"objectType",
		"item",
		"sku",
		"description",
		"quantity",
		"unitOfMeasure",
		"overrideUnitOfMeasureSet",
		"rate",
		"class",
		"amount",
		"inventorySiteLocation",
		"payee",
		"serviceDate",
		"salesTaxCode",
		"receivedQuantity",
		"unbilledQuantity",
		"isBilled",
		"isManuallyClosed",
		"otherCustomField1",
		"otherCustomField2",
		"customFields",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varQbdPurchaseOrderLine := _QbdPurchaseOrderLine{}

	err = json.Unmarshal(data, &varQbdPurchaseOrderLine)

	if err != nil {
		return err
	}

	*o = QbdPurchaseOrderLine(varQbdPurchaseOrderLine)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "objectType")
		delete(additionalProperties, "item")
		delete(additionalProperties, "sku")
		delete(additionalProperties, "description")
		delete(additionalProperties, "quantity")
		delete(additionalProperties, "unitOfMeasure")
		delete(additionalProperties, "overrideUnitOfMeasureSet")
		delete(additionalProperties, "rate")
		delete(additionalProperties, "class")
		delete(additionalProperties, "amount")
		delete(additionalProperties, "inventorySiteLocation")
		delete(additionalProperties, "payee")
		delete(additionalProperties, "serviceDate")
		delete(additionalProperties, "salesTaxCode")
		delete(additionalProperties, "receivedQuantity")
		delete(additionalProperties, "unbilledQuantity")
		delete(additionalProperties, "isBilled")
		delete(additionalProperties, "isManuallyClosed")
		delete(additionalProperties, "otherCustomField1")
		delete(additionalProperties, "otherCustomField2")
		delete(additionalProperties, "customFields")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableQbdPurchaseOrderLine struct {
	value *QbdPurchaseOrderLine
	isSet bool
}

func (v NullableQbdPurchaseOrderLine) Get() *QbdPurchaseOrderLine {
	return v.value
}

func (v *NullableQbdPurchaseOrderLine) Set(val *QbdPurchaseOrderLine) {
	v.value = val
	v.isSet = true
}

func (v NullableQbdPurchaseOrderLine) IsSet() bool {
	return v.isSet
}

func (v *NullableQbdPurchaseOrderLine) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQbdPurchaseOrderLine(val *QbdPurchaseOrderLine) *NullableQbdPurchaseOrderLine {
	return &NullableQbdPurchaseOrderLine{value: val, isSet: true}
}

func (v NullableQbdPurchaseOrderLine) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQbdPurchaseOrderLine) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


