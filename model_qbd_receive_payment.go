/*
Conductor API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package conductor

import (
	"encoding/json"
	"fmt"
)

// checks if the QbdReceivePayment type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QbdReceivePayment{}

// QbdReceivePayment struct for QbdReceivePayment
type QbdReceivePayment struct {
	// The unique identifier assigned by QuickBooks to this receive-payment. This ID is unique across all transaction types.
	Id string `json:"id"`
	// The type of object. This value is always `\"qbd_receive_payment\"`.
	ObjectType string `json:"objectType"`
	// The date and time when this receive-payment was created, in ISO 8601 format (YYYY-MM-DDThh:mm:ss±hh:mm). The time zone is the same as the user's time zone in QuickBooks.
	CreatedAt string `json:"createdAt"`
	// The date and time when this receive-payment was last updated, in ISO 8601 format (YYYY-MM-DDThh:mm:ss±hh:mm). The time zone is the same as the user's time zone in QuickBooks.
	UpdatedAt string `json:"updatedAt"`
	// The current QuickBooks-assigned revision number of this receive-payment object, which changes each time the object is modified. When updating this object, you must provide the most recent `revisionNumber` to ensure you're working with the latest data; otherwise, the update will return an error.
	RevisionNumber string `json:"revisionNumber"`
	Customer QbdReceivePaymentCustomer `json:"customer"`
	ReceivablesAccount QbdReceivePaymentReceivablesAccount `json:"receivablesAccount"`
	// The date of this receive-payment, in ISO 8601 format (YYYY-MM-DD).
	TransactionDate string `json:"transactionDate"`
	// The case-sensitive user-defined reference number for this receive-payment, which can be used to identify the transaction in QuickBooks. This value is not required to be unique and can be arbitrarily changed by the QuickBooks user.
	RefNumber string `json:"refNumber"`
	// The total monetary amount of this receive-payment, represented as a decimal string.
	TotalAmount string `json:"totalAmount"`
	Currency QbdReceivePaymentCurrency `json:"currency"`
	// The market exchange rate between this receive-payment's currency and the home currency in QuickBooks at the time of this transaction. Represented as a decimal value (e.g., 1.2345 for 1 EUR = 1.2345 USD if USD is the home currency).
	ExchangeRate float32 `json:"exchangeRate"`
	// The total monetary amount of this receive-payment converted to the home currency of the QuickBooks company file. Represented as a decimal string.
	TotalAmountInHomeCurrency string `json:"totalAmountInHomeCurrency"`
	PaymentMethod QbdReceivePaymentPaymentMethod `json:"paymentMethod"`
	// A memo or note for this receive-payment that will be displayed at the beginning of reports containing details about this receive-payment.
	Memo string `json:"memo"`
	DepositToAccount QbdReceivePaymentDepositToAccount `json:"depositToAccount"`
	CreditCardTransaction QbdReceivePaymentCreditCardTransaction `json:"creditCardTransaction"`
	// The amount of this receive-payment that remains unapplied to any transactions. This occurs in two cases: (1) When the sum of `paymentAmount` amounts in `applyToTransactions` is less than `totalAmount`, leaving a portion of the payment unused, or (2) When a payment is received that equals the exact amount of an invoice, but credits or discounts are also applied, resulting in excess payment.
	UnusedPayment string `json:"unusedPayment"`
	// The amount of credit that remains unused after applying credits to this receive-payment. This occurs when the `applyCredit.appliedAmount` specified for a credit memo (`applyCredit.creditMemoId`) in the `applyToTransactions` array is less than the total available credit amount for that credit memo.
	UnusedCredits string `json:"unusedCredits"`
	// A globally unique identifier (GUID) you, the developer, can provide for tracking this object in your external system. This field is immutable and can only be set during object creation.
	ExternalId string `json:"externalId"`
	// The invoice(s) paid by this receive-payment.
	AppliedToTransactions []QbdReceivableTransaction `json:"appliedToTransactions"`
	// The custom fields for the receive-payment object, added as user-defined data extensions, not included in the standard QuickBooks object.
	CustomFields []QbdCustomField `json:"customFields"`
	AdditionalProperties map[string]interface{}
}

type _QbdReceivePayment QbdReceivePayment

// NewQbdReceivePayment instantiates a new QbdReceivePayment object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQbdReceivePayment(id string, objectType string, createdAt string, updatedAt string, revisionNumber string, customer QbdReceivePaymentCustomer, receivablesAccount QbdReceivePaymentReceivablesAccount, transactionDate string, refNumber string, totalAmount string, currency QbdReceivePaymentCurrency, exchangeRate float32, totalAmountInHomeCurrency string, paymentMethod QbdReceivePaymentPaymentMethod, memo string, depositToAccount QbdReceivePaymentDepositToAccount, creditCardTransaction QbdReceivePaymentCreditCardTransaction, unusedPayment string, unusedCredits string, externalId string, appliedToTransactions []QbdReceivableTransaction, customFields []QbdCustomField) *QbdReceivePayment {
	this := QbdReceivePayment{}
	this.Id = id
	this.ObjectType = objectType
	this.CreatedAt = createdAt
	this.UpdatedAt = updatedAt
	this.RevisionNumber = revisionNumber
	this.Customer = customer
	this.ReceivablesAccount = receivablesAccount
	this.TransactionDate = transactionDate
	this.RefNumber = refNumber
	this.TotalAmount = totalAmount
	this.Currency = currency
	this.ExchangeRate = exchangeRate
	this.TotalAmountInHomeCurrency = totalAmountInHomeCurrency
	this.PaymentMethod = paymentMethod
	this.Memo = memo
	this.DepositToAccount = depositToAccount
	this.CreditCardTransaction = creditCardTransaction
	this.UnusedPayment = unusedPayment
	this.UnusedCredits = unusedCredits
	this.ExternalId = externalId
	this.AppliedToTransactions = appliedToTransactions
	this.CustomFields = customFields
	return &this
}

// NewQbdReceivePaymentWithDefaults instantiates a new QbdReceivePayment object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQbdReceivePaymentWithDefaults() *QbdReceivePayment {
	this := QbdReceivePayment{}
	return &this
}

// GetId returns the Id field value
func (o *QbdReceivePayment) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *QbdReceivePayment) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *QbdReceivePayment) SetId(v string) {
	o.Id = v
}

// GetObjectType returns the ObjectType field value
func (o *QbdReceivePayment) GetObjectType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ObjectType
}

// GetObjectTypeOk returns a tuple with the ObjectType field value
// and a boolean to check if the value has been set.
func (o *QbdReceivePayment) GetObjectTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ObjectType, true
}

// SetObjectType sets field value
func (o *QbdReceivePayment) SetObjectType(v string) {
	o.ObjectType = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *QbdReceivePayment) GetCreatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *QbdReceivePayment) GetCreatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *QbdReceivePayment) SetCreatedAt(v string) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *QbdReceivePayment) GetUpdatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *QbdReceivePayment) GetUpdatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *QbdReceivePayment) SetUpdatedAt(v string) {
	o.UpdatedAt = v
}

// GetRevisionNumber returns the RevisionNumber field value
func (o *QbdReceivePayment) GetRevisionNumber() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RevisionNumber
}

// GetRevisionNumberOk returns a tuple with the RevisionNumber field value
// and a boolean to check if the value has been set.
func (o *QbdReceivePayment) GetRevisionNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RevisionNumber, true
}

// SetRevisionNumber sets field value
func (o *QbdReceivePayment) SetRevisionNumber(v string) {
	o.RevisionNumber = v
}

// GetCustomer returns the Customer field value
func (o *QbdReceivePayment) GetCustomer() QbdReceivePaymentCustomer {
	if o == nil {
		var ret QbdReceivePaymentCustomer
		return ret
	}

	return o.Customer
}

// GetCustomerOk returns a tuple with the Customer field value
// and a boolean to check if the value has been set.
func (o *QbdReceivePayment) GetCustomerOk() (*QbdReceivePaymentCustomer, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Customer, true
}

// SetCustomer sets field value
func (o *QbdReceivePayment) SetCustomer(v QbdReceivePaymentCustomer) {
	o.Customer = v
}

// GetReceivablesAccount returns the ReceivablesAccount field value
func (o *QbdReceivePayment) GetReceivablesAccount() QbdReceivePaymentReceivablesAccount {
	if o == nil {
		var ret QbdReceivePaymentReceivablesAccount
		return ret
	}

	return o.ReceivablesAccount
}

// GetReceivablesAccountOk returns a tuple with the ReceivablesAccount field value
// and a boolean to check if the value has been set.
func (o *QbdReceivePayment) GetReceivablesAccountOk() (*QbdReceivePaymentReceivablesAccount, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ReceivablesAccount, true
}

// SetReceivablesAccount sets field value
func (o *QbdReceivePayment) SetReceivablesAccount(v QbdReceivePaymentReceivablesAccount) {
	o.ReceivablesAccount = v
}

// GetTransactionDate returns the TransactionDate field value
func (o *QbdReceivePayment) GetTransactionDate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TransactionDate
}

// GetTransactionDateOk returns a tuple with the TransactionDate field value
// and a boolean to check if the value has been set.
func (o *QbdReceivePayment) GetTransactionDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TransactionDate, true
}

// SetTransactionDate sets field value
func (o *QbdReceivePayment) SetTransactionDate(v string) {
	o.TransactionDate = v
}

// GetRefNumber returns the RefNumber field value
func (o *QbdReceivePayment) GetRefNumber() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RefNumber
}

// GetRefNumberOk returns a tuple with the RefNumber field value
// and a boolean to check if the value has been set.
func (o *QbdReceivePayment) GetRefNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RefNumber, true
}

// SetRefNumber sets field value
func (o *QbdReceivePayment) SetRefNumber(v string) {
	o.RefNumber = v
}

// GetTotalAmount returns the TotalAmount field value
func (o *QbdReceivePayment) GetTotalAmount() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TotalAmount
}

// GetTotalAmountOk returns a tuple with the TotalAmount field value
// and a boolean to check if the value has been set.
func (o *QbdReceivePayment) GetTotalAmountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalAmount, true
}

// SetTotalAmount sets field value
func (o *QbdReceivePayment) SetTotalAmount(v string) {
	o.TotalAmount = v
}

// GetCurrency returns the Currency field value
func (o *QbdReceivePayment) GetCurrency() QbdReceivePaymentCurrency {
	if o == nil {
		var ret QbdReceivePaymentCurrency
		return ret
	}

	return o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value
// and a boolean to check if the value has been set.
func (o *QbdReceivePayment) GetCurrencyOk() (*QbdReceivePaymentCurrency, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Currency, true
}

// SetCurrency sets field value
func (o *QbdReceivePayment) SetCurrency(v QbdReceivePaymentCurrency) {
	o.Currency = v
}

// GetExchangeRate returns the ExchangeRate field value
func (o *QbdReceivePayment) GetExchangeRate() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.ExchangeRate
}

// GetExchangeRateOk returns a tuple with the ExchangeRate field value
// and a boolean to check if the value has been set.
func (o *QbdReceivePayment) GetExchangeRateOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExchangeRate, true
}

// SetExchangeRate sets field value
func (o *QbdReceivePayment) SetExchangeRate(v float32) {
	o.ExchangeRate = v
}

// GetTotalAmountInHomeCurrency returns the TotalAmountInHomeCurrency field value
func (o *QbdReceivePayment) GetTotalAmountInHomeCurrency() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TotalAmountInHomeCurrency
}

// GetTotalAmountInHomeCurrencyOk returns a tuple with the TotalAmountInHomeCurrency field value
// and a boolean to check if the value has been set.
func (o *QbdReceivePayment) GetTotalAmountInHomeCurrencyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalAmountInHomeCurrency, true
}

// SetTotalAmountInHomeCurrency sets field value
func (o *QbdReceivePayment) SetTotalAmountInHomeCurrency(v string) {
	o.TotalAmountInHomeCurrency = v
}

// GetPaymentMethod returns the PaymentMethod field value
func (o *QbdReceivePayment) GetPaymentMethod() QbdReceivePaymentPaymentMethod {
	if o == nil {
		var ret QbdReceivePaymentPaymentMethod
		return ret
	}

	return o.PaymentMethod
}

// GetPaymentMethodOk returns a tuple with the PaymentMethod field value
// and a boolean to check if the value has been set.
func (o *QbdReceivePayment) GetPaymentMethodOk() (*QbdReceivePaymentPaymentMethod, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PaymentMethod, true
}

// SetPaymentMethod sets field value
func (o *QbdReceivePayment) SetPaymentMethod(v QbdReceivePaymentPaymentMethod) {
	o.PaymentMethod = v
}

// GetMemo returns the Memo field value
func (o *QbdReceivePayment) GetMemo() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Memo
}

// GetMemoOk returns a tuple with the Memo field value
// and a boolean to check if the value has been set.
func (o *QbdReceivePayment) GetMemoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Memo, true
}

// SetMemo sets field value
func (o *QbdReceivePayment) SetMemo(v string) {
	o.Memo = v
}

// GetDepositToAccount returns the DepositToAccount field value
func (o *QbdReceivePayment) GetDepositToAccount() QbdReceivePaymentDepositToAccount {
	if o == nil {
		var ret QbdReceivePaymentDepositToAccount
		return ret
	}

	return o.DepositToAccount
}

// GetDepositToAccountOk returns a tuple with the DepositToAccount field value
// and a boolean to check if the value has been set.
func (o *QbdReceivePayment) GetDepositToAccountOk() (*QbdReceivePaymentDepositToAccount, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DepositToAccount, true
}

// SetDepositToAccount sets field value
func (o *QbdReceivePayment) SetDepositToAccount(v QbdReceivePaymentDepositToAccount) {
	o.DepositToAccount = v
}

// GetCreditCardTransaction returns the CreditCardTransaction field value
func (o *QbdReceivePayment) GetCreditCardTransaction() QbdReceivePaymentCreditCardTransaction {
	if o == nil {
		var ret QbdReceivePaymentCreditCardTransaction
		return ret
	}

	return o.CreditCardTransaction
}

// GetCreditCardTransactionOk returns a tuple with the CreditCardTransaction field value
// and a boolean to check if the value has been set.
func (o *QbdReceivePayment) GetCreditCardTransactionOk() (*QbdReceivePaymentCreditCardTransaction, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreditCardTransaction, true
}

// SetCreditCardTransaction sets field value
func (o *QbdReceivePayment) SetCreditCardTransaction(v QbdReceivePaymentCreditCardTransaction) {
	o.CreditCardTransaction = v
}

// GetUnusedPayment returns the UnusedPayment field value
func (o *QbdReceivePayment) GetUnusedPayment() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UnusedPayment
}

// GetUnusedPaymentOk returns a tuple with the UnusedPayment field value
// and a boolean to check if the value has been set.
func (o *QbdReceivePayment) GetUnusedPaymentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UnusedPayment, true
}

// SetUnusedPayment sets field value
func (o *QbdReceivePayment) SetUnusedPayment(v string) {
	o.UnusedPayment = v
}

// GetUnusedCredits returns the UnusedCredits field value
func (o *QbdReceivePayment) GetUnusedCredits() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UnusedCredits
}

// GetUnusedCreditsOk returns a tuple with the UnusedCredits field value
// and a boolean to check if the value has been set.
func (o *QbdReceivePayment) GetUnusedCreditsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UnusedCredits, true
}

// SetUnusedCredits sets field value
func (o *QbdReceivePayment) SetUnusedCredits(v string) {
	o.UnusedCredits = v
}

// GetExternalId returns the ExternalId field value
func (o *QbdReceivePayment) GetExternalId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ExternalId
}

// GetExternalIdOk returns a tuple with the ExternalId field value
// and a boolean to check if the value has been set.
func (o *QbdReceivePayment) GetExternalIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExternalId, true
}

// SetExternalId sets field value
func (o *QbdReceivePayment) SetExternalId(v string) {
	o.ExternalId = v
}

// GetAppliedToTransactions returns the AppliedToTransactions field value
func (o *QbdReceivePayment) GetAppliedToTransactions() []QbdReceivableTransaction {
	if o == nil {
		var ret []QbdReceivableTransaction
		return ret
	}

	return o.AppliedToTransactions
}

// GetAppliedToTransactionsOk returns a tuple with the AppliedToTransactions field value
// and a boolean to check if the value has been set.
func (o *QbdReceivePayment) GetAppliedToTransactionsOk() ([]QbdReceivableTransaction, bool) {
	if o == nil {
		return nil, false
	}
	return o.AppliedToTransactions, true
}

// SetAppliedToTransactions sets field value
func (o *QbdReceivePayment) SetAppliedToTransactions(v []QbdReceivableTransaction) {
	o.AppliedToTransactions = v
}

// GetCustomFields returns the CustomFields field value
func (o *QbdReceivePayment) GetCustomFields() []QbdCustomField {
	if o == nil {
		var ret []QbdCustomField
		return ret
	}

	return o.CustomFields
}

// GetCustomFieldsOk returns a tuple with the CustomFields field value
// and a boolean to check if the value has been set.
func (o *QbdReceivePayment) GetCustomFieldsOk() ([]QbdCustomField, bool) {
	if o == nil {
		return nil, false
	}
	return o.CustomFields, true
}

// SetCustomFields sets field value
func (o *QbdReceivePayment) SetCustomFields(v []QbdCustomField) {
	o.CustomFields = v
}

func (o QbdReceivePayment) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QbdReceivePayment) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["objectType"] = o.ObjectType
	toSerialize["createdAt"] = o.CreatedAt
	toSerialize["updatedAt"] = o.UpdatedAt
	toSerialize["revisionNumber"] = o.RevisionNumber
	toSerialize["customer"] = o.Customer
	toSerialize["receivablesAccount"] = o.ReceivablesAccount
	toSerialize["transactionDate"] = o.TransactionDate
	toSerialize["refNumber"] = o.RefNumber
	toSerialize["totalAmount"] = o.TotalAmount
	toSerialize["currency"] = o.Currency
	toSerialize["exchangeRate"] = o.ExchangeRate
	toSerialize["totalAmountInHomeCurrency"] = o.TotalAmountInHomeCurrency
	toSerialize["paymentMethod"] = o.PaymentMethod
	toSerialize["memo"] = o.Memo
	toSerialize["depositToAccount"] = o.DepositToAccount
	toSerialize["creditCardTransaction"] = o.CreditCardTransaction
	toSerialize["unusedPayment"] = o.UnusedPayment
	toSerialize["unusedCredits"] = o.UnusedCredits
	toSerialize["externalId"] = o.ExternalId
	toSerialize["appliedToTransactions"] = o.AppliedToTransactions
	toSerialize["customFields"] = o.CustomFields

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *QbdReceivePayment) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"objectType",
		"createdAt",
		"updatedAt",
		"revisionNumber",
		"customer",
		"receivablesAccount",
		"transactionDate",
		"refNumber",
		"totalAmount",
		"currency",
		"exchangeRate",
		"totalAmountInHomeCurrency",
		"paymentMethod",
		"memo",
		"depositToAccount",
		"creditCardTransaction",
		"unusedPayment",
		"unusedCredits",
		"externalId",
		"appliedToTransactions",
		"customFields",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varQbdReceivePayment := _QbdReceivePayment{}

	err = json.Unmarshal(data, &varQbdReceivePayment)

	if err != nil {
		return err
	}

	*o = QbdReceivePayment(varQbdReceivePayment)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "objectType")
		delete(additionalProperties, "createdAt")
		delete(additionalProperties, "updatedAt")
		delete(additionalProperties, "revisionNumber")
		delete(additionalProperties, "customer")
		delete(additionalProperties, "receivablesAccount")
		delete(additionalProperties, "transactionDate")
		delete(additionalProperties, "refNumber")
		delete(additionalProperties, "totalAmount")
		delete(additionalProperties, "currency")
		delete(additionalProperties, "exchangeRate")
		delete(additionalProperties, "totalAmountInHomeCurrency")
		delete(additionalProperties, "paymentMethod")
		delete(additionalProperties, "memo")
		delete(additionalProperties, "depositToAccount")
		delete(additionalProperties, "creditCardTransaction")
		delete(additionalProperties, "unusedPayment")
		delete(additionalProperties, "unusedCredits")
		delete(additionalProperties, "externalId")
		delete(additionalProperties, "appliedToTransactions")
		delete(additionalProperties, "customFields")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableQbdReceivePayment struct {
	value *QbdReceivePayment
	isSet bool
}

func (v NullableQbdReceivePayment) Get() *QbdReceivePayment {
	return v.value
}

func (v *NullableQbdReceivePayment) Set(val *QbdReceivePayment) {
	v.value = val
	v.isSet = true
}

func (v NullableQbdReceivePayment) IsSet() bool {
	return v.isSet
}

func (v *NullableQbdReceivePayment) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQbdReceivePayment(val *QbdReceivePayment) *NullableQbdReceivePayment {
	return &NullableQbdReceivePayment{value: val, isSet: true}
}

func (v NullableQbdReceivePayment) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQbdReceivePayment) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


