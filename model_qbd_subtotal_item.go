/*
Conductor API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package conductor

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the QbdSubtotalItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QbdSubtotalItem{}

// QbdSubtotalItem struct for QbdSubtotalItem
type QbdSubtotalItem struct {
	// The unique identifier assigned by QuickBooks to this subtotal item. This ID is unique across all subtotal items but not across different QuickBooks object types.
	Id string `json:"id"`
	// The type of object. This value is always `\"qbd_subtotal_item\"`.
	ObjectType string `json:"objectType"`
	// The date and time when this subtotal item was created, in ISO 8601 format (YYYY-MM-DDThh:mm:ss±hh:mm). The time zone is the same as the user's time zone in QuickBooks.
	CreatedAt string `json:"createdAt"`
	// The date and time when this subtotal item was last updated, in ISO 8601 format (YYYY-MM-DDThh:mm:ss±hh:mm). The time zone is the same as the user's time zone in QuickBooks.
	UpdatedAt string `json:"updatedAt"`
	// The current QuickBooks-assigned revision number of this subtotal item object, which changes each time the object is modified. When updating this object, you must provide the most recent `revisionNumber` to ensure you're working with the latest data; otherwise, the update will return an error.
	RevisionNumber string `json:"revisionNumber"`
	// The case-insensitive unique name of this subtotal item, unique across all subtotal items.  **NOTE**: Subtotal items do not have a `fullName` field because they are not hierarchical objects, which is why `name` is unique for them but not for objects that have parents.
	Name string `json:"name"`
	// The subtotal item's barcode.
	Barcode NullableString `json:"barcode"`
	// Indicates whether this subtotal item is active. Inactive objects are typically hidden from views and reports in QuickBooks. Defaults to `true`.
	IsActive bool `json:"isActive"`
	// The subtotal item's description that will appear on sales forms that include this item.
	Description NullableString `json:"description"`
	// The type of special item for this subtotal item.
	SpecialItemType NullableString `json:"specialItemType"`
	// A globally unique identifier (GUID) you, the developer, can provide for tracking this object in your external system. This field is immutable and can only be set during object creation.
	ExternalId NullableString `json:"externalId"`
	// The custom fields for the subtotal item object, added as user-defined data extensions, not included in the standard QuickBooks object.
	CustomFields []QbdCustomField `json:"customFields"`
}

type _QbdSubtotalItem QbdSubtotalItem

// NewQbdSubtotalItem instantiates a new QbdSubtotalItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQbdSubtotalItem(id string, objectType string, createdAt string, updatedAt string, revisionNumber string, name string, barcode NullableString, isActive bool, description NullableString, specialItemType NullableString, externalId NullableString, customFields []QbdCustomField) *QbdSubtotalItem {
	this := QbdSubtotalItem{}
	this.Id = id
	this.ObjectType = objectType
	this.CreatedAt = createdAt
	this.UpdatedAt = updatedAt
	this.RevisionNumber = revisionNumber
	this.Name = name
	this.Barcode = barcode
	this.IsActive = isActive
	this.Description = description
	this.SpecialItemType = specialItemType
	this.ExternalId = externalId
	this.CustomFields = customFields
	return &this
}

// NewQbdSubtotalItemWithDefaults instantiates a new QbdSubtotalItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQbdSubtotalItemWithDefaults() *QbdSubtotalItem {
	this := QbdSubtotalItem{}
	return &this
}

// GetId returns the Id field value
func (o *QbdSubtotalItem) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *QbdSubtotalItem) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *QbdSubtotalItem) SetId(v string) {
	o.Id = v
}

// GetObjectType returns the ObjectType field value
func (o *QbdSubtotalItem) GetObjectType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ObjectType
}

// GetObjectTypeOk returns a tuple with the ObjectType field value
// and a boolean to check if the value has been set.
func (o *QbdSubtotalItem) GetObjectTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ObjectType, true
}

// SetObjectType sets field value
func (o *QbdSubtotalItem) SetObjectType(v string) {
	o.ObjectType = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *QbdSubtotalItem) GetCreatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *QbdSubtotalItem) GetCreatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *QbdSubtotalItem) SetCreatedAt(v string) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *QbdSubtotalItem) GetUpdatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *QbdSubtotalItem) GetUpdatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *QbdSubtotalItem) SetUpdatedAt(v string) {
	o.UpdatedAt = v
}

// GetRevisionNumber returns the RevisionNumber field value
func (o *QbdSubtotalItem) GetRevisionNumber() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RevisionNumber
}

// GetRevisionNumberOk returns a tuple with the RevisionNumber field value
// and a boolean to check if the value has been set.
func (o *QbdSubtotalItem) GetRevisionNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RevisionNumber, true
}

// SetRevisionNumber sets field value
func (o *QbdSubtotalItem) SetRevisionNumber(v string) {
	o.RevisionNumber = v
}

// GetName returns the Name field value
func (o *QbdSubtotalItem) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *QbdSubtotalItem) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *QbdSubtotalItem) SetName(v string) {
	o.Name = v
}

// GetBarcode returns the Barcode field value
// If the value is explicit nil, the zero value for string will be returned
func (o *QbdSubtotalItem) GetBarcode() string {
	if o == nil || o.Barcode.Get() == nil {
		var ret string
		return ret
	}

	return *o.Barcode.Get()
}

// GetBarcodeOk returns a tuple with the Barcode field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QbdSubtotalItem) GetBarcodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Barcode.Get(), o.Barcode.IsSet()
}

// SetBarcode sets field value
func (o *QbdSubtotalItem) SetBarcode(v string) {
	o.Barcode.Set(&v)
}

// GetIsActive returns the IsActive field value
func (o *QbdSubtotalItem) GetIsActive() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsActive
}

// GetIsActiveOk returns a tuple with the IsActive field value
// and a boolean to check if the value has been set.
func (o *QbdSubtotalItem) GetIsActiveOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsActive, true
}

// SetIsActive sets field value
func (o *QbdSubtotalItem) SetIsActive(v bool) {
	o.IsActive = v
}

// GetDescription returns the Description field value
// If the value is explicit nil, the zero value for string will be returned
func (o *QbdSubtotalItem) GetDescription() string {
	if o == nil || o.Description.Get() == nil {
		var ret string
		return ret
	}

	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QbdSubtotalItem) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// SetDescription sets field value
func (o *QbdSubtotalItem) SetDescription(v string) {
	o.Description.Set(&v)
}

// GetSpecialItemType returns the SpecialItemType field value
// If the value is explicit nil, the zero value for string will be returned
func (o *QbdSubtotalItem) GetSpecialItemType() string {
	if o == nil || o.SpecialItemType.Get() == nil {
		var ret string
		return ret
	}

	return *o.SpecialItemType.Get()
}

// GetSpecialItemTypeOk returns a tuple with the SpecialItemType field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QbdSubtotalItem) GetSpecialItemTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SpecialItemType.Get(), o.SpecialItemType.IsSet()
}

// SetSpecialItemType sets field value
func (o *QbdSubtotalItem) SetSpecialItemType(v string) {
	o.SpecialItemType.Set(&v)
}

// GetExternalId returns the ExternalId field value
// If the value is explicit nil, the zero value for string will be returned
func (o *QbdSubtotalItem) GetExternalId() string {
	if o == nil || o.ExternalId.Get() == nil {
		var ret string
		return ret
	}

	return *o.ExternalId.Get()
}

// GetExternalIdOk returns a tuple with the ExternalId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QbdSubtotalItem) GetExternalIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExternalId.Get(), o.ExternalId.IsSet()
}

// SetExternalId sets field value
func (o *QbdSubtotalItem) SetExternalId(v string) {
	o.ExternalId.Set(&v)
}

// GetCustomFields returns the CustomFields field value
func (o *QbdSubtotalItem) GetCustomFields() []QbdCustomField {
	if o == nil {
		var ret []QbdCustomField
		return ret
	}

	return o.CustomFields
}

// GetCustomFieldsOk returns a tuple with the CustomFields field value
// and a boolean to check if the value has been set.
func (o *QbdSubtotalItem) GetCustomFieldsOk() ([]QbdCustomField, bool) {
	if o == nil {
		return nil, false
	}
	return o.CustomFields, true
}

// SetCustomFields sets field value
func (o *QbdSubtotalItem) SetCustomFields(v []QbdCustomField) {
	o.CustomFields = v
}

func (o QbdSubtotalItem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QbdSubtotalItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["objectType"] = o.ObjectType
	toSerialize["createdAt"] = o.CreatedAt
	toSerialize["updatedAt"] = o.UpdatedAt
	toSerialize["revisionNumber"] = o.RevisionNumber
	toSerialize["name"] = o.Name
	toSerialize["barcode"] = o.Barcode.Get()
	toSerialize["isActive"] = o.IsActive
	toSerialize["description"] = o.Description.Get()
	toSerialize["specialItemType"] = o.SpecialItemType.Get()
	toSerialize["externalId"] = o.ExternalId.Get()
	toSerialize["customFields"] = o.CustomFields
	return toSerialize, nil
}

func (o *QbdSubtotalItem) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"objectType",
		"createdAt",
		"updatedAt",
		"revisionNumber",
		"name",
		"barcode",
		"isActive",
		"description",
		"specialItemType",
		"externalId",
		"customFields",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varQbdSubtotalItem := _QbdSubtotalItem{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varQbdSubtotalItem)

	if err != nil {
		return err
	}

	*o = QbdSubtotalItem(varQbdSubtotalItem)

	return err
}

type NullableQbdSubtotalItem struct {
	value *QbdSubtotalItem
	isSet bool
}

func (v NullableQbdSubtotalItem) Get() *QbdSubtotalItem {
	return v.value
}

func (v *NullableQbdSubtotalItem) Set(val *QbdSubtotalItem) {
	v.value = val
	v.isSet = true
}

func (v NullableQbdSubtotalItem) IsSet() bool {
	return v.isSet
}

func (v *NullableQbdSubtotalItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQbdSubtotalItem(val *QbdSubtotalItem) *NullableQbdSubtotalItem {
	return &NullableQbdSubtotalItem{value: val, isSet: true}
}

func (v NullableQbdSubtotalItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQbdSubtotalItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


