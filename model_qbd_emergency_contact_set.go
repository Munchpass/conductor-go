/*
Conductor API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package conductor

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the QbdEmergencyContactSet type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QbdEmergencyContactSet{}

// QbdEmergencyContactSet struct for QbdEmergencyContactSet
type QbdEmergencyContactSet struct {
	PrimaryContact NullableQbdEmergencyContact `json:"primaryContact"`
	SecondaryContact NullableQbdEmergencyContact `json:"secondaryContact"`
}

type _QbdEmergencyContactSet QbdEmergencyContactSet

// NewQbdEmergencyContactSet instantiates a new QbdEmergencyContactSet object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQbdEmergencyContactSet(primaryContact NullableQbdEmergencyContact, secondaryContact NullableQbdEmergencyContact) *QbdEmergencyContactSet {
	this := QbdEmergencyContactSet{}
	this.PrimaryContact = primaryContact
	this.SecondaryContact = secondaryContact
	return &this
}

// NewQbdEmergencyContactSetWithDefaults instantiates a new QbdEmergencyContactSet object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQbdEmergencyContactSetWithDefaults() *QbdEmergencyContactSet {
	this := QbdEmergencyContactSet{}
	return &this
}

// GetPrimaryContact returns the PrimaryContact field value
// If the value is explicit nil, the zero value for QbdEmergencyContact will be returned
func (o *QbdEmergencyContactSet) GetPrimaryContact() QbdEmergencyContact {
	if o == nil || o.PrimaryContact.Get() == nil {
		var ret QbdEmergencyContact
		return ret
	}

	return *o.PrimaryContact.Get()
}

// GetPrimaryContactOk returns a tuple with the PrimaryContact field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QbdEmergencyContactSet) GetPrimaryContactOk() (*QbdEmergencyContact, bool) {
	if o == nil {
		return nil, false
	}
	return o.PrimaryContact.Get(), o.PrimaryContact.IsSet()
}

// SetPrimaryContact sets field value
func (o *QbdEmergencyContactSet) SetPrimaryContact(v QbdEmergencyContact) {
	o.PrimaryContact.Set(&v)
}

// GetSecondaryContact returns the SecondaryContact field value
// If the value is explicit nil, the zero value for QbdEmergencyContact will be returned
func (o *QbdEmergencyContactSet) GetSecondaryContact() QbdEmergencyContact {
	if o == nil || o.SecondaryContact.Get() == nil {
		var ret QbdEmergencyContact
		return ret
	}

	return *o.SecondaryContact.Get()
}

// GetSecondaryContactOk returns a tuple with the SecondaryContact field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QbdEmergencyContactSet) GetSecondaryContactOk() (*QbdEmergencyContact, bool) {
	if o == nil {
		return nil, false
	}
	return o.SecondaryContact.Get(), o.SecondaryContact.IsSet()
}

// SetSecondaryContact sets field value
func (o *QbdEmergencyContactSet) SetSecondaryContact(v QbdEmergencyContact) {
	o.SecondaryContact.Set(&v)
}

func (o QbdEmergencyContactSet) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QbdEmergencyContactSet) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["primaryContact"] = o.PrimaryContact.Get()
	toSerialize["secondaryContact"] = o.SecondaryContact.Get()
	return toSerialize, nil
}

func (o *QbdEmergencyContactSet) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"primaryContact",
		"secondaryContact",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varQbdEmergencyContactSet := _QbdEmergencyContactSet{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varQbdEmergencyContactSet)

	if err != nil {
		return err
	}

	*o = QbdEmergencyContactSet(varQbdEmergencyContactSet)

	return err
}

type NullableQbdEmergencyContactSet struct {
	value *QbdEmergencyContactSet
	isSet bool
}

func (v NullableQbdEmergencyContactSet) Get() *QbdEmergencyContactSet {
	return v.value
}

func (v *NullableQbdEmergencyContactSet) Set(val *QbdEmergencyContactSet) {
	v.value = val
	v.isSet = true
}

func (v NullableQbdEmergencyContactSet) IsSet() bool {
	return v.isSet
}

func (v *NullableQbdEmergencyContactSet) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQbdEmergencyContactSet(val *QbdEmergencyContactSet) *NullableQbdEmergencyContactSet {
	return &NullableQbdEmergencyContactSet{value: val, isSet: true}
}

func (v NullableQbdEmergencyContactSet) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQbdEmergencyContactSet) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


