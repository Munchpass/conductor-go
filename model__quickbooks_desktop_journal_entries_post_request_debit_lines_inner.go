/*
Conductor API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package conductor

import (
	"encoding/json"
	"fmt"
)

// checks if the QuickbooksDesktopJournalEntriesPostRequestDebitLinesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QuickbooksDesktopJournalEntriesPostRequestDebitLinesInner{}

// QuickbooksDesktopJournalEntriesPostRequestDebitLinesInner struct for QuickbooksDesktopJournalEntriesPostRequestDebitLinesInner
type QuickbooksDesktopJournalEntriesPostRequestDebitLinesInner struct {
	// The account to which this journal debit line is being debited. This will decrease the balance of this account.
	AccountId string `json:"accountId"`
	// The monetary amount of this journal debit line, represented as a decimal string.
	Amount *string `json:"amount,omitempty"`
	// A memo or note for this journal debit line.
	Memo *string `json:"memo,omitempty"`
	// The customer, vendor, employee, or other entity associated with this journal debit line.  **IMPORTANT**: If the journal debit line's `account` is an Accounts Receivable (A/R) account, this field must refer to a customer. If the journal debit line's `account` is an Accounts Payable (A/P) account, this field must refer to a vendor. If these requirements are not met, QuickBooks Desktop will not record the transaction.
	EntityId *string `json:"entityId,omitempty"`
	// The journal debit line's class. Classes can be used to categorize objects into meaningful segments, such as department, location, or type of work. In QuickBooks, class tracking is off by default. If a class is specified for the entire parent transaction, it is automatically applied to all journal debit lines unless overridden here, at the transaction line level.
	ClassId *string `json:"classId,omitempty"`
	// The sales-tax item used to calculate the actual tax amount for this journal debit line's transactions by applying a specific tax rate collected for a single tax agency. Unlike `salesTaxCode`, which only indicates general taxability, this field drives the actual tax calculation and reporting.
	SalesTaxItemId *string `json:"salesTaxItemId,omitempty"`
	// The billing status of this journal debit line.
	BillingStatus *string `json:"billingStatus,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _QuickbooksDesktopJournalEntriesPostRequestDebitLinesInner QuickbooksDesktopJournalEntriesPostRequestDebitLinesInner

// NewQuickbooksDesktopJournalEntriesPostRequestDebitLinesInner instantiates a new QuickbooksDesktopJournalEntriesPostRequestDebitLinesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQuickbooksDesktopJournalEntriesPostRequestDebitLinesInner(accountId string) *QuickbooksDesktopJournalEntriesPostRequestDebitLinesInner {
	this := QuickbooksDesktopJournalEntriesPostRequestDebitLinesInner{}
	this.AccountId = accountId
	var billingStatus string = "billable"
	this.BillingStatus = &billingStatus
	return &this
}

// NewQuickbooksDesktopJournalEntriesPostRequestDebitLinesInnerWithDefaults instantiates a new QuickbooksDesktopJournalEntriesPostRequestDebitLinesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQuickbooksDesktopJournalEntriesPostRequestDebitLinesInnerWithDefaults() *QuickbooksDesktopJournalEntriesPostRequestDebitLinesInner {
	this := QuickbooksDesktopJournalEntriesPostRequestDebitLinesInner{}
	var billingStatus string = "billable"
	this.BillingStatus = &billingStatus
	return &this
}

// GetAccountId returns the AccountId field value
func (o *QuickbooksDesktopJournalEntriesPostRequestDebitLinesInner) GetAccountId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopJournalEntriesPostRequestDebitLinesInner) GetAccountIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountId, true
}

// SetAccountId sets field value
func (o *QuickbooksDesktopJournalEntriesPostRequestDebitLinesInner) SetAccountId(v string) {
	o.AccountId = v
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *QuickbooksDesktopJournalEntriesPostRequestDebitLinesInner) GetAmount() string {
	if o == nil || IsNil(o.Amount) {
		var ret string
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopJournalEntriesPostRequestDebitLinesInner) GetAmountOk() (*string, bool) {
	if o == nil || IsNil(o.Amount) {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *QuickbooksDesktopJournalEntriesPostRequestDebitLinesInner) HasAmount() bool {
	if o != nil && !IsNil(o.Amount) {
		return true
	}

	return false
}

// SetAmount gets a reference to the given string and assigns it to the Amount field.
func (o *QuickbooksDesktopJournalEntriesPostRequestDebitLinesInner) SetAmount(v string) {
	o.Amount = &v
}

// GetMemo returns the Memo field value if set, zero value otherwise.
func (o *QuickbooksDesktopJournalEntriesPostRequestDebitLinesInner) GetMemo() string {
	if o == nil || IsNil(o.Memo) {
		var ret string
		return ret
	}
	return *o.Memo
}

// GetMemoOk returns a tuple with the Memo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopJournalEntriesPostRequestDebitLinesInner) GetMemoOk() (*string, bool) {
	if o == nil || IsNil(o.Memo) {
		return nil, false
	}
	return o.Memo, true
}

// HasMemo returns a boolean if a field has been set.
func (o *QuickbooksDesktopJournalEntriesPostRequestDebitLinesInner) HasMemo() bool {
	if o != nil && !IsNil(o.Memo) {
		return true
	}

	return false
}

// SetMemo gets a reference to the given string and assigns it to the Memo field.
func (o *QuickbooksDesktopJournalEntriesPostRequestDebitLinesInner) SetMemo(v string) {
	o.Memo = &v
}

// GetEntityId returns the EntityId field value if set, zero value otherwise.
func (o *QuickbooksDesktopJournalEntriesPostRequestDebitLinesInner) GetEntityId() string {
	if o == nil || IsNil(o.EntityId) {
		var ret string
		return ret
	}
	return *o.EntityId
}

// GetEntityIdOk returns a tuple with the EntityId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopJournalEntriesPostRequestDebitLinesInner) GetEntityIdOk() (*string, bool) {
	if o == nil || IsNil(o.EntityId) {
		return nil, false
	}
	return o.EntityId, true
}

// HasEntityId returns a boolean if a field has been set.
func (o *QuickbooksDesktopJournalEntriesPostRequestDebitLinesInner) HasEntityId() bool {
	if o != nil && !IsNil(o.EntityId) {
		return true
	}

	return false
}

// SetEntityId gets a reference to the given string and assigns it to the EntityId field.
func (o *QuickbooksDesktopJournalEntriesPostRequestDebitLinesInner) SetEntityId(v string) {
	o.EntityId = &v
}

// GetClassId returns the ClassId field value if set, zero value otherwise.
func (o *QuickbooksDesktopJournalEntriesPostRequestDebitLinesInner) GetClassId() string {
	if o == nil || IsNil(o.ClassId) {
		var ret string
		return ret
	}
	return *o.ClassId
}

// GetClassIdOk returns a tuple with the ClassId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopJournalEntriesPostRequestDebitLinesInner) GetClassIdOk() (*string, bool) {
	if o == nil || IsNil(o.ClassId) {
		return nil, false
	}
	return o.ClassId, true
}

// HasClassId returns a boolean if a field has been set.
func (o *QuickbooksDesktopJournalEntriesPostRequestDebitLinesInner) HasClassId() bool {
	if o != nil && !IsNil(o.ClassId) {
		return true
	}

	return false
}

// SetClassId gets a reference to the given string and assigns it to the ClassId field.
func (o *QuickbooksDesktopJournalEntriesPostRequestDebitLinesInner) SetClassId(v string) {
	o.ClassId = &v
}

// GetSalesTaxItemId returns the SalesTaxItemId field value if set, zero value otherwise.
func (o *QuickbooksDesktopJournalEntriesPostRequestDebitLinesInner) GetSalesTaxItemId() string {
	if o == nil || IsNil(o.SalesTaxItemId) {
		var ret string
		return ret
	}
	return *o.SalesTaxItemId
}

// GetSalesTaxItemIdOk returns a tuple with the SalesTaxItemId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopJournalEntriesPostRequestDebitLinesInner) GetSalesTaxItemIdOk() (*string, bool) {
	if o == nil || IsNil(o.SalesTaxItemId) {
		return nil, false
	}
	return o.SalesTaxItemId, true
}

// HasSalesTaxItemId returns a boolean if a field has been set.
func (o *QuickbooksDesktopJournalEntriesPostRequestDebitLinesInner) HasSalesTaxItemId() bool {
	if o != nil && !IsNil(o.SalesTaxItemId) {
		return true
	}

	return false
}

// SetSalesTaxItemId gets a reference to the given string and assigns it to the SalesTaxItemId field.
func (o *QuickbooksDesktopJournalEntriesPostRequestDebitLinesInner) SetSalesTaxItemId(v string) {
	o.SalesTaxItemId = &v
}

// GetBillingStatus returns the BillingStatus field value if set, zero value otherwise.
func (o *QuickbooksDesktopJournalEntriesPostRequestDebitLinesInner) GetBillingStatus() string {
	if o == nil || IsNil(o.BillingStatus) {
		var ret string
		return ret
	}
	return *o.BillingStatus
}

// GetBillingStatusOk returns a tuple with the BillingStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopJournalEntriesPostRequestDebitLinesInner) GetBillingStatusOk() (*string, bool) {
	if o == nil || IsNil(o.BillingStatus) {
		return nil, false
	}
	return o.BillingStatus, true
}

// HasBillingStatus returns a boolean if a field has been set.
func (o *QuickbooksDesktopJournalEntriesPostRequestDebitLinesInner) HasBillingStatus() bool {
	if o != nil && !IsNil(o.BillingStatus) {
		return true
	}

	return false
}

// SetBillingStatus gets a reference to the given string and assigns it to the BillingStatus field.
func (o *QuickbooksDesktopJournalEntriesPostRequestDebitLinesInner) SetBillingStatus(v string) {
	o.BillingStatus = &v
}

func (o QuickbooksDesktopJournalEntriesPostRequestDebitLinesInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QuickbooksDesktopJournalEntriesPostRequestDebitLinesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["accountId"] = o.AccountId
	if !IsNil(o.Amount) {
		toSerialize["amount"] = o.Amount
	}
	if !IsNil(o.Memo) {
		toSerialize["memo"] = o.Memo
	}
	if !IsNil(o.EntityId) {
		toSerialize["entityId"] = o.EntityId
	}
	if !IsNil(o.ClassId) {
		toSerialize["classId"] = o.ClassId
	}
	if !IsNil(o.SalesTaxItemId) {
		toSerialize["salesTaxItemId"] = o.SalesTaxItemId
	}
	if !IsNil(o.BillingStatus) {
		toSerialize["billingStatus"] = o.BillingStatus
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *QuickbooksDesktopJournalEntriesPostRequestDebitLinesInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"accountId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varQuickbooksDesktopJournalEntriesPostRequestDebitLinesInner := _QuickbooksDesktopJournalEntriesPostRequestDebitLinesInner{}

	err = json.Unmarshal(data, &varQuickbooksDesktopJournalEntriesPostRequestDebitLinesInner)

	if err != nil {
		return err
	}

	*o = QuickbooksDesktopJournalEntriesPostRequestDebitLinesInner(varQuickbooksDesktopJournalEntriesPostRequestDebitLinesInner)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "accountId")
		delete(additionalProperties, "amount")
		delete(additionalProperties, "memo")
		delete(additionalProperties, "entityId")
		delete(additionalProperties, "classId")
		delete(additionalProperties, "salesTaxItemId")
		delete(additionalProperties, "billingStatus")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableQuickbooksDesktopJournalEntriesPostRequestDebitLinesInner struct {
	value *QuickbooksDesktopJournalEntriesPostRequestDebitLinesInner
	isSet bool
}

func (v NullableQuickbooksDesktopJournalEntriesPostRequestDebitLinesInner) Get() *QuickbooksDesktopJournalEntriesPostRequestDebitLinesInner {
	return v.value
}

func (v *NullableQuickbooksDesktopJournalEntriesPostRequestDebitLinesInner) Set(val *QuickbooksDesktopJournalEntriesPostRequestDebitLinesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableQuickbooksDesktopJournalEntriesPostRequestDebitLinesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableQuickbooksDesktopJournalEntriesPostRequestDebitLinesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQuickbooksDesktopJournalEntriesPostRequestDebitLinesInner(val *QuickbooksDesktopJournalEntriesPostRequestDebitLinesInner) *NullableQuickbooksDesktopJournalEntriesPostRequestDebitLinesInner {
	return &NullableQuickbooksDesktopJournalEntriesPostRequestDebitLinesInner{value: val, isSet: true}
}

func (v NullableQuickbooksDesktopJournalEntriesPostRequestDebitLinesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQuickbooksDesktopJournalEntriesPostRequestDebitLinesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


