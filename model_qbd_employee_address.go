/*
Conductor API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package conductor

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the QbdEmployeeAddress type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QbdEmployeeAddress{}

// QbdEmployeeAddress struct for QbdEmployeeAddress
type QbdEmployeeAddress struct {
	// The first line of the employee address (e.g., street, PO Box, or company name).
	Line1 NullableString `json:"line1"`
	// The second line of the employee address, if needed (e.g., apartment, suite, unit, or building).
	Line2 NullableString `json:"line2"`
	// The third line of the employee address, if needed.
	Line3 NullableString `json:"line3"`
	// The fourth line of the employee address, if needed.
	Line4 NullableString `json:"line4"`
	// The city, district, suburb, town, or village name of the employee address.
	City NullableString `json:"city"`
	// The U.S. state of the employee address. QuickBooks requires this field to be a U.S. state abbreviation (e.g., \"CA\" for California). See enum for all possible values.
	State NullableString `json:"state"`
	// The postal code or ZIP code of the employee address.
	PostalCode NullableString `json:"postalCode"`
	// The country name of the employee address.
	Country NullableString `json:"country"`
}

type _QbdEmployeeAddress QbdEmployeeAddress

// NewQbdEmployeeAddress instantiates a new QbdEmployeeAddress object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQbdEmployeeAddress(line1 NullableString, line2 NullableString, line3 NullableString, line4 NullableString, city NullableString, state NullableString, postalCode NullableString, country NullableString) *QbdEmployeeAddress {
	this := QbdEmployeeAddress{}
	this.Line1 = line1
	this.Line2 = line2
	this.Line3 = line3
	this.Line4 = line4
	this.City = city
	this.State = state
	this.PostalCode = postalCode
	this.Country = country
	return &this
}

// NewQbdEmployeeAddressWithDefaults instantiates a new QbdEmployeeAddress object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQbdEmployeeAddressWithDefaults() *QbdEmployeeAddress {
	this := QbdEmployeeAddress{}
	return &this
}

// GetLine1 returns the Line1 field value
// If the value is explicit nil, the zero value for string will be returned
func (o *QbdEmployeeAddress) GetLine1() string {
	if o == nil || o.Line1.Get() == nil {
		var ret string
		return ret
	}

	return *o.Line1.Get()
}

// GetLine1Ok returns a tuple with the Line1 field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QbdEmployeeAddress) GetLine1Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Line1.Get(), o.Line1.IsSet()
}

// SetLine1 sets field value
func (o *QbdEmployeeAddress) SetLine1(v string) {
	o.Line1.Set(&v)
}

// GetLine2 returns the Line2 field value
// If the value is explicit nil, the zero value for string will be returned
func (o *QbdEmployeeAddress) GetLine2() string {
	if o == nil || o.Line2.Get() == nil {
		var ret string
		return ret
	}

	return *o.Line2.Get()
}

// GetLine2Ok returns a tuple with the Line2 field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QbdEmployeeAddress) GetLine2Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Line2.Get(), o.Line2.IsSet()
}

// SetLine2 sets field value
func (o *QbdEmployeeAddress) SetLine2(v string) {
	o.Line2.Set(&v)
}

// GetLine3 returns the Line3 field value
// If the value is explicit nil, the zero value for string will be returned
func (o *QbdEmployeeAddress) GetLine3() string {
	if o == nil || o.Line3.Get() == nil {
		var ret string
		return ret
	}

	return *o.Line3.Get()
}

// GetLine3Ok returns a tuple with the Line3 field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QbdEmployeeAddress) GetLine3Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Line3.Get(), o.Line3.IsSet()
}

// SetLine3 sets field value
func (o *QbdEmployeeAddress) SetLine3(v string) {
	o.Line3.Set(&v)
}

// GetLine4 returns the Line4 field value
// If the value is explicit nil, the zero value for string will be returned
func (o *QbdEmployeeAddress) GetLine4() string {
	if o == nil || o.Line4.Get() == nil {
		var ret string
		return ret
	}

	return *o.Line4.Get()
}

// GetLine4Ok returns a tuple with the Line4 field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QbdEmployeeAddress) GetLine4Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Line4.Get(), o.Line4.IsSet()
}

// SetLine4 sets field value
func (o *QbdEmployeeAddress) SetLine4(v string) {
	o.Line4.Set(&v)
}

// GetCity returns the City field value
// If the value is explicit nil, the zero value for string will be returned
func (o *QbdEmployeeAddress) GetCity() string {
	if o == nil || o.City.Get() == nil {
		var ret string
		return ret
	}

	return *o.City.Get()
}

// GetCityOk returns a tuple with the City field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QbdEmployeeAddress) GetCityOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.City.Get(), o.City.IsSet()
}

// SetCity sets field value
func (o *QbdEmployeeAddress) SetCity(v string) {
	o.City.Set(&v)
}

// GetState returns the State field value
// If the value is explicit nil, the zero value for string will be returned
func (o *QbdEmployeeAddress) GetState() string {
	if o == nil || o.State.Get() == nil {
		var ret string
		return ret
	}

	return *o.State.Get()
}

// GetStateOk returns a tuple with the State field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QbdEmployeeAddress) GetStateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.State.Get(), o.State.IsSet()
}

// SetState sets field value
func (o *QbdEmployeeAddress) SetState(v string) {
	o.State.Set(&v)
}

// GetPostalCode returns the PostalCode field value
// If the value is explicit nil, the zero value for string will be returned
func (o *QbdEmployeeAddress) GetPostalCode() string {
	if o == nil || o.PostalCode.Get() == nil {
		var ret string
		return ret
	}

	return *o.PostalCode.Get()
}

// GetPostalCodeOk returns a tuple with the PostalCode field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QbdEmployeeAddress) GetPostalCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PostalCode.Get(), o.PostalCode.IsSet()
}

// SetPostalCode sets field value
func (o *QbdEmployeeAddress) SetPostalCode(v string) {
	o.PostalCode.Set(&v)
}

// GetCountry returns the Country field value
// If the value is explicit nil, the zero value for string will be returned
func (o *QbdEmployeeAddress) GetCountry() string {
	if o == nil || o.Country.Get() == nil {
		var ret string
		return ret
	}

	return *o.Country.Get()
}

// GetCountryOk returns a tuple with the Country field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QbdEmployeeAddress) GetCountryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Country.Get(), o.Country.IsSet()
}

// SetCountry sets field value
func (o *QbdEmployeeAddress) SetCountry(v string) {
	o.Country.Set(&v)
}

func (o QbdEmployeeAddress) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QbdEmployeeAddress) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["line1"] = o.Line1.Get()
	toSerialize["line2"] = o.Line2.Get()
	toSerialize["line3"] = o.Line3.Get()
	toSerialize["line4"] = o.Line4.Get()
	toSerialize["city"] = o.City.Get()
	toSerialize["state"] = o.State.Get()
	toSerialize["postalCode"] = o.PostalCode.Get()
	toSerialize["country"] = o.Country.Get()
	return toSerialize, nil
}

func (o *QbdEmployeeAddress) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"line1",
		"line2",
		"line3",
		"line4",
		"city",
		"state",
		"postalCode",
		"country",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varQbdEmployeeAddress := _QbdEmployeeAddress{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varQbdEmployeeAddress)

	if err != nil {
		return err
	}

	*o = QbdEmployeeAddress(varQbdEmployeeAddress)

	return err
}

type NullableQbdEmployeeAddress struct {
	value *QbdEmployeeAddress
	isSet bool
}

func (v NullableQbdEmployeeAddress) Get() *QbdEmployeeAddress {
	return v.value
}

func (v *NullableQbdEmployeeAddress) Set(val *QbdEmployeeAddress) {
	v.value = val
	v.isSet = true
}

func (v NullableQbdEmployeeAddress) IsSet() bool {
	return v.isSet
}

func (v *NullableQbdEmployeeAddress) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQbdEmployeeAddress(val *QbdEmployeeAddress) *NullableQbdEmployeeAddress {
	return &NullableQbdEmployeeAddress{value: val, isSet: true}
}

func (v NullableQbdEmployeeAddress) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQbdEmployeeAddress) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


