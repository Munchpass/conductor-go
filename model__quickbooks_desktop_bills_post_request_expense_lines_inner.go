/*
Conductor API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package conductor

import (
	"encoding/json"
)

// checks if the QuickbooksDesktopBillsPostRequestExpenseLinesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QuickbooksDesktopBillsPostRequestExpenseLinesInner{}

// QuickbooksDesktopBillsPostRequestExpenseLinesInner struct for QuickbooksDesktopBillsPostRequestExpenseLinesInner
type QuickbooksDesktopBillsPostRequestExpenseLinesInner struct {
	// The expense account being debited (increased) for this expense line. The corresponding account being credited is usually a liability account (e.g., Accounts-Payable) or an asset account (e.g., Cash), depending on the transaction type.
	AccountId *string `json:"accountId,omitempty"`
	// The monetary amount of this expense line, represented as a decimal string.
	Amount *string `json:"amount,omitempty"`
	// A memo or note for this expense line.
	Memo *string `json:"memo,omitempty"`
	// If `account` refers to an Accounts-Payable (A/P) account, `payee` refers to the expense's vendor (not the customer). If `account` refers to any other type of account, `payee` refers to the expense's customer (not the vendor).
	PayeeId *string `json:"payeeId,omitempty"`
	// The expense line's class. Classes can be used to categorize objects into meaningful segments, such as department, location, or type of work. In QuickBooks, class tracking is off by default. If a class is specified for the entire parent transaction, it is automatically applied to all expense lines unless overridden here, at the transaction line level.
	ClassId *string `json:"classId,omitempty"`
	// The sales-tax code for this expense line, determining whether it is taxable or non-taxable. If set, this overrides any sales-tax codes defined on the parent transaction or the associated item.  Default codes include \"Non\" (non-taxable) and \"Tax\" (taxable), but custom codes can also be created in QuickBooks. If QuickBooks is not set up to charge sales tax (via the \"Do You Charge Sales Tax?\" preference), it will assign the default non-taxable code to all sales.
	SalesTaxCodeId *string `json:"salesTaxCodeId,omitempty"`
	// The billing status of this expense line.
	BillingStatus *string `json:"billingStatus,omitempty"`
	// The expense line's sales representative. Sales representatives can be employees, vendors, or other names in QuickBooks.
	SalesRepresentativeId *string `json:"salesRepresentativeId,omitempty"`
	// The custom fields for the expense line object, added as user-defined data extensions, not included in the standard QuickBooks object.
	CustomFields []QuickbooksDesktopBillsPostRequestExpenseLinesInnerCustomFieldsInner `json:"customFields,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _QuickbooksDesktopBillsPostRequestExpenseLinesInner QuickbooksDesktopBillsPostRequestExpenseLinesInner

// NewQuickbooksDesktopBillsPostRequestExpenseLinesInner instantiates a new QuickbooksDesktopBillsPostRequestExpenseLinesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQuickbooksDesktopBillsPostRequestExpenseLinesInner() *QuickbooksDesktopBillsPostRequestExpenseLinesInner {
	this := QuickbooksDesktopBillsPostRequestExpenseLinesInner{}
	var billingStatus string = "billable"
	this.BillingStatus = &billingStatus
	return &this
}

// NewQuickbooksDesktopBillsPostRequestExpenseLinesInnerWithDefaults instantiates a new QuickbooksDesktopBillsPostRequestExpenseLinesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQuickbooksDesktopBillsPostRequestExpenseLinesInnerWithDefaults() *QuickbooksDesktopBillsPostRequestExpenseLinesInner {
	this := QuickbooksDesktopBillsPostRequestExpenseLinesInner{}
	var billingStatus string = "billable"
	this.BillingStatus = &billingStatus
	return &this
}

// GetAccountId returns the AccountId field value if set, zero value otherwise.
func (o *QuickbooksDesktopBillsPostRequestExpenseLinesInner) GetAccountId() string {
	if o == nil || IsNil(o.AccountId) {
		var ret string
		return ret
	}
	return *o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopBillsPostRequestExpenseLinesInner) GetAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.AccountId) {
		return nil, false
	}
	return o.AccountId, true
}

// HasAccountId returns a boolean if a field has been set.
func (o *QuickbooksDesktopBillsPostRequestExpenseLinesInner) HasAccountId() bool {
	if o != nil && !IsNil(o.AccountId) {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given string and assigns it to the AccountId field.
func (o *QuickbooksDesktopBillsPostRequestExpenseLinesInner) SetAccountId(v string) {
	o.AccountId = &v
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *QuickbooksDesktopBillsPostRequestExpenseLinesInner) GetAmount() string {
	if o == nil || IsNil(o.Amount) {
		var ret string
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopBillsPostRequestExpenseLinesInner) GetAmountOk() (*string, bool) {
	if o == nil || IsNil(o.Amount) {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *QuickbooksDesktopBillsPostRequestExpenseLinesInner) HasAmount() bool {
	if o != nil && !IsNil(o.Amount) {
		return true
	}

	return false
}

// SetAmount gets a reference to the given string and assigns it to the Amount field.
func (o *QuickbooksDesktopBillsPostRequestExpenseLinesInner) SetAmount(v string) {
	o.Amount = &v
}

// GetMemo returns the Memo field value if set, zero value otherwise.
func (o *QuickbooksDesktopBillsPostRequestExpenseLinesInner) GetMemo() string {
	if o == nil || IsNil(o.Memo) {
		var ret string
		return ret
	}
	return *o.Memo
}

// GetMemoOk returns a tuple with the Memo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopBillsPostRequestExpenseLinesInner) GetMemoOk() (*string, bool) {
	if o == nil || IsNil(o.Memo) {
		return nil, false
	}
	return o.Memo, true
}

// HasMemo returns a boolean if a field has been set.
func (o *QuickbooksDesktopBillsPostRequestExpenseLinesInner) HasMemo() bool {
	if o != nil && !IsNil(o.Memo) {
		return true
	}

	return false
}

// SetMemo gets a reference to the given string and assigns it to the Memo field.
func (o *QuickbooksDesktopBillsPostRequestExpenseLinesInner) SetMemo(v string) {
	o.Memo = &v
}

// GetPayeeId returns the PayeeId field value if set, zero value otherwise.
func (o *QuickbooksDesktopBillsPostRequestExpenseLinesInner) GetPayeeId() string {
	if o == nil || IsNil(o.PayeeId) {
		var ret string
		return ret
	}
	return *o.PayeeId
}

// GetPayeeIdOk returns a tuple with the PayeeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopBillsPostRequestExpenseLinesInner) GetPayeeIdOk() (*string, bool) {
	if o == nil || IsNil(o.PayeeId) {
		return nil, false
	}
	return o.PayeeId, true
}

// HasPayeeId returns a boolean if a field has been set.
func (o *QuickbooksDesktopBillsPostRequestExpenseLinesInner) HasPayeeId() bool {
	if o != nil && !IsNil(o.PayeeId) {
		return true
	}

	return false
}

// SetPayeeId gets a reference to the given string and assigns it to the PayeeId field.
func (o *QuickbooksDesktopBillsPostRequestExpenseLinesInner) SetPayeeId(v string) {
	o.PayeeId = &v
}

// GetClassId returns the ClassId field value if set, zero value otherwise.
func (o *QuickbooksDesktopBillsPostRequestExpenseLinesInner) GetClassId() string {
	if o == nil || IsNil(o.ClassId) {
		var ret string
		return ret
	}
	return *o.ClassId
}

// GetClassIdOk returns a tuple with the ClassId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopBillsPostRequestExpenseLinesInner) GetClassIdOk() (*string, bool) {
	if o == nil || IsNil(o.ClassId) {
		return nil, false
	}
	return o.ClassId, true
}

// HasClassId returns a boolean if a field has been set.
func (o *QuickbooksDesktopBillsPostRequestExpenseLinesInner) HasClassId() bool {
	if o != nil && !IsNil(o.ClassId) {
		return true
	}

	return false
}

// SetClassId gets a reference to the given string and assigns it to the ClassId field.
func (o *QuickbooksDesktopBillsPostRequestExpenseLinesInner) SetClassId(v string) {
	o.ClassId = &v
}

// GetSalesTaxCodeId returns the SalesTaxCodeId field value if set, zero value otherwise.
func (o *QuickbooksDesktopBillsPostRequestExpenseLinesInner) GetSalesTaxCodeId() string {
	if o == nil || IsNil(o.SalesTaxCodeId) {
		var ret string
		return ret
	}
	return *o.SalesTaxCodeId
}

// GetSalesTaxCodeIdOk returns a tuple with the SalesTaxCodeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopBillsPostRequestExpenseLinesInner) GetSalesTaxCodeIdOk() (*string, bool) {
	if o == nil || IsNil(o.SalesTaxCodeId) {
		return nil, false
	}
	return o.SalesTaxCodeId, true
}

// HasSalesTaxCodeId returns a boolean if a field has been set.
func (o *QuickbooksDesktopBillsPostRequestExpenseLinesInner) HasSalesTaxCodeId() bool {
	if o != nil && !IsNil(o.SalesTaxCodeId) {
		return true
	}

	return false
}

// SetSalesTaxCodeId gets a reference to the given string and assigns it to the SalesTaxCodeId field.
func (o *QuickbooksDesktopBillsPostRequestExpenseLinesInner) SetSalesTaxCodeId(v string) {
	o.SalesTaxCodeId = &v
}

// GetBillingStatus returns the BillingStatus field value if set, zero value otherwise.
func (o *QuickbooksDesktopBillsPostRequestExpenseLinesInner) GetBillingStatus() string {
	if o == nil || IsNil(o.BillingStatus) {
		var ret string
		return ret
	}
	return *o.BillingStatus
}

// GetBillingStatusOk returns a tuple with the BillingStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopBillsPostRequestExpenseLinesInner) GetBillingStatusOk() (*string, bool) {
	if o == nil || IsNil(o.BillingStatus) {
		return nil, false
	}
	return o.BillingStatus, true
}

// HasBillingStatus returns a boolean if a field has been set.
func (o *QuickbooksDesktopBillsPostRequestExpenseLinesInner) HasBillingStatus() bool {
	if o != nil && !IsNil(o.BillingStatus) {
		return true
	}

	return false
}

// SetBillingStatus gets a reference to the given string and assigns it to the BillingStatus field.
func (o *QuickbooksDesktopBillsPostRequestExpenseLinesInner) SetBillingStatus(v string) {
	o.BillingStatus = &v
}

// GetSalesRepresentativeId returns the SalesRepresentativeId field value if set, zero value otherwise.
func (o *QuickbooksDesktopBillsPostRequestExpenseLinesInner) GetSalesRepresentativeId() string {
	if o == nil || IsNil(o.SalesRepresentativeId) {
		var ret string
		return ret
	}
	return *o.SalesRepresentativeId
}

// GetSalesRepresentativeIdOk returns a tuple with the SalesRepresentativeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopBillsPostRequestExpenseLinesInner) GetSalesRepresentativeIdOk() (*string, bool) {
	if o == nil || IsNil(o.SalesRepresentativeId) {
		return nil, false
	}
	return o.SalesRepresentativeId, true
}

// HasSalesRepresentativeId returns a boolean if a field has been set.
func (o *QuickbooksDesktopBillsPostRequestExpenseLinesInner) HasSalesRepresentativeId() bool {
	if o != nil && !IsNil(o.SalesRepresentativeId) {
		return true
	}

	return false
}

// SetSalesRepresentativeId gets a reference to the given string and assigns it to the SalesRepresentativeId field.
func (o *QuickbooksDesktopBillsPostRequestExpenseLinesInner) SetSalesRepresentativeId(v string) {
	o.SalesRepresentativeId = &v
}

// GetCustomFields returns the CustomFields field value if set, zero value otherwise.
func (o *QuickbooksDesktopBillsPostRequestExpenseLinesInner) GetCustomFields() []QuickbooksDesktopBillsPostRequestExpenseLinesInnerCustomFieldsInner {
	if o == nil || IsNil(o.CustomFields) {
		var ret []QuickbooksDesktopBillsPostRequestExpenseLinesInnerCustomFieldsInner
		return ret
	}
	return o.CustomFields
}

// GetCustomFieldsOk returns a tuple with the CustomFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopBillsPostRequestExpenseLinesInner) GetCustomFieldsOk() ([]QuickbooksDesktopBillsPostRequestExpenseLinesInnerCustomFieldsInner, bool) {
	if o == nil || IsNil(o.CustomFields) {
		return nil, false
	}
	return o.CustomFields, true
}

// HasCustomFields returns a boolean if a field has been set.
func (o *QuickbooksDesktopBillsPostRequestExpenseLinesInner) HasCustomFields() bool {
	if o != nil && !IsNil(o.CustomFields) {
		return true
	}

	return false
}

// SetCustomFields gets a reference to the given []QuickbooksDesktopBillsPostRequestExpenseLinesInnerCustomFieldsInner and assigns it to the CustomFields field.
func (o *QuickbooksDesktopBillsPostRequestExpenseLinesInner) SetCustomFields(v []QuickbooksDesktopBillsPostRequestExpenseLinesInnerCustomFieldsInner) {
	o.CustomFields = v
}

func (o QuickbooksDesktopBillsPostRequestExpenseLinesInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QuickbooksDesktopBillsPostRequestExpenseLinesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccountId) {
		toSerialize["accountId"] = o.AccountId
	}
	if !IsNil(o.Amount) {
		toSerialize["amount"] = o.Amount
	}
	if !IsNil(o.Memo) {
		toSerialize["memo"] = o.Memo
	}
	if !IsNil(o.PayeeId) {
		toSerialize["payeeId"] = o.PayeeId
	}
	if !IsNil(o.ClassId) {
		toSerialize["classId"] = o.ClassId
	}
	if !IsNil(o.SalesTaxCodeId) {
		toSerialize["salesTaxCodeId"] = o.SalesTaxCodeId
	}
	if !IsNil(o.BillingStatus) {
		toSerialize["billingStatus"] = o.BillingStatus
	}
	if !IsNil(o.SalesRepresentativeId) {
		toSerialize["salesRepresentativeId"] = o.SalesRepresentativeId
	}
	if !IsNil(o.CustomFields) {
		toSerialize["customFields"] = o.CustomFields
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *QuickbooksDesktopBillsPostRequestExpenseLinesInner) UnmarshalJSON(data []byte) (err error) {
	varQuickbooksDesktopBillsPostRequestExpenseLinesInner := _QuickbooksDesktopBillsPostRequestExpenseLinesInner{}

	err = json.Unmarshal(data, &varQuickbooksDesktopBillsPostRequestExpenseLinesInner)

	if err != nil {
		return err
	}

	*o = QuickbooksDesktopBillsPostRequestExpenseLinesInner(varQuickbooksDesktopBillsPostRequestExpenseLinesInner)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "accountId")
		delete(additionalProperties, "amount")
		delete(additionalProperties, "memo")
		delete(additionalProperties, "payeeId")
		delete(additionalProperties, "classId")
		delete(additionalProperties, "salesTaxCodeId")
		delete(additionalProperties, "billingStatus")
		delete(additionalProperties, "salesRepresentativeId")
		delete(additionalProperties, "customFields")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableQuickbooksDesktopBillsPostRequestExpenseLinesInner struct {
	value *QuickbooksDesktopBillsPostRequestExpenseLinesInner
	isSet bool
}

func (v NullableQuickbooksDesktopBillsPostRequestExpenseLinesInner) Get() *QuickbooksDesktopBillsPostRequestExpenseLinesInner {
	return v.value
}

func (v *NullableQuickbooksDesktopBillsPostRequestExpenseLinesInner) Set(val *QuickbooksDesktopBillsPostRequestExpenseLinesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableQuickbooksDesktopBillsPostRequestExpenseLinesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableQuickbooksDesktopBillsPostRequestExpenseLinesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQuickbooksDesktopBillsPostRequestExpenseLinesInner(val *QuickbooksDesktopBillsPostRequestExpenseLinesInner) *NullableQuickbooksDesktopBillsPostRequestExpenseLinesInner {
	return &NullableQuickbooksDesktopBillsPostRequestExpenseLinesInner{value: val, isSet: true}
}

func (v NullableQuickbooksDesktopBillsPostRequestExpenseLinesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQuickbooksDesktopBillsPostRequestExpenseLinesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


