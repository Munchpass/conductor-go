/*
Conductor API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package conductor

import (
	"encoding/json"
	"fmt"
)

// checks if the QuickbooksDesktopVendorsPostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QuickbooksDesktopVendorsPostRequest{}

// QuickbooksDesktopVendorsPostRequest struct for QuickbooksDesktopVendorsPostRequest
type QuickbooksDesktopVendorsPostRequest struct {
	// The case-insensitive unique name of this vendor, unique across all vendors.  **NOTE**: Vendors do not have a `fullName` field because they are not hierarchical objects, which is why `name` is unique for them but not for objects that have parents.  Maximum length: 41 characters.
	Name string `json:"name"`
	// Indicates whether this vendor is active. Inactive objects are typically hidden from views and reports in QuickBooks. Defaults to `true`.
	IsActive *bool `json:"isActive,omitempty"`
	// The vendor's class. Classes can be used to categorize objects into meaningful segments, such as department, location, or type of work. In QuickBooks, class tracking is off by default.
	ClassId *string `json:"classId,omitempty"`
	// The name of the company associated with this vendor. This name is used on invoices, checks, and other forms.
	CompanyName *string `json:"companyName,omitempty"`
	// The formal salutation title that precedes the name of the contact person for this vendor, such as \"Mr.\", \"Ms.\", or \"Dr.\".
	Salutation *string `json:"salutation,omitempty"`
	// The first name of the contact person for this vendor.  Maximum length: 25 characters.
	FirstName *string `json:"firstName,omitempty"`
	// The middle name of the contact person for this vendor.  Maximum length: 5 characters.
	MiddleName *string `json:"middleName,omitempty"`
	// The last name of the contact person for this vendor.  Maximum length: 25 characters.
	LastName *string `json:"lastName,omitempty"`
	// The job title of the contact person for this vendor.
	JobTitle *string `json:"jobTitle,omitempty"`
	BillingAddress *QuickbooksDesktopVendorsPostRequestBillingAddress `json:"billingAddress,omitempty"`
	ShippingAddress *QuickbooksDesktopVendorsPostRequestShippingAddress `json:"shippingAddress,omitempty"`
	// The vendor's primary telephone number.
	Phone *string `json:"phone,omitempty"`
	// The vendor's alternate telephone number.
	AlternatePhone *string `json:"alternatePhone,omitempty"`
	// The vendor's fax number.
	Fax *string `json:"fax,omitempty"`
	// The vendor's email address.
	Email *string `json:"email,omitempty"`
	// An email address to carbon copy (CC) on communications with this vendor.
	CcEmail *string `json:"ccEmail,omitempty"`
	// The name of the primary contact person for this vendor.
	Contact *string `json:"contact,omitempty"`
	// The name of a alternate contact person for this vendor.
	AlternateContact *string `json:"alternateContact,omitempty"`
	// Additional custom contact fields for this vendor, such as phone numbers or email addresses.
	CustomContactFields []QuickbooksDesktopCustomersPostRequestCustomContactFieldsInner `json:"customContactFields,omitempty"`
	// Additional alternate contacts for this vendor.
	AdditionalContacts []QuickbooksDesktopCustomersPostRequestAdditionalContactsInner `json:"additionalContacts,omitempty"`
	// The vendor's name as it should appear on checks issued to this vendor.
	NameOnCheck *string `json:"nameOnCheck,omitempty"`
	// The vendor's account number, which appears in the QuickBooks chart of accounts, reports, and graphs.  Note that if the \"Use Account Numbers\" preference is turned off in QuickBooks, the account number may not be visible in the user interface, but it can still be set and retrieved through the API.
	AccountNumber *string `json:"accountNumber,omitempty"`
	// A note or comment about this vendor.
	Note *string `json:"note,omitempty"`
	// Additional notes about this vendor.
	AdditionalNotes []QuickbooksDesktopCustomersPostRequestAdditionalNotesInner `json:"additionalNotes,omitempty"`
	// The vendor's type, used for categorizing vendors into meaningful segments, such as industry or region.
	VendorTypeId *string `json:"vendorTypeId,omitempty"`
	// The vendor's payment terms, defining when payment is due and any applicable discounts.
	TermsId *string `json:"termsId,omitempty"`
	// The vendor's credit limit, represented as a decimal string. This is the maximum amount of money that can be spent being before billed by this vendor. If `null`, there is no credit limit.
	CreditLimit *string `json:"creditLimit,omitempty"`
	// The vendor's tax identification number (e.g., EIN or SSN).
	TaxIdentificationNumber *string `json:"taxIdentificationNumber,omitempty"`
	// Indicates whether this vendor is eligible to receive a 1099 form for tax reporting purposes. When `true`, then the fields `taxId` and `billingAddress` are required.
	IsEligibleFor1099 *bool `json:"isEligibleFor1099,omitempty"`
	// The opening balance of this vendor's account, indicating the amount owed to this vendor, represented as a decimal string.
	OpeningBalance *string `json:"openingBalance,omitempty"`
	// The date of the opening balance of this vendor, in ISO 8601 format (YYYY-MM-DD).
	OpeningBalanceDate *string `json:"openingBalanceDate,omitempty"`
	// The vendor's billing rate, used to override service item rates in time tracking activities.
	BillingRateId *string `json:"billingRateId,omitempty"`
	// A globally unique identifier (GUID) you, the developer, can provide for tracking this object in your external system. This field is immutable and can only be set during object creation.  **IMPORTANT**: This field must be formatted as a valid GUID; otherwise, QuickBooks will return an error.
	ExternalId *string `json:"externalId,omitempty"`
	// The default sales-tax code for transactions with this vendor, determining whether the transactions are taxable or non-taxable. This can be overridden at the transaction or transaction-line level.  Default codes include \"Non\" (non-taxable) and \"Tax\" (taxable), but custom codes can also be created in QuickBooks. If QuickBooks is not set up to charge sales tax (via the \"Do You Charge Sales Tax?\" preference), it will assign the default non-taxable code to all sales.
	SalesTaxCodeId *string `json:"salesTaxCodeId,omitempty"`
	// The country for which sales tax is collected for this vendor.
	SalesTaxCountry *string `json:"salesTaxCountry,omitempty"`
	// Indicates whether this vendor is a sales tax agency.
	IsSalesTaxAgency *bool `json:"isSalesTaxAgency,omitempty"`
	// The vendor's sales tax return information, used for tracking and reporting sales tax liabilities.
	SalesTaxReturnId *string `json:"salesTaxReturnId,omitempty"`
	// The vendor's tax registration number, for use in Canada or the UK.
	TaxRegistrationNumber *string `json:"taxRegistrationNumber,omitempty"`
	// The vendor's tax reporting period, for use in Canada or the UK.
	ReportingPeriod *string `json:"reportingPeriod,omitempty"`
	// Indicates whether tax is tracked on purchases for this vendor, for use in Canada or the UK.
	IsTrackingPurchaseTax *bool `json:"isTrackingPurchaseTax,omitempty"`
	// The account used for tracking taxes on purchases for this vendor, for use in Canada or the UK.
	PurchaseTaxAccountId *string `json:"purchaseTaxAccountId,omitempty"`
	// Indicates whether tax is tracked on sales for this vendor, for use in Canada or the UK.
	IsTrackingSalesTax *bool `json:"isTrackingSalesTax,omitempty"`
	// The account used for tracking taxes on sales for this vendor, for use in Canada or the UK.
	SalesTaxAccountId *string `json:"salesTaxAccountId,omitempty"`
	// Indicates whether tax is charged on top of tax for this vendor, for use in Canada or the UK.
	IsCompoundingTax *bool `json:"isCompoundingTax,omitempty"`
	// The expense accounts to prefill when entering bills for this vendor.
	DefaultExpenseAccountIds []string `json:"defaultExpenseAccountIds,omitempty"`
	// The vendor's currency. For built-in currencies, the name and code are standard international values. For user-defined currencies, all values are editable.
	CurrencyId *string `json:"currencyId,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _QuickbooksDesktopVendorsPostRequest QuickbooksDesktopVendorsPostRequest

// NewQuickbooksDesktopVendorsPostRequest instantiates a new QuickbooksDesktopVendorsPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQuickbooksDesktopVendorsPostRequest(name string) *QuickbooksDesktopVendorsPostRequest {
	this := QuickbooksDesktopVendorsPostRequest{}
	this.Name = name
	var isActive bool = true
	this.IsActive = &isActive
	return &this
}

// NewQuickbooksDesktopVendorsPostRequestWithDefaults instantiates a new QuickbooksDesktopVendorsPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQuickbooksDesktopVendorsPostRequestWithDefaults() *QuickbooksDesktopVendorsPostRequest {
	this := QuickbooksDesktopVendorsPostRequest{}
	var isActive bool = true
	this.IsActive = &isActive
	return &this
}

// GetName returns the Name field value
func (o *QuickbooksDesktopVendorsPostRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopVendorsPostRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *QuickbooksDesktopVendorsPostRequest) SetName(v string) {
	o.Name = v
}

// GetIsActive returns the IsActive field value if set, zero value otherwise.
func (o *QuickbooksDesktopVendorsPostRequest) GetIsActive() bool {
	if o == nil || IsNil(o.IsActive) {
		var ret bool
		return ret
	}
	return *o.IsActive
}

// GetIsActiveOk returns a tuple with the IsActive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopVendorsPostRequest) GetIsActiveOk() (*bool, bool) {
	if o == nil || IsNil(o.IsActive) {
		return nil, false
	}
	return o.IsActive, true
}

// HasIsActive returns a boolean if a field has been set.
func (o *QuickbooksDesktopVendorsPostRequest) HasIsActive() bool {
	if o != nil && !IsNil(o.IsActive) {
		return true
	}

	return false
}

// SetIsActive gets a reference to the given bool and assigns it to the IsActive field.
func (o *QuickbooksDesktopVendorsPostRequest) SetIsActive(v bool) {
	o.IsActive = &v
}

// GetClassId returns the ClassId field value if set, zero value otherwise.
func (o *QuickbooksDesktopVendorsPostRequest) GetClassId() string {
	if o == nil || IsNil(o.ClassId) {
		var ret string
		return ret
	}
	return *o.ClassId
}

// GetClassIdOk returns a tuple with the ClassId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopVendorsPostRequest) GetClassIdOk() (*string, bool) {
	if o == nil || IsNil(o.ClassId) {
		return nil, false
	}
	return o.ClassId, true
}

// HasClassId returns a boolean if a field has been set.
func (o *QuickbooksDesktopVendorsPostRequest) HasClassId() bool {
	if o != nil && !IsNil(o.ClassId) {
		return true
	}

	return false
}

// SetClassId gets a reference to the given string and assigns it to the ClassId field.
func (o *QuickbooksDesktopVendorsPostRequest) SetClassId(v string) {
	o.ClassId = &v
}

// GetCompanyName returns the CompanyName field value if set, zero value otherwise.
func (o *QuickbooksDesktopVendorsPostRequest) GetCompanyName() string {
	if o == nil || IsNil(o.CompanyName) {
		var ret string
		return ret
	}
	return *o.CompanyName
}

// GetCompanyNameOk returns a tuple with the CompanyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopVendorsPostRequest) GetCompanyNameOk() (*string, bool) {
	if o == nil || IsNil(o.CompanyName) {
		return nil, false
	}
	return o.CompanyName, true
}

// HasCompanyName returns a boolean if a field has been set.
func (o *QuickbooksDesktopVendorsPostRequest) HasCompanyName() bool {
	if o != nil && !IsNil(o.CompanyName) {
		return true
	}

	return false
}

// SetCompanyName gets a reference to the given string and assigns it to the CompanyName field.
func (o *QuickbooksDesktopVendorsPostRequest) SetCompanyName(v string) {
	o.CompanyName = &v
}

// GetSalutation returns the Salutation field value if set, zero value otherwise.
func (o *QuickbooksDesktopVendorsPostRequest) GetSalutation() string {
	if o == nil || IsNil(o.Salutation) {
		var ret string
		return ret
	}
	return *o.Salutation
}

// GetSalutationOk returns a tuple with the Salutation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopVendorsPostRequest) GetSalutationOk() (*string, bool) {
	if o == nil || IsNil(o.Salutation) {
		return nil, false
	}
	return o.Salutation, true
}

// HasSalutation returns a boolean if a field has been set.
func (o *QuickbooksDesktopVendorsPostRequest) HasSalutation() bool {
	if o != nil && !IsNil(o.Salutation) {
		return true
	}

	return false
}

// SetSalutation gets a reference to the given string and assigns it to the Salutation field.
func (o *QuickbooksDesktopVendorsPostRequest) SetSalutation(v string) {
	o.Salutation = &v
}

// GetFirstName returns the FirstName field value if set, zero value otherwise.
func (o *QuickbooksDesktopVendorsPostRequest) GetFirstName() string {
	if o == nil || IsNil(o.FirstName) {
		var ret string
		return ret
	}
	return *o.FirstName
}

// GetFirstNameOk returns a tuple with the FirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopVendorsPostRequest) GetFirstNameOk() (*string, bool) {
	if o == nil || IsNil(o.FirstName) {
		return nil, false
	}
	return o.FirstName, true
}

// HasFirstName returns a boolean if a field has been set.
func (o *QuickbooksDesktopVendorsPostRequest) HasFirstName() bool {
	if o != nil && !IsNil(o.FirstName) {
		return true
	}

	return false
}

// SetFirstName gets a reference to the given string and assigns it to the FirstName field.
func (o *QuickbooksDesktopVendorsPostRequest) SetFirstName(v string) {
	o.FirstName = &v
}

// GetMiddleName returns the MiddleName field value if set, zero value otherwise.
func (o *QuickbooksDesktopVendorsPostRequest) GetMiddleName() string {
	if o == nil || IsNil(o.MiddleName) {
		var ret string
		return ret
	}
	return *o.MiddleName
}

// GetMiddleNameOk returns a tuple with the MiddleName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopVendorsPostRequest) GetMiddleNameOk() (*string, bool) {
	if o == nil || IsNil(o.MiddleName) {
		return nil, false
	}
	return o.MiddleName, true
}

// HasMiddleName returns a boolean if a field has been set.
func (o *QuickbooksDesktopVendorsPostRequest) HasMiddleName() bool {
	if o != nil && !IsNil(o.MiddleName) {
		return true
	}

	return false
}

// SetMiddleName gets a reference to the given string and assigns it to the MiddleName field.
func (o *QuickbooksDesktopVendorsPostRequest) SetMiddleName(v string) {
	o.MiddleName = &v
}

// GetLastName returns the LastName field value if set, zero value otherwise.
func (o *QuickbooksDesktopVendorsPostRequest) GetLastName() string {
	if o == nil || IsNil(o.LastName) {
		var ret string
		return ret
	}
	return *o.LastName
}

// GetLastNameOk returns a tuple with the LastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopVendorsPostRequest) GetLastNameOk() (*string, bool) {
	if o == nil || IsNil(o.LastName) {
		return nil, false
	}
	return o.LastName, true
}

// HasLastName returns a boolean if a field has been set.
func (o *QuickbooksDesktopVendorsPostRequest) HasLastName() bool {
	if o != nil && !IsNil(o.LastName) {
		return true
	}

	return false
}

// SetLastName gets a reference to the given string and assigns it to the LastName field.
func (o *QuickbooksDesktopVendorsPostRequest) SetLastName(v string) {
	o.LastName = &v
}

// GetJobTitle returns the JobTitle field value if set, zero value otherwise.
func (o *QuickbooksDesktopVendorsPostRequest) GetJobTitle() string {
	if o == nil || IsNil(o.JobTitle) {
		var ret string
		return ret
	}
	return *o.JobTitle
}

// GetJobTitleOk returns a tuple with the JobTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopVendorsPostRequest) GetJobTitleOk() (*string, bool) {
	if o == nil || IsNil(o.JobTitle) {
		return nil, false
	}
	return o.JobTitle, true
}

// HasJobTitle returns a boolean if a field has been set.
func (o *QuickbooksDesktopVendorsPostRequest) HasJobTitle() bool {
	if o != nil && !IsNil(o.JobTitle) {
		return true
	}

	return false
}

// SetJobTitle gets a reference to the given string and assigns it to the JobTitle field.
func (o *QuickbooksDesktopVendorsPostRequest) SetJobTitle(v string) {
	o.JobTitle = &v
}

// GetBillingAddress returns the BillingAddress field value if set, zero value otherwise.
func (o *QuickbooksDesktopVendorsPostRequest) GetBillingAddress() QuickbooksDesktopVendorsPostRequestBillingAddress {
	if o == nil || IsNil(o.BillingAddress) {
		var ret QuickbooksDesktopVendorsPostRequestBillingAddress
		return ret
	}
	return *o.BillingAddress
}

// GetBillingAddressOk returns a tuple with the BillingAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopVendorsPostRequest) GetBillingAddressOk() (*QuickbooksDesktopVendorsPostRequestBillingAddress, bool) {
	if o == nil || IsNil(o.BillingAddress) {
		return nil, false
	}
	return o.BillingAddress, true
}

// HasBillingAddress returns a boolean if a field has been set.
func (o *QuickbooksDesktopVendorsPostRequest) HasBillingAddress() bool {
	if o != nil && !IsNil(o.BillingAddress) {
		return true
	}

	return false
}

// SetBillingAddress gets a reference to the given QuickbooksDesktopVendorsPostRequestBillingAddress and assigns it to the BillingAddress field.
func (o *QuickbooksDesktopVendorsPostRequest) SetBillingAddress(v QuickbooksDesktopVendorsPostRequestBillingAddress) {
	o.BillingAddress = &v
}

// GetShippingAddress returns the ShippingAddress field value if set, zero value otherwise.
func (o *QuickbooksDesktopVendorsPostRequest) GetShippingAddress() QuickbooksDesktopVendorsPostRequestShippingAddress {
	if o == nil || IsNil(o.ShippingAddress) {
		var ret QuickbooksDesktopVendorsPostRequestShippingAddress
		return ret
	}
	return *o.ShippingAddress
}

// GetShippingAddressOk returns a tuple with the ShippingAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopVendorsPostRequest) GetShippingAddressOk() (*QuickbooksDesktopVendorsPostRequestShippingAddress, bool) {
	if o == nil || IsNil(o.ShippingAddress) {
		return nil, false
	}
	return o.ShippingAddress, true
}

// HasShippingAddress returns a boolean if a field has been set.
func (o *QuickbooksDesktopVendorsPostRequest) HasShippingAddress() bool {
	if o != nil && !IsNil(o.ShippingAddress) {
		return true
	}

	return false
}

// SetShippingAddress gets a reference to the given QuickbooksDesktopVendorsPostRequestShippingAddress and assigns it to the ShippingAddress field.
func (o *QuickbooksDesktopVendorsPostRequest) SetShippingAddress(v QuickbooksDesktopVendorsPostRequestShippingAddress) {
	o.ShippingAddress = &v
}

// GetPhone returns the Phone field value if set, zero value otherwise.
func (o *QuickbooksDesktopVendorsPostRequest) GetPhone() string {
	if o == nil || IsNil(o.Phone) {
		var ret string
		return ret
	}
	return *o.Phone
}

// GetPhoneOk returns a tuple with the Phone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopVendorsPostRequest) GetPhoneOk() (*string, bool) {
	if o == nil || IsNil(o.Phone) {
		return nil, false
	}
	return o.Phone, true
}

// HasPhone returns a boolean if a field has been set.
func (o *QuickbooksDesktopVendorsPostRequest) HasPhone() bool {
	if o != nil && !IsNil(o.Phone) {
		return true
	}

	return false
}

// SetPhone gets a reference to the given string and assigns it to the Phone field.
func (o *QuickbooksDesktopVendorsPostRequest) SetPhone(v string) {
	o.Phone = &v
}

// GetAlternatePhone returns the AlternatePhone field value if set, zero value otherwise.
func (o *QuickbooksDesktopVendorsPostRequest) GetAlternatePhone() string {
	if o == nil || IsNil(o.AlternatePhone) {
		var ret string
		return ret
	}
	return *o.AlternatePhone
}

// GetAlternatePhoneOk returns a tuple with the AlternatePhone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopVendorsPostRequest) GetAlternatePhoneOk() (*string, bool) {
	if o == nil || IsNil(o.AlternatePhone) {
		return nil, false
	}
	return o.AlternatePhone, true
}

// HasAlternatePhone returns a boolean if a field has been set.
func (o *QuickbooksDesktopVendorsPostRequest) HasAlternatePhone() bool {
	if o != nil && !IsNil(o.AlternatePhone) {
		return true
	}

	return false
}

// SetAlternatePhone gets a reference to the given string and assigns it to the AlternatePhone field.
func (o *QuickbooksDesktopVendorsPostRequest) SetAlternatePhone(v string) {
	o.AlternatePhone = &v
}

// GetFax returns the Fax field value if set, zero value otherwise.
func (o *QuickbooksDesktopVendorsPostRequest) GetFax() string {
	if o == nil || IsNil(o.Fax) {
		var ret string
		return ret
	}
	return *o.Fax
}

// GetFaxOk returns a tuple with the Fax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopVendorsPostRequest) GetFaxOk() (*string, bool) {
	if o == nil || IsNil(o.Fax) {
		return nil, false
	}
	return o.Fax, true
}

// HasFax returns a boolean if a field has been set.
func (o *QuickbooksDesktopVendorsPostRequest) HasFax() bool {
	if o != nil && !IsNil(o.Fax) {
		return true
	}

	return false
}

// SetFax gets a reference to the given string and assigns it to the Fax field.
func (o *QuickbooksDesktopVendorsPostRequest) SetFax(v string) {
	o.Fax = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *QuickbooksDesktopVendorsPostRequest) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopVendorsPostRequest) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *QuickbooksDesktopVendorsPostRequest) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *QuickbooksDesktopVendorsPostRequest) SetEmail(v string) {
	o.Email = &v
}

// GetCcEmail returns the CcEmail field value if set, zero value otherwise.
func (o *QuickbooksDesktopVendorsPostRequest) GetCcEmail() string {
	if o == nil || IsNil(o.CcEmail) {
		var ret string
		return ret
	}
	return *o.CcEmail
}

// GetCcEmailOk returns a tuple with the CcEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopVendorsPostRequest) GetCcEmailOk() (*string, bool) {
	if o == nil || IsNil(o.CcEmail) {
		return nil, false
	}
	return o.CcEmail, true
}

// HasCcEmail returns a boolean if a field has been set.
func (o *QuickbooksDesktopVendorsPostRequest) HasCcEmail() bool {
	if o != nil && !IsNil(o.CcEmail) {
		return true
	}

	return false
}

// SetCcEmail gets a reference to the given string and assigns it to the CcEmail field.
func (o *QuickbooksDesktopVendorsPostRequest) SetCcEmail(v string) {
	o.CcEmail = &v
}

// GetContact returns the Contact field value if set, zero value otherwise.
func (o *QuickbooksDesktopVendorsPostRequest) GetContact() string {
	if o == nil || IsNil(o.Contact) {
		var ret string
		return ret
	}
	return *o.Contact
}

// GetContactOk returns a tuple with the Contact field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopVendorsPostRequest) GetContactOk() (*string, bool) {
	if o == nil || IsNil(o.Contact) {
		return nil, false
	}
	return o.Contact, true
}

// HasContact returns a boolean if a field has been set.
func (o *QuickbooksDesktopVendorsPostRequest) HasContact() bool {
	if o != nil && !IsNil(o.Contact) {
		return true
	}

	return false
}

// SetContact gets a reference to the given string and assigns it to the Contact field.
func (o *QuickbooksDesktopVendorsPostRequest) SetContact(v string) {
	o.Contact = &v
}

// GetAlternateContact returns the AlternateContact field value if set, zero value otherwise.
func (o *QuickbooksDesktopVendorsPostRequest) GetAlternateContact() string {
	if o == nil || IsNil(o.AlternateContact) {
		var ret string
		return ret
	}
	return *o.AlternateContact
}

// GetAlternateContactOk returns a tuple with the AlternateContact field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopVendorsPostRequest) GetAlternateContactOk() (*string, bool) {
	if o == nil || IsNil(o.AlternateContact) {
		return nil, false
	}
	return o.AlternateContact, true
}

// HasAlternateContact returns a boolean if a field has been set.
func (o *QuickbooksDesktopVendorsPostRequest) HasAlternateContact() bool {
	if o != nil && !IsNil(o.AlternateContact) {
		return true
	}

	return false
}

// SetAlternateContact gets a reference to the given string and assigns it to the AlternateContact field.
func (o *QuickbooksDesktopVendorsPostRequest) SetAlternateContact(v string) {
	o.AlternateContact = &v
}

// GetCustomContactFields returns the CustomContactFields field value if set, zero value otherwise.
func (o *QuickbooksDesktopVendorsPostRequest) GetCustomContactFields() []QuickbooksDesktopCustomersPostRequestCustomContactFieldsInner {
	if o == nil || IsNil(o.CustomContactFields) {
		var ret []QuickbooksDesktopCustomersPostRequestCustomContactFieldsInner
		return ret
	}
	return o.CustomContactFields
}

// GetCustomContactFieldsOk returns a tuple with the CustomContactFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopVendorsPostRequest) GetCustomContactFieldsOk() ([]QuickbooksDesktopCustomersPostRequestCustomContactFieldsInner, bool) {
	if o == nil || IsNil(o.CustomContactFields) {
		return nil, false
	}
	return o.CustomContactFields, true
}

// HasCustomContactFields returns a boolean if a field has been set.
func (o *QuickbooksDesktopVendorsPostRequest) HasCustomContactFields() bool {
	if o != nil && !IsNil(o.CustomContactFields) {
		return true
	}

	return false
}

// SetCustomContactFields gets a reference to the given []QuickbooksDesktopCustomersPostRequestCustomContactFieldsInner and assigns it to the CustomContactFields field.
func (o *QuickbooksDesktopVendorsPostRequest) SetCustomContactFields(v []QuickbooksDesktopCustomersPostRequestCustomContactFieldsInner) {
	o.CustomContactFields = v
}

// GetAdditionalContacts returns the AdditionalContacts field value if set, zero value otherwise.
func (o *QuickbooksDesktopVendorsPostRequest) GetAdditionalContacts() []QuickbooksDesktopCustomersPostRequestAdditionalContactsInner {
	if o == nil || IsNil(o.AdditionalContacts) {
		var ret []QuickbooksDesktopCustomersPostRequestAdditionalContactsInner
		return ret
	}
	return o.AdditionalContacts
}

// GetAdditionalContactsOk returns a tuple with the AdditionalContacts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopVendorsPostRequest) GetAdditionalContactsOk() ([]QuickbooksDesktopCustomersPostRequestAdditionalContactsInner, bool) {
	if o == nil || IsNil(o.AdditionalContacts) {
		return nil, false
	}
	return o.AdditionalContacts, true
}

// HasAdditionalContacts returns a boolean if a field has been set.
func (o *QuickbooksDesktopVendorsPostRequest) HasAdditionalContacts() bool {
	if o != nil && !IsNil(o.AdditionalContacts) {
		return true
	}

	return false
}

// SetAdditionalContacts gets a reference to the given []QuickbooksDesktopCustomersPostRequestAdditionalContactsInner and assigns it to the AdditionalContacts field.
func (o *QuickbooksDesktopVendorsPostRequest) SetAdditionalContacts(v []QuickbooksDesktopCustomersPostRequestAdditionalContactsInner) {
	o.AdditionalContacts = v
}

// GetNameOnCheck returns the NameOnCheck field value if set, zero value otherwise.
func (o *QuickbooksDesktopVendorsPostRequest) GetNameOnCheck() string {
	if o == nil || IsNil(o.NameOnCheck) {
		var ret string
		return ret
	}
	return *o.NameOnCheck
}

// GetNameOnCheckOk returns a tuple with the NameOnCheck field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopVendorsPostRequest) GetNameOnCheckOk() (*string, bool) {
	if o == nil || IsNil(o.NameOnCheck) {
		return nil, false
	}
	return o.NameOnCheck, true
}

// HasNameOnCheck returns a boolean if a field has been set.
func (o *QuickbooksDesktopVendorsPostRequest) HasNameOnCheck() bool {
	if o != nil && !IsNil(o.NameOnCheck) {
		return true
	}

	return false
}

// SetNameOnCheck gets a reference to the given string and assigns it to the NameOnCheck field.
func (o *QuickbooksDesktopVendorsPostRequest) SetNameOnCheck(v string) {
	o.NameOnCheck = &v
}

// GetAccountNumber returns the AccountNumber field value if set, zero value otherwise.
func (o *QuickbooksDesktopVendorsPostRequest) GetAccountNumber() string {
	if o == nil || IsNil(o.AccountNumber) {
		var ret string
		return ret
	}
	return *o.AccountNumber
}

// GetAccountNumberOk returns a tuple with the AccountNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopVendorsPostRequest) GetAccountNumberOk() (*string, bool) {
	if o == nil || IsNil(o.AccountNumber) {
		return nil, false
	}
	return o.AccountNumber, true
}

// HasAccountNumber returns a boolean if a field has been set.
func (o *QuickbooksDesktopVendorsPostRequest) HasAccountNumber() bool {
	if o != nil && !IsNil(o.AccountNumber) {
		return true
	}

	return false
}

// SetAccountNumber gets a reference to the given string and assigns it to the AccountNumber field.
func (o *QuickbooksDesktopVendorsPostRequest) SetAccountNumber(v string) {
	o.AccountNumber = &v
}

// GetNote returns the Note field value if set, zero value otherwise.
func (o *QuickbooksDesktopVendorsPostRequest) GetNote() string {
	if o == nil || IsNil(o.Note) {
		var ret string
		return ret
	}
	return *o.Note
}

// GetNoteOk returns a tuple with the Note field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopVendorsPostRequest) GetNoteOk() (*string, bool) {
	if o == nil || IsNil(o.Note) {
		return nil, false
	}
	return o.Note, true
}

// HasNote returns a boolean if a field has been set.
func (o *QuickbooksDesktopVendorsPostRequest) HasNote() bool {
	if o != nil && !IsNil(o.Note) {
		return true
	}

	return false
}

// SetNote gets a reference to the given string and assigns it to the Note field.
func (o *QuickbooksDesktopVendorsPostRequest) SetNote(v string) {
	o.Note = &v
}

// GetAdditionalNotes returns the AdditionalNotes field value if set, zero value otherwise.
func (o *QuickbooksDesktopVendorsPostRequest) GetAdditionalNotes() []QuickbooksDesktopCustomersPostRequestAdditionalNotesInner {
	if o == nil || IsNil(o.AdditionalNotes) {
		var ret []QuickbooksDesktopCustomersPostRequestAdditionalNotesInner
		return ret
	}
	return o.AdditionalNotes
}

// GetAdditionalNotesOk returns a tuple with the AdditionalNotes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopVendorsPostRequest) GetAdditionalNotesOk() ([]QuickbooksDesktopCustomersPostRequestAdditionalNotesInner, bool) {
	if o == nil || IsNil(o.AdditionalNotes) {
		return nil, false
	}
	return o.AdditionalNotes, true
}

// HasAdditionalNotes returns a boolean if a field has been set.
func (o *QuickbooksDesktopVendorsPostRequest) HasAdditionalNotes() bool {
	if o != nil && !IsNil(o.AdditionalNotes) {
		return true
	}

	return false
}

// SetAdditionalNotes gets a reference to the given []QuickbooksDesktopCustomersPostRequestAdditionalNotesInner and assigns it to the AdditionalNotes field.
func (o *QuickbooksDesktopVendorsPostRequest) SetAdditionalNotes(v []QuickbooksDesktopCustomersPostRequestAdditionalNotesInner) {
	o.AdditionalNotes = v
}

// GetVendorTypeId returns the VendorTypeId field value if set, zero value otherwise.
func (o *QuickbooksDesktopVendorsPostRequest) GetVendorTypeId() string {
	if o == nil || IsNil(o.VendorTypeId) {
		var ret string
		return ret
	}
	return *o.VendorTypeId
}

// GetVendorTypeIdOk returns a tuple with the VendorTypeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopVendorsPostRequest) GetVendorTypeIdOk() (*string, bool) {
	if o == nil || IsNil(o.VendorTypeId) {
		return nil, false
	}
	return o.VendorTypeId, true
}

// HasVendorTypeId returns a boolean if a field has been set.
func (o *QuickbooksDesktopVendorsPostRequest) HasVendorTypeId() bool {
	if o != nil && !IsNil(o.VendorTypeId) {
		return true
	}

	return false
}

// SetVendorTypeId gets a reference to the given string and assigns it to the VendorTypeId field.
func (o *QuickbooksDesktopVendorsPostRequest) SetVendorTypeId(v string) {
	o.VendorTypeId = &v
}

// GetTermsId returns the TermsId field value if set, zero value otherwise.
func (o *QuickbooksDesktopVendorsPostRequest) GetTermsId() string {
	if o == nil || IsNil(o.TermsId) {
		var ret string
		return ret
	}
	return *o.TermsId
}

// GetTermsIdOk returns a tuple with the TermsId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopVendorsPostRequest) GetTermsIdOk() (*string, bool) {
	if o == nil || IsNil(o.TermsId) {
		return nil, false
	}
	return o.TermsId, true
}

// HasTermsId returns a boolean if a field has been set.
func (o *QuickbooksDesktopVendorsPostRequest) HasTermsId() bool {
	if o != nil && !IsNil(o.TermsId) {
		return true
	}

	return false
}

// SetTermsId gets a reference to the given string and assigns it to the TermsId field.
func (o *QuickbooksDesktopVendorsPostRequest) SetTermsId(v string) {
	o.TermsId = &v
}

// GetCreditLimit returns the CreditLimit field value if set, zero value otherwise.
func (o *QuickbooksDesktopVendorsPostRequest) GetCreditLimit() string {
	if o == nil || IsNil(o.CreditLimit) {
		var ret string
		return ret
	}
	return *o.CreditLimit
}

// GetCreditLimitOk returns a tuple with the CreditLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopVendorsPostRequest) GetCreditLimitOk() (*string, bool) {
	if o == nil || IsNil(o.CreditLimit) {
		return nil, false
	}
	return o.CreditLimit, true
}

// HasCreditLimit returns a boolean if a field has been set.
func (o *QuickbooksDesktopVendorsPostRequest) HasCreditLimit() bool {
	if o != nil && !IsNil(o.CreditLimit) {
		return true
	}

	return false
}

// SetCreditLimit gets a reference to the given string and assigns it to the CreditLimit field.
func (o *QuickbooksDesktopVendorsPostRequest) SetCreditLimit(v string) {
	o.CreditLimit = &v
}

// GetTaxIdentificationNumber returns the TaxIdentificationNumber field value if set, zero value otherwise.
func (o *QuickbooksDesktopVendorsPostRequest) GetTaxIdentificationNumber() string {
	if o == nil || IsNil(o.TaxIdentificationNumber) {
		var ret string
		return ret
	}
	return *o.TaxIdentificationNumber
}

// GetTaxIdentificationNumberOk returns a tuple with the TaxIdentificationNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopVendorsPostRequest) GetTaxIdentificationNumberOk() (*string, bool) {
	if o == nil || IsNil(o.TaxIdentificationNumber) {
		return nil, false
	}
	return o.TaxIdentificationNumber, true
}

// HasTaxIdentificationNumber returns a boolean if a field has been set.
func (o *QuickbooksDesktopVendorsPostRequest) HasTaxIdentificationNumber() bool {
	if o != nil && !IsNil(o.TaxIdentificationNumber) {
		return true
	}

	return false
}

// SetTaxIdentificationNumber gets a reference to the given string and assigns it to the TaxIdentificationNumber field.
func (o *QuickbooksDesktopVendorsPostRequest) SetTaxIdentificationNumber(v string) {
	o.TaxIdentificationNumber = &v
}

// GetIsEligibleFor1099 returns the IsEligibleFor1099 field value if set, zero value otherwise.
func (o *QuickbooksDesktopVendorsPostRequest) GetIsEligibleFor1099() bool {
	if o == nil || IsNil(o.IsEligibleFor1099) {
		var ret bool
		return ret
	}
	return *o.IsEligibleFor1099
}

// GetIsEligibleFor1099Ok returns a tuple with the IsEligibleFor1099 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopVendorsPostRequest) GetIsEligibleFor1099Ok() (*bool, bool) {
	if o == nil || IsNil(o.IsEligibleFor1099) {
		return nil, false
	}
	return o.IsEligibleFor1099, true
}

// HasIsEligibleFor1099 returns a boolean if a field has been set.
func (o *QuickbooksDesktopVendorsPostRequest) HasIsEligibleFor1099() bool {
	if o != nil && !IsNil(o.IsEligibleFor1099) {
		return true
	}

	return false
}

// SetIsEligibleFor1099 gets a reference to the given bool and assigns it to the IsEligibleFor1099 field.
func (o *QuickbooksDesktopVendorsPostRequest) SetIsEligibleFor1099(v bool) {
	o.IsEligibleFor1099 = &v
}

// GetOpeningBalance returns the OpeningBalance field value if set, zero value otherwise.
func (o *QuickbooksDesktopVendorsPostRequest) GetOpeningBalance() string {
	if o == nil || IsNil(o.OpeningBalance) {
		var ret string
		return ret
	}
	return *o.OpeningBalance
}

// GetOpeningBalanceOk returns a tuple with the OpeningBalance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopVendorsPostRequest) GetOpeningBalanceOk() (*string, bool) {
	if o == nil || IsNil(o.OpeningBalance) {
		return nil, false
	}
	return o.OpeningBalance, true
}

// HasOpeningBalance returns a boolean if a field has been set.
func (o *QuickbooksDesktopVendorsPostRequest) HasOpeningBalance() bool {
	if o != nil && !IsNil(o.OpeningBalance) {
		return true
	}

	return false
}

// SetOpeningBalance gets a reference to the given string and assigns it to the OpeningBalance field.
func (o *QuickbooksDesktopVendorsPostRequest) SetOpeningBalance(v string) {
	o.OpeningBalance = &v
}

// GetOpeningBalanceDate returns the OpeningBalanceDate field value if set, zero value otherwise.
func (o *QuickbooksDesktopVendorsPostRequest) GetOpeningBalanceDate() string {
	if o == nil || IsNil(o.OpeningBalanceDate) {
		var ret string
		return ret
	}
	return *o.OpeningBalanceDate
}

// GetOpeningBalanceDateOk returns a tuple with the OpeningBalanceDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopVendorsPostRequest) GetOpeningBalanceDateOk() (*string, bool) {
	if o == nil || IsNil(o.OpeningBalanceDate) {
		return nil, false
	}
	return o.OpeningBalanceDate, true
}

// HasOpeningBalanceDate returns a boolean if a field has been set.
func (o *QuickbooksDesktopVendorsPostRequest) HasOpeningBalanceDate() bool {
	if o != nil && !IsNil(o.OpeningBalanceDate) {
		return true
	}

	return false
}

// SetOpeningBalanceDate gets a reference to the given string and assigns it to the OpeningBalanceDate field.
func (o *QuickbooksDesktopVendorsPostRequest) SetOpeningBalanceDate(v string) {
	o.OpeningBalanceDate = &v
}

// GetBillingRateId returns the BillingRateId field value if set, zero value otherwise.
func (o *QuickbooksDesktopVendorsPostRequest) GetBillingRateId() string {
	if o == nil || IsNil(o.BillingRateId) {
		var ret string
		return ret
	}
	return *o.BillingRateId
}

// GetBillingRateIdOk returns a tuple with the BillingRateId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopVendorsPostRequest) GetBillingRateIdOk() (*string, bool) {
	if o == nil || IsNil(o.BillingRateId) {
		return nil, false
	}
	return o.BillingRateId, true
}

// HasBillingRateId returns a boolean if a field has been set.
func (o *QuickbooksDesktopVendorsPostRequest) HasBillingRateId() bool {
	if o != nil && !IsNil(o.BillingRateId) {
		return true
	}

	return false
}

// SetBillingRateId gets a reference to the given string and assigns it to the BillingRateId field.
func (o *QuickbooksDesktopVendorsPostRequest) SetBillingRateId(v string) {
	o.BillingRateId = &v
}

// GetExternalId returns the ExternalId field value if set, zero value otherwise.
func (o *QuickbooksDesktopVendorsPostRequest) GetExternalId() string {
	if o == nil || IsNil(o.ExternalId) {
		var ret string
		return ret
	}
	return *o.ExternalId
}

// GetExternalIdOk returns a tuple with the ExternalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopVendorsPostRequest) GetExternalIdOk() (*string, bool) {
	if o == nil || IsNil(o.ExternalId) {
		return nil, false
	}
	return o.ExternalId, true
}

// HasExternalId returns a boolean if a field has been set.
func (o *QuickbooksDesktopVendorsPostRequest) HasExternalId() bool {
	if o != nil && !IsNil(o.ExternalId) {
		return true
	}

	return false
}

// SetExternalId gets a reference to the given string and assigns it to the ExternalId field.
func (o *QuickbooksDesktopVendorsPostRequest) SetExternalId(v string) {
	o.ExternalId = &v
}

// GetSalesTaxCodeId returns the SalesTaxCodeId field value if set, zero value otherwise.
func (o *QuickbooksDesktopVendorsPostRequest) GetSalesTaxCodeId() string {
	if o == nil || IsNil(o.SalesTaxCodeId) {
		var ret string
		return ret
	}
	return *o.SalesTaxCodeId
}

// GetSalesTaxCodeIdOk returns a tuple with the SalesTaxCodeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopVendorsPostRequest) GetSalesTaxCodeIdOk() (*string, bool) {
	if o == nil || IsNil(o.SalesTaxCodeId) {
		return nil, false
	}
	return o.SalesTaxCodeId, true
}

// HasSalesTaxCodeId returns a boolean if a field has been set.
func (o *QuickbooksDesktopVendorsPostRequest) HasSalesTaxCodeId() bool {
	if o != nil && !IsNil(o.SalesTaxCodeId) {
		return true
	}

	return false
}

// SetSalesTaxCodeId gets a reference to the given string and assigns it to the SalesTaxCodeId field.
func (o *QuickbooksDesktopVendorsPostRequest) SetSalesTaxCodeId(v string) {
	o.SalesTaxCodeId = &v
}

// GetSalesTaxCountry returns the SalesTaxCountry field value if set, zero value otherwise.
func (o *QuickbooksDesktopVendorsPostRequest) GetSalesTaxCountry() string {
	if o == nil || IsNil(o.SalesTaxCountry) {
		var ret string
		return ret
	}
	return *o.SalesTaxCountry
}

// GetSalesTaxCountryOk returns a tuple with the SalesTaxCountry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopVendorsPostRequest) GetSalesTaxCountryOk() (*string, bool) {
	if o == nil || IsNil(o.SalesTaxCountry) {
		return nil, false
	}
	return o.SalesTaxCountry, true
}

// HasSalesTaxCountry returns a boolean if a field has been set.
func (o *QuickbooksDesktopVendorsPostRequest) HasSalesTaxCountry() bool {
	if o != nil && !IsNil(o.SalesTaxCountry) {
		return true
	}

	return false
}

// SetSalesTaxCountry gets a reference to the given string and assigns it to the SalesTaxCountry field.
func (o *QuickbooksDesktopVendorsPostRequest) SetSalesTaxCountry(v string) {
	o.SalesTaxCountry = &v
}

// GetIsSalesTaxAgency returns the IsSalesTaxAgency field value if set, zero value otherwise.
func (o *QuickbooksDesktopVendorsPostRequest) GetIsSalesTaxAgency() bool {
	if o == nil || IsNil(o.IsSalesTaxAgency) {
		var ret bool
		return ret
	}
	return *o.IsSalesTaxAgency
}

// GetIsSalesTaxAgencyOk returns a tuple with the IsSalesTaxAgency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopVendorsPostRequest) GetIsSalesTaxAgencyOk() (*bool, bool) {
	if o == nil || IsNil(o.IsSalesTaxAgency) {
		return nil, false
	}
	return o.IsSalesTaxAgency, true
}

// HasIsSalesTaxAgency returns a boolean if a field has been set.
func (o *QuickbooksDesktopVendorsPostRequest) HasIsSalesTaxAgency() bool {
	if o != nil && !IsNil(o.IsSalesTaxAgency) {
		return true
	}

	return false
}

// SetIsSalesTaxAgency gets a reference to the given bool and assigns it to the IsSalesTaxAgency field.
func (o *QuickbooksDesktopVendorsPostRequest) SetIsSalesTaxAgency(v bool) {
	o.IsSalesTaxAgency = &v
}

// GetSalesTaxReturnId returns the SalesTaxReturnId field value if set, zero value otherwise.
func (o *QuickbooksDesktopVendorsPostRequest) GetSalesTaxReturnId() string {
	if o == nil || IsNil(o.SalesTaxReturnId) {
		var ret string
		return ret
	}
	return *o.SalesTaxReturnId
}

// GetSalesTaxReturnIdOk returns a tuple with the SalesTaxReturnId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopVendorsPostRequest) GetSalesTaxReturnIdOk() (*string, bool) {
	if o == nil || IsNil(o.SalesTaxReturnId) {
		return nil, false
	}
	return o.SalesTaxReturnId, true
}

// HasSalesTaxReturnId returns a boolean if a field has been set.
func (o *QuickbooksDesktopVendorsPostRequest) HasSalesTaxReturnId() bool {
	if o != nil && !IsNil(o.SalesTaxReturnId) {
		return true
	}

	return false
}

// SetSalesTaxReturnId gets a reference to the given string and assigns it to the SalesTaxReturnId field.
func (o *QuickbooksDesktopVendorsPostRequest) SetSalesTaxReturnId(v string) {
	o.SalesTaxReturnId = &v
}

// GetTaxRegistrationNumber returns the TaxRegistrationNumber field value if set, zero value otherwise.
func (o *QuickbooksDesktopVendorsPostRequest) GetTaxRegistrationNumber() string {
	if o == nil || IsNil(o.TaxRegistrationNumber) {
		var ret string
		return ret
	}
	return *o.TaxRegistrationNumber
}

// GetTaxRegistrationNumberOk returns a tuple with the TaxRegistrationNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopVendorsPostRequest) GetTaxRegistrationNumberOk() (*string, bool) {
	if o == nil || IsNil(o.TaxRegistrationNumber) {
		return nil, false
	}
	return o.TaxRegistrationNumber, true
}

// HasTaxRegistrationNumber returns a boolean if a field has been set.
func (o *QuickbooksDesktopVendorsPostRequest) HasTaxRegistrationNumber() bool {
	if o != nil && !IsNil(o.TaxRegistrationNumber) {
		return true
	}

	return false
}

// SetTaxRegistrationNumber gets a reference to the given string and assigns it to the TaxRegistrationNumber field.
func (o *QuickbooksDesktopVendorsPostRequest) SetTaxRegistrationNumber(v string) {
	o.TaxRegistrationNumber = &v
}

// GetReportingPeriod returns the ReportingPeriod field value if set, zero value otherwise.
func (o *QuickbooksDesktopVendorsPostRequest) GetReportingPeriod() string {
	if o == nil || IsNil(o.ReportingPeriod) {
		var ret string
		return ret
	}
	return *o.ReportingPeriod
}

// GetReportingPeriodOk returns a tuple with the ReportingPeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopVendorsPostRequest) GetReportingPeriodOk() (*string, bool) {
	if o == nil || IsNil(o.ReportingPeriod) {
		return nil, false
	}
	return o.ReportingPeriod, true
}

// HasReportingPeriod returns a boolean if a field has been set.
func (o *QuickbooksDesktopVendorsPostRequest) HasReportingPeriod() bool {
	if o != nil && !IsNil(o.ReportingPeriod) {
		return true
	}

	return false
}

// SetReportingPeriod gets a reference to the given string and assigns it to the ReportingPeriod field.
func (o *QuickbooksDesktopVendorsPostRequest) SetReportingPeriod(v string) {
	o.ReportingPeriod = &v
}

// GetIsTrackingPurchaseTax returns the IsTrackingPurchaseTax field value if set, zero value otherwise.
func (o *QuickbooksDesktopVendorsPostRequest) GetIsTrackingPurchaseTax() bool {
	if o == nil || IsNil(o.IsTrackingPurchaseTax) {
		var ret bool
		return ret
	}
	return *o.IsTrackingPurchaseTax
}

// GetIsTrackingPurchaseTaxOk returns a tuple with the IsTrackingPurchaseTax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopVendorsPostRequest) GetIsTrackingPurchaseTaxOk() (*bool, bool) {
	if o == nil || IsNil(o.IsTrackingPurchaseTax) {
		return nil, false
	}
	return o.IsTrackingPurchaseTax, true
}

// HasIsTrackingPurchaseTax returns a boolean if a field has been set.
func (o *QuickbooksDesktopVendorsPostRequest) HasIsTrackingPurchaseTax() bool {
	if o != nil && !IsNil(o.IsTrackingPurchaseTax) {
		return true
	}

	return false
}

// SetIsTrackingPurchaseTax gets a reference to the given bool and assigns it to the IsTrackingPurchaseTax field.
func (o *QuickbooksDesktopVendorsPostRequest) SetIsTrackingPurchaseTax(v bool) {
	o.IsTrackingPurchaseTax = &v
}

// GetPurchaseTaxAccountId returns the PurchaseTaxAccountId field value if set, zero value otherwise.
func (o *QuickbooksDesktopVendorsPostRequest) GetPurchaseTaxAccountId() string {
	if o == nil || IsNil(o.PurchaseTaxAccountId) {
		var ret string
		return ret
	}
	return *o.PurchaseTaxAccountId
}

// GetPurchaseTaxAccountIdOk returns a tuple with the PurchaseTaxAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopVendorsPostRequest) GetPurchaseTaxAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.PurchaseTaxAccountId) {
		return nil, false
	}
	return o.PurchaseTaxAccountId, true
}

// HasPurchaseTaxAccountId returns a boolean if a field has been set.
func (o *QuickbooksDesktopVendorsPostRequest) HasPurchaseTaxAccountId() bool {
	if o != nil && !IsNil(o.PurchaseTaxAccountId) {
		return true
	}

	return false
}

// SetPurchaseTaxAccountId gets a reference to the given string and assigns it to the PurchaseTaxAccountId field.
func (o *QuickbooksDesktopVendorsPostRequest) SetPurchaseTaxAccountId(v string) {
	o.PurchaseTaxAccountId = &v
}

// GetIsTrackingSalesTax returns the IsTrackingSalesTax field value if set, zero value otherwise.
func (o *QuickbooksDesktopVendorsPostRequest) GetIsTrackingSalesTax() bool {
	if o == nil || IsNil(o.IsTrackingSalesTax) {
		var ret bool
		return ret
	}
	return *o.IsTrackingSalesTax
}

// GetIsTrackingSalesTaxOk returns a tuple with the IsTrackingSalesTax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopVendorsPostRequest) GetIsTrackingSalesTaxOk() (*bool, bool) {
	if o == nil || IsNil(o.IsTrackingSalesTax) {
		return nil, false
	}
	return o.IsTrackingSalesTax, true
}

// HasIsTrackingSalesTax returns a boolean if a field has been set.
func (o *QuickbooksDesktopVendorsPostRequest) HasIsTrackingSalesTax() bool {
	if o != nil && !IsNil(o.IsTrackingSalesTax) {
		return true
	}

	return false
}

// SetIsTrackingSalesTax gets a reference to the given bool and assigns it to the IsTrackingSalesTax field.
func (o *QuickbooksDesktopVendorsPostRequest) SetIsTrackingSalesTax(v bool) {
	o.IsTrackingSalesTax = &v
}

// GetSalesTaxAccountId returns the SalesTaxAccountId field value if set, zero value otherwise.
func (o *QuickbooksDesktopVendorsPostRequest) GetSalesTaxAccountId() string {
	if o == nil || IsNil(o.SalesTaxAccountId) {
		var ret string
		return ret
	}
	return *o.SalesTaxAccountId
}

// GetSalesTaxAccountIdOk returns a tuple with the SalesTaxAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopVendorsPostRequest) GetSalesTaxAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.SalesTaxAccountId) {
		return nil, false
	}
	return o.SalesTaxAccountId, true
}

// HasSalesTaxAccountId returns a boolean if a field has been set.
func (o *QuickbooksDesktopVendorsPostRequest) HasSalesTaxAccountId() bool {
	if o != nil && !IsNil(o.SalesTaxAccountId) {
		return true
	}

	return false
}

// SetSalesTaxAccountId gets a reference to the given string and assigns it to the SalesTaxAccountId field.
func (o *QuickbooksDesktopVendorsPostRequest) SetSalesTaxAccountId(v string) {
	o.SalesTaxAccountId = &v
}

// GetIsCompoundingTax returns the IsCompoundingTax field value if set, zero value otherwise.
func (o *QuickbooksDesktopVendorsPostRequest) GetIsCompoundingTax() bool {
	if o == nil || IsNil(o.IsCompoundingTax) {
		var ret bool
		return ret
	}
	return *o.IsCompoundingTax
}

// GetIsCompoundingTaxOk returns a tuple with the IsCompoundingTax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopVendorsPostRequest) GetIsCompoundingTaxOk() (*bool, bool) {
	if o == nil || IsNil(o.IsCompoundingTax) {
		return nil, false
	}
	return o.IsCompoundingTax, true
}

// HasIsCompoundingTax returns a boolean if a field has been set.
func (o *QuickbooksDesktopVendorsPostRequest) HasIsCompoundingTax() bool {
	if o != nil && !IsNil(o.IsCompoundingTax) {
		return true
	}

	return false
}

// SetIsCompoundingTax gets a reference to the given bool and assigns it to the IsCompoundingTax field.
func (o *QuickbooksDesktopVendorsPostRequest) SetIsCompoundingTax(v bool) {
	o.IsCompoundingTax = &v
}

// GetDefaultExpenseAccountIds returns the DefaultExpenseAccountIds field value if set, zero value otherwise.
func (o *QuickbooksDesktopVendorsPostRequest) GetDefaultExpenseAccountIds() []string {
	if o == nil || IsNil(o.DefaultExpenseAccountIds) {
		var ret []string
		return ret
	}
	return o.DefaultExpenseAccountIds
}

// GetDefaultExpenseAccountIdsOk returns a tuple with the DefaultExpenseAccountIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopVendorsPostRequest) GetDefaultExpenseAccountIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.DefaultExpenseAccountIds) {
		return nil, false
	}
	return o.DefaultExpenseAccountIds, true
}

// HasDefaultExpenseAccountIds returns a boolean if a field has been set.
func (o *QuickbooksDesktopVendorsPostRequest) HasDefaultExpenseAccountIds() bool {
	if o != nil && !IsNil(o.DefaultExpenseAccountIds) {
		return true
	}

	return false
}

// SetDefaultExpenseAccountIds gets a reference to the given []string and assigns it to the DefaultExpenseAccountIds field.
func (o *QuickbooksDesktopVendorsPostRequest) SetDefaultExpenseAccountIds(v []string) {
	o.DefaultExpenseAccountIds = v
}

// GetCurrencyId returns the CurrencyId field value if set, zero value otherwise.
func (o *QuickbooksDesktopVendorsPostRequest) GetCurrencyId() string {
	if o == nil || IsNil(o.CurrencyId) {
		var ret string
		return ret
	}
	return *o.CurrencyId
}

// GetCurrencyIdOk returns a tuple with the CurrencyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuickbooksDesktopVendorsPostRequest) GetCurrencyIdOk() (*string, bool) {
	if o == nil || IsNil(o.CurrencyId) {
		return nil, false
	}
	return o.CurrencyId, true
}

// HasCurrencyId returns a boolean if a field has been set.
func (o *QuickbooksDesktopVendorsPostRequest) HasCurrencyId() bool {
	if o != nil && !IsNil(o.CurrencyId) {
		return true
	}

	return false
}

// SetCurrencyId gets a reference to the given string and assigns it to the CurrencyId field.
func (o *QuickbooksDesktopVendorsPostRequest) SetCurrencyId(v string) {
	o.CurrencyId = &v
}

func (o QuickbooksDesktopVendorsPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QuickbooksDesktopVendorsPostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	if !IsNil(o.IsActive) {
		toSerialize["isActive"] = o.IsActive
	}
	if !IsNil(o.ClassId) {
		toSerialize["classId"] = o.ClassId
	}
	if !IsNil(o.CompanyName) {
		toSerialize["companyName"] = o.CompanyName
	}
	if !IsNil(o.Salutation) {
		toSerialize["salutation"] = o.Salutation
	}
	if !IsNil(o.FirstName) {
		toSerialize["firstName"] = o.FirstName
	}
	if !IsNil(o.MiddleName) {
		toSerialize["middleName"] = o.MiddleName
	}
	if !IsNil(o.LastName) {
		toSerialize["lastName"] = o.LastName
	}
	if !IsNil(o.JobTitle) {
		toSerialize["jobTitle"] = o.JobTitle
	}
	if !IsNil(o.BillingAddress) {
		toSerialize["billingAddress"] = o.BillingAddress
	}
	if !IsNil(o.ShippingAddress) {
		toSerialize["shippingAddress"] = o.ShippingAddress
	}
	if !IsNil(o.Phone) {
		toSerialize["phone"] = o.Phone
	}
	if !IsNil(o.AlternatePhone) {
		toSerialize["alternatePhone"] = o.AlternatePhone
	}
	if !IsNil(o.Fax) {
		toSerialize["fax"] = o.Fax
	}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.CcEmail) {
		toSerialize["ccEmail"] = o.CcEmail
	}
	if !IsNil(o.Contact) {
		toSerialize["contact"] = o.Contact
	}
	if !IsNil(o.AlternateContact) {
		toSerialize["alternateContact"] = o.AlternateContact
	}
	if !IsNil(o.CustomContactFields) {
		toSerialize["customContactFields"] = o.CustomContactFields
	}
	if !IsNil(o.AdditionalContacts) {
		toSerialize["additionalContacts"] = o.AdditionalContacts
	}
	if !IsNil(o.NameOnCheck) {
		toSerialize["nameOnCheck"] = o.NameOnCheck
	}
	if !IsNil(o.AccountNumber) {
		toSerialize["accountNumber"] = o.AccountNumber
	}
	if !IsNil(o.Note) {
		toSerialize["note"] = o.Note
	}
	if !IsNil(o.AdditionalNotes) {
		toSerialize["additionalNotes"] = o.AdditionalNotes
	}
	if !IsNil(o.VendorTypeId) {
		toSerialize["vendorTypeId"] = o.VendorTypeId
	}
	if !IsNil(o.TermsId) {
		toSerialize["termsId"] = o.TermsId
	}
	if !IsNil(o.CreditLimit) {
		toSerialize["creditLimit"] = o.CreditLimit
	}
	if !IsNil(o.TaxIdentificationNumber) {
		toSerialize["taxIdentificationNumber"] = o.TaxIdentificationNumber
	}
	if !IsNil(o.IsEligibleFor1099) {
		toSerialize["isEligibleFor1099"] = o.IsEligibleFor1099
	}
	if !IsNil(o.OpeningBalance) {
		toSerialize["openingBalance"] = o.OpeningBalance
	}
	if !IsNil(o.OpeningBalanceDate) {
		toSerialize["openingBalanceDate"] = o.OpeningBalanceDate
	}
	if !IsNil(o.BillingRateId) {
		toSerialize["billingRateId"] = o.BillingRateId
	}
	if !IsNil(o.ExternalId) {
		toSerialize["externalId"] = o.ExternalId
	}
	if !IsNil(o.SalesTaxCodeId) {
		toSerialize["salesTaxCodeId"] = o.SalesTaxCodeId
	}
	if !IsNil(o.SalesTaxCountry) {
		toSerialize["salesTaxCountry"] = o.SalesTaxCountry
	}
	if !IsNil(o.IsSalesTaxAgency) {
		toSerialize["isSalesTaxAgency"] = o.IsSalesTaxAgency
	}
	if !IsNil(o.SalesTaxReturnId) {
		toSerialize["salesTaxReturnId"] = o.SalesTaxReturnId
	}
	if !IsNil(o.TaxRegistrationNumber) {
		toSerialize["taxRegistrationNumber"] = o.TaxRegistrationNumber
	}
	if !IsNil(o.ReportingPeriod) {
		toSerialize["reportingPeriod"] = o.ReportingPeriod
	}
	if !IsNil(o.IsTrackingPurchaseTax) {
		toSerialize["isTrackingPurchaseTax"] = o.IsTrackingPurchaseTax
	}
	if !IsNil(o.PurchaseTaxAccountId) {
		toSerialize["purchaseTaxAccountId"] = o.PurchaseTaxAccountId
	}
	if !IsNil(o.IsTrackingSalesTax) {
		toSerialize["isTrackingSalesTax"] = o.IsTrackingSalesTax
	}
	if !IsNil(o.SalesTaxAccountId) {
		toSerialize["salesTaxAccountId"] = o.SalesTaxAccountId
	}
	if !IsNil(o.IsCompoundingTax) {
		toSerialize["isCompoundingTax"] = o.IsCompoundingTax
	}
	if !IsNil(o.DefaultExpenseAccountIds) {
		toSerialize["defaultExpenseAccountIds"] = o.DefaultExpenseAccountIds
	}
	if !IsNil(o.CurrencyId) {
		toSerialize["currencyId"] = o.CurrencyId
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *QuickbooksDesktopVendorsPostRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varQuickbooksDesktopVendorsPostRequest := _QuickbooksDesktopVendorsPostRequest{}

	err = json.Unmarshal(data, &varQuickbooksDesktopVendorsPostRequest)

	if err != nil {
		return err
	}

	*o = QuickbooksDesktopVendorsPostRequest(varQuickbooksDesktopVendorsPostRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "name")
		delete(additionalProperties, "isActive")
		delete(additionalProperties, "classId")
		delete(additionalProperties, "companyName")
		delete(additionalProperties, "salutation")
		delete(additionalProperties, "firstName")
		delete(additionalProperties, "middleName")
		delete(additionalProperties, "lastName")
		delete(additionalProperties, "jobTitle")
		delete(additionalProperties, "billingAddress")
		delete(additionalProperties, "shippingAddress")
		delete(additionalProperties, "phone")
		delete(additionalProperties, "alternatePhone")
		delete(additionalProperties, "fax")
		delete(additionalProperties, "email")
		delete(additionalProperties, "ccEmail")
		delete(additionalProperties, "contact")
		delete(additionalProperties, "alternateContact")
		delete(additionalProperties, "customContactFields")
		delete(additionalProperties, "additionalContacts")
		delete(additionalProperties, "nameOnCheck")
		delete(additionalProperties, "accountNumber")
		delete(additionalProperties, "note")
		delete(additionalProperties, "additionalNotes")
		delete(additionalProperties, "vendorTypeId")
		delete(additionalProperties, "termsId")
		delete(additionalProperties, "creditLimit")
		delete(additionalProperties, "taxIdentificationNumber")
		delete(additionalProperties, "isEligibleFor1099")
		delete(additionalProperties, "openingBalance")
		delete(additionalProperties, "openingBalanceDate")
		delete(additionalProperties, "billingRateId")
		delete(additionalProperties, "externalId")
		delete(additionalProperties, "salesTaxCodeId")
		delete(additionalProperties, "salesTaxCountry")
		delete(additionalProperties, "isSalesTaxAgency")
		delete(additionalProperties, "salesTaxReturnId")
		delete(additionalProperties, "taxRegistrationNumber")
		delete(additionalProperties, "reportingPeriod")
		delete(additionalProperties, "isTrackingPurchaseTax")
		delete(additionalProperties, "purchaseTaxAccountId")
		delete(additionalProperties, "isTrackingSalesTax")
		delete(additionalProperties, "salesTaxAccountId")
		delete(additionalProperties, "isCompoundingTax")
		delete(additionalProperties, "defaultExpenseAccountIds")
		delete(additionalProperties, "currencyId")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableQuickbooksDesktopVendorsPostRequest struct {
	value *QuickbooksDesktopVendorsPostRequest
	isSet bool
}

func (v NullableQuickbooksDesktopVendorsPostRequest) Get() *QuickbooksDesktopVendorsPostRequest {
	return v.value
}

func (v *NullableQuickbooksDesktopVendorsPostRequest) Set(val *QuickbooksDesktopVendorsPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableQuickbooksDesktopVendorsPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableQuickbooksDesktopVendorsPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQuickbooksDesktopVendorsPostRequest(val *QuickbooksDesktopVendorsPostRequest) *NullableQuickbooksDesktopVendorsPostRequest {
	return &NullableQuickbooksDesktopVendorsPostRequest{value: val, isSet: true}
}

func (v NullableQuickbooksDesktopVendorsPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQuickbooksDesktopVendorsPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


