/*
Conductor API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package conductor

import (
	"encoding/json"
	"fmt"
)

// checks if the QbdTransfer type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QbdTransfer{}

// QbdTransfer struct for QbdTransfer
type QbdTransfer struct {
	// The unique identifier assigned by QuickBooks to this transfer. This ID is unique across all transaction types.
	Id string `json:"id"`
	// The type of object. This value is always `\"qbd_transfer\"`.
	ObjectType string `json:"objectType"`
	// The date and time when this transfer was created, in ISO 8601 format (YYYY-MM-DDThh:mm:ss±hh:mm). The time zone is the same as the user's time zone in QuickBooks.
	CreatedAt string `json:"createdAt"`
	// The date and time when this transfer was last updated, in ISO 8601 format (YYYY-MM-DDThh:mm:ss±hh:mm). The time zone is the same as the user's time zone in QuickBooks.
	UpdatedAt string `json:"updatedAt"`
	// The current QuickBooks-assigned revision number of this transfer object, which changes each time the object is modified. When updating this object, you must provide the most recent `revisionNumber` to ensure you're working with the latest data; otherwise, the update will return an error.
	RevisionNumber string `json:"revisionNumber"`
	// The date of this transfer, in ISO 8601 format (YYYY-MM-DD).
	TransactionDate string `json:"transactionDate"`
	SourceAccount QbdTransferSourceAccount `json:"sourceAccount"`
	// The balance of the account from which money will be transferred.
	SourceAccountBalance string `json:"sourceAccountBalance"`
	TargetAccount QbdTransferTargetAccount `json:"targetAccount"`
	// The balance of the account to which money will be transferred.
	TargetAccountBalance string `json:"targetAccountBalance"`
	Class QbdTransferClass `json:"class"`
	// The monetary amount of this transfer, represented as a decimal string.
	Amount string `json:"amount"`
	// A memo or note for this transfer.
	Memo string `json:"memo"`
	AdditionalProperties map[string]interface{}
}

type _QbdTransfer QbdTransfer

// NewQbdTransfer instantiates a new QbdTransfer object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQbdTransfer(id string, objectType string, createdAt string, updatedAt string, revisionNumber string, transactionDate string, sourceAccount QbdTransferSourceAccount, sourceAccountBalance string, targetAccount QbdTransferTargetAccount, targetAccountBalance string, class QbdTransferClass, amount string, memo string) *QbdTransfer {
	this := QbdTransfer{}
	this.Id = id
	this.ObjectType = objectType
	this.CreatedAt = createdAt
	this.UpdatedAt = updatedAt
	this.RevisionNumber = revisionNumber
	this.TransactionDate = transactionDate
	this.SourceAccount = sourceAccount
	this.SourceAccountBalance = sourceAccountBalance
	this.TargetAccount = targetAccount
	this.TargetAccountBalance = targetAccountBalance
	this.Class = class
	this.Amount = amount
	this.Memo = memo
	return &this
}

// NewQbdTransferWithDefaults instantiates a new QbdTransfer object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQbdTransferWithDefaults() *QbdTransfer {
	this := QbdTransfer{}
	return &this
}

// GetId returns the Id field value
func (o *QbdTransfer) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *QbdTransfer) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *QbdTransfer) SetId(v string) {
	o.Id = v
}

// GetObjectType returns the ObjectType field value
func (o *QbdTransfer) GetObjectType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ObjectType
}

// GetObjectTypeOk returns a tuple with the ObjectType field value
// and a boolean to check if the value has been set.
func (o *QbdTransfer) GetObjectTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ObjectType, true
}

// SetObjectType sets field value
func (o *QbdTransfer) SetObjectType(v string) {
	o.ObjectType = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *QbdTransfer) GetCreatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *QbdTransfer) GetCreatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *QbdTransfer) SetCreatedAt(v string) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *QbdTransfer) GetUpdatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *QbdTransfer) GetUpdatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *QbdTransfer) SetUpdatedAt(v string) {
	o.UpdatedAt = v
}

// GetRevisionNumber returns the RevisionNumber field value
func (o *QbdTransfer) GetRevisionNumber() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RevisionNumber
}

// GetRevisionNumberOk returns a tuple with the RevisionNumber field value
// and a boolean to check if the value has been set.
func (o *QbdTransfer) GetRevisionNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RevisionNumber, true
}

// SetRevisionNumber sets field value
func (o *QbdTransfer) SetRevisionNumber(v string) {
	o.RevisionNumber = v
}

// GetTransactionDate returns the TransactionDate field value
func (o *QbdTransfer) GetTransactionDate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TransactionDate
}

// GetTransactionDateOk returns a tuple with the TransactionDate field value
// and a boolean to check if the value has been set.
func (o *QbdTransfer) GetTransactionDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TransactionDate, true
}

// SetTransactionDate sets field value
func (o *QbdTransfer) SetTransactionDate(v string) {
	o.TransactionDate = v
}

// GetSourceAccount returns the SourceAccount field value
func (o *QbdTransfer) GetSourceAccount() QbdTransferSourceAccount {
	if o == nil {
		var ret QbdTransferSourceAccount
		return ret
	}

	return o.SourceAccount
}

// GetSourceAccountOk returns a tuple with the SourceAccount field value
// and a boolean to check if the value has been set.
func (o *QbdTransfer) GetSourceAccountOk() (*QbdTransferSourceAccount, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SourceAccount, true
}

// SetSourceAccount sets field value
func (o *QbdTransfer) SetSourceAccount(v QbdTransferSourceAccount) {
	o.SourceAccount = v
}

// GetSourceAccountBalance returns the SourceAccountBalance field value
func (o *QbdTransfer) GetSourceAccountBalance() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SourceAccountBalance
}

// GetSourceAccountBalanceOk returns a tuple with the SourceAccountBalance field value
// and a boolean to check if the value has been set.
func (o *QbdTransfer) GetSourceAccountBalanceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SourceAccountBalance, true
}

// SetSourceAccountBalance sets field value
func (o *QbdTransfer) SetSourceAccountBalance(v string) {
	o.SourceAccountBalance = v
}

// GetTargetAccount returns the TargetAccount field value
func (o *QbdTransfer) GetTargetAccount() QbdTransferTargetAccount {
	if o == nil {
		var ret QbdTransferTargetAccount
		return ret
	}

	return o.TargetAccount
}

// GetTargetAccountOk returns a tuple with the TargetAccount field value
// and a boolean to check if the value has been set.
func (o *QbdTransfer) GetTargetAccountOk() (*QbdTransferTargetAccount, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TargetAccount, true
}

// SetTargetAccount sets field value
func (o *QbdTransfer) SetTargetAccount(v QbdTransferTargetAccount) {
	o.TargetAccount = v
}

// GetTargetAccountBalance returns the TargetAccountBalance field value
func (o *QbdTransfer) GetTargetAccountBalance() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TargetAccountBalance
}

// GetTargetAccountBalanceOk returns a tuple with the TargetAccountBalance field value
// and a boolean to check if the value has been set.
func (o *QbdTransfer) GetTargetAccountBalanceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TargetAccountBalance, true
}

// SetTargetAccountBalance sets field value
func (o *QbdTransfer) SetTargetAccountBalance(v string) {
	o.TargetAccountBalance = v
}

// GetClass returns the Class field value
func (o *QbdTransfer) GetClass() QbdTransferClass {
	if o == nil {
		var ret QbdTransferClass
		return ret
	}

	return o.Class
}

// GetClassOk returns a tuple with the Class field value
// and a boolean to check if the value has been set.
func (o *QbdTransfer) GetClassOk() (*QbdTransferClass, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Class, true
}

// SetClass sets field value
func (o *QbdTransfer) SetClass(v QbdTransferClass) {
	o.Class = v
}

// GetAmount returns the Amount field value
func (o *QbdTransfer) GetAmount() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Amount
}

// GetAmountOk returns a tuple with the Amount field value
// and a boolean to check if the value has been set.
func (o *QbdTransfer) GetAmountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Amount, true
}

// SetAmount sets field value
func (o *QbdTransfer) SetAmount(v string) {
	o.Amount = v
}

// GetMemo returns the Memo field value
func (o *QbdTransfer) GetMemo() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Memo
}

// GetMemoOk returns a tuple with the Memo field value
// and a boolean to check if the value has been set.
func (o *QbdTransfer) GetMemoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Memo, true
}

// SetMemo sets field value
func (o *QbdTransfer) SetMemo(v string) {
	o.Memo = v
}

func (o QbdTransfer) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QbdTransfer) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["objectType"] = o.ObjectType
	toSerialize["createdAt"] = o.CreatedAt
	toSerialize["updatedAt"] = o.UpdatedAt
	toSerialize["revisionNumber"] = o.RevisionNumber
	toSerialize["transactionDate"] = o.TransactionDate
	toSerialize["sourceAccount"] = o.SourceAccount
	toSerialize["sourceAccountBalance"] = o.SourceAccountBalance
	toSerialize["targetAccount"] = o.TargetAccount
	toSerialize["targetAccountBalance"] = o.TargetAccountBalance
	toSerialize["class"] = o.Class
	toSerialize["amount"] = o.Amount
	toSerialize["memo"] = o.Memo

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *QbdTransfer) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"objectType",
		"createdAt",
		"updatedAt",
		"revisionNumber",
		"transactionDate",
		"sourceAccount",
		"sourceAccountBalance",
		"targetAccount",
		"targetAccountBalance",
		"class",
		"amount",
		"memo",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varQbdTransfer := _QbdTransfer{}

	err = json.Unmarshal(data, &varQbdTransfer)

	if err != nil {
		return err
	}

	*o = QbdTransfer(varQbdTransfer)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "objectType")
		delete(additionalProperties, "createdAt")
		delete(additionalProperties, "updatedAt")
		delete(additionalProperties, "revisionNumber")
		delete(additionalProperties, "transactionDate")
		delete(additionalProperties, "sourceAccount")
		delete(additionalProperties, "sourceAccountBalance")
		delete(additionalProperties, "targetAccount")
		delete(additionalProperties, "targetAccountBalance")
		delete(additionalProperties, "class")
		delete(additionalProperties, "amount")
		delete(additionalProperties, "memo")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableQbdTransfer struct {
	value *QbdTransfer
	isSet bool
}

func (v NullableQbdTransfer) Get() *QbdTransfer {
	return v.value
}

func (v *NullableQbdTransfer) Set(val *QbdTransfer) {
	v.value = val
	v.isSet = true
}

func (v NullableQbdTransfer) IsSet() bool {
	return v.isSet
}

func (v *NullableQbdTransfer) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQbdTransfer(val *QbdTransfer) *NullableQbdTransfer {
	return &NullableQbdTransfer{value: val, isSet: true}
}

func (v NullableQbdTransfer) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQbdTransfer) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


