/*
Conductor API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package conductor

import (
	"encoding/json"
	"fmt"
)

// checks if the QbdInventoryItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QbdInventoryItem{}

// QbdInventoryItem struct for QbdInventoryItem
type QbdInventoryItem struct {
	// The unique identifier assigned by QuickBooks to this inventory item. This ID is unique across all inventory items but not across different QuickBooks object types.
	Id string `json:"id"`
	// The type of object. This value is always `\"qbd_inventory_item\"`.
	ObjectType string `json:"objectType"`
	// The date and time when this inventory item was created, in ISO 8601 format (YYYY-MM-DDThh:mm:ss±hh:mm). The time zone is the same as the user's time zone in QuickBooks.
	CreatedAt string `json:"createdAt"`
	// The date and time when this inventory item was last updated, in ISO 8601 format (YYYY-MM-DDThh:mm:ss±hh:mm). The time zone is the same as the user's time zone in QuickBooks.
	UpdatedAt string `json:"updatedAt"`
	// The current QuickBooks-assigned revision number of this inventory item object, which changes each time the object is modified. When updating this object, you must provide the most recent `revisionNumber` to ensure you're working with the latest data; otherwise, the update will return an error.
	RevisionNumber string `json:"revisionNumber"`
	// The case-insensitive name of this inventory item. Not guaranteed to be unique because it does not include the names of its hierarchical parent objects like `fullName` does. For example, two inventory items could both have the `name` \"Cabinet\", but they could have unique `fullName` values, such as \"Kitchen:Cabinet\" and \"Inventory:Cabinet\".
	Name string `json:"name"`
	// The case-insensitive fully-qualified unique name of this inventory item, formed by combining the names of its hierarchical parent objects with its own `name`, separated by colons. For example, if an inventory item is under \"Products:Electronics\" and has the `name` \"Widgets\", its `fullName` would be \"Products:Electronics:Widgets\".  **NOTE**: Unlike `name`, `fullName` is guaranteed to be unique across all inventory item objects. However, `fullName` can still be arbitrarily changed by the QuickBooks user when they modify the underlying `name` field.
	FullName string `json:"fullName"`
	// The inventory item's barcode.
	Barcode string `json:"barcode"`
	// Indicates whether this inventory item is active. Inactive objects are typically hidden from views and reports in QuickBooks. Defaults to `true`.
	IsActive bool `json:"isActive"`
	Class QbdInventoryItemClass `json:"class"`
	Parent QbdInventoryItemParent `json:"parent"`
	// The depth level of this inventory item in the hierarchy. A top-level inventory item has a `sublevel` of 0; each subsequent sublevel increases this number by 1. For example, an inventory item with a `fullName` of \"Kitchen:Cabinet\" would have a `sublevel` of 1.
	Sublevel float32 `json:"sublevel"`
	// The inventory item's stock keeping unit (SKU), which is sometimes the manufacturer's part number.
	Sku string `json:"sku"`
	UnitOfMeasureSet QbdInventoryItemUnitOfMeasureSet `json:"unitOfMeasureSet"`
	SalesTaxCode QbdInventoryItemSalesTaxCode `json:"salesTaxCode"`
	// The description of this inventory item that appears on sales forms (e.g., invoices, sales receipts) when sold to customers.
	SalesDescription string `json:"salesDescription"`
	// The price at which this inventory item is sold to customers, represented as a decimal string.
	SalesPrice string `json:"salesPrice"`
	IncomeAccount QbdInventoryItemIncomeAccount `json:"incomeAccount"`
	// The description of this inventory item that appears on purchase forms (e.g., checks, bills, item receipts) when it is ordered or bought from vendors.
	PurchaseDescription string `json:"purchaseDescription"`
	// The cost at which this inventory item is purchased from vendors, represented as a decimal string.
	PurchaseCost string `json:"purchaseCost"`
	PurchaseTaxCode QbdInventoryItemPurchaseTaxCode `json:"purchaseTaxCode"`
	CogsAccount QbdInventoryItemCogsAccount `json:"cogsAccount"`
	PreferredVendor QbdInventoryItemPreferredVendor `json:"preferredVendor"`
	AssetAccount QbdInventoryItemAssetAccount `json:"assetAccount"`
	// The minimum quantity of this inventory item at which QuickBooks prompts for reordering.
	ReorderPoint float32 `json:"reorderPoint"`
	// The maximum quantity of this inventory item desired in inventory.
	MaximumQuantityOnHand float32 `json:"maximumQuantityOnHand"`
	// The current quantity of this inventory item available in inventory. To change the `quantityOnHand` for an inventory item, you must create an inventory-adjustment instead of updating this inventory item directly.
	QuantityOnHand float32 `json:"quantityOnHand"`
	// The average cost per unit of this inventory item, represented as a decimal string.
	AverageCost string `json:"averageCost"`
	// The number of units of this inventory item that have been ordered from vendors (as recorded in purchase orders) but not yet received.
	QuantityOnPurchaseOrder float32 `json:"quantityOnPurchaseOrder"`
	// The number of units of this inventory item that have been sold (as recorded in sales orders) but not yet fulfilled or delivered to customers.
	QuantityOnSalesOrder float32 `json:"quantityOnSalesOrder"`
	// A globally unique identifier (GUID) you, the developer, can provide for tracking this object in your external system. This field is immutable and can only be set during object creation.
	ExternalId string `json:"externalId"`
	// The custom fields for the inventory item object, added as user-defined data extensions, not included in the standard QuickBooks object.
	CustomFields []QbdCustomField `json:"customFields"`
	AdditionalProperties map[string]interface{}
}

type _QbdInventoryItem QbdInventoryItem

// NewQbdInventoryItem instantiates a new QbdInventoryItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQbdInventoryItem(id string, objectType string, createdAt string, updatedAt string, revisionNumber string, name string, fullName string, barcode string, isActive bool, class QbdInventoryItemClass, parent QbdInventoryItemParent, sublevel float32, sku string, unitOfMeasureSet QbdInventoryItemUnitOfMeasureSet, salesTaxCode QbdInventoryItemSalesTaxCode, salesDescription string, salesPrice string, incomeAccount QbdInventoryItemIncomeAccount, purchaseDescription string, purchaseCost string, purchaseTaxCode QbdInventoryItemPurchaseTaxCode, cogsAccount QbdInventoryItemCogsAccount, preferredVendor QbdInventoryItemPreferredVendor, assetAccount QbdInventoryItemAssetAccount, reorderPoint float32, maximumQuantityOnHand float32, quantityOnHand float32, averageCost string, quantityOnPurchaseOrder float32, quantityOnSalesOrder float32, externalId string, customFields []QbdCustomField) *QbdInventoryItem {
	this := QbdInventoryItem{}
	this.Id = id
	this.ObjectType = objectType
	this.CreatedAt = createdAt
	this.UpdatedAt = updatedAt
	this.RevisionNumber = revisionNumber
	this.Name = name
	this.FullName = fullName
	this.Barcode = barcode
	this.IsActive = isActive
	this.Class = class
	this.Parent = parent
	this.Sublevel = sublevel
	this.Sku = sku
	this.UnitOfMeasureSet = unitOfMeasureSet
	this.SalesTaxCode = salesTaxCode
	this.SalesDescription = salesDescription
	this.SalesPrice = salesPrice
	this.IncomeAccount = incomeAccount
	this.PurchaseDescription = purchaseDescription
	this.PurchaseCost = purchaseCost
	this.PurchaseTaxCode = purchaseTaxCode
	this.CogsAccount = cogsAccount
	this.PreferredVendor = preferredVendor
	this.AssetAccount = assetAccount
	this.ReorderPoint = reorderPoint
	this.MaximumQuantityOnHand = maximumQuantityOnHand
	this.QuantityOnHand = quantityOnHand
	this.AverageCost = averageCost
	this.QuantityOnPurchaseOrder = quantityOnPurchaseOrder
	this.QuantityOnSalesOrder = quantityOnSalesOrder
	this.ExternalId = externalId
	this.CustomFields = customFields
	return &this
}

// NewQbdInventoryItemWithDefaults instantiates a new QbdInventoryItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQbdInventoryItemWithDefaults() *QbdInventoryItem {
	this := QbdInventoryItem{}
	return &this
}

// GetId returns the Id field value
func (o *QbdInventoryItem) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *QbdInventoryItem) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *QbdInventoryItem) SetId(v string) {
	o.Id = v
}

// GetObjectType returns the ObjectType field value
func (o *QbdInventoryItem) GetObjectType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ObjectType
}

// GetObjectTypeOk returns a tuple with the ObjectType field value
// and a boolean to check if the value has been set.
func (o *QbdInventoryItem) GetObjectTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ObjectType, true
}

// SetObjectType sets field value
func (o *QbdInventoryItem) SetObjectType(v string) {
	o.ObjectType = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *QbdInventoryItem) GetCreatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *QbdInventoryItem) GetCreatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *QbdInventoryItem) SetCreatedAt(v string) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *QbdInventoryItem) GetUpdatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *QbdInventoryItem) GetUpdatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *QbdInventoryItem) SetUpdatedAt(v string) {
	o.UpdatedAt = v
}

// GetRevisionNumber returns the RevisionNumber field value
func (o *QbdInventoryItem) GetRevisionNumber() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RevisionNumber
}

// GetRevisionNumberOk returns a tuple with the RevisionNumber field value
// and a boolean to check if the value has been set.
func (o *QbdInventoryItem) GetRevisionNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RevisionNumber, true
}

// SetRevisionNumber sets field value
func (o *QbdInventoryItem) SetRevisionNumber(v string) {
	o.RevisionNumber = v
}

// GetName returns the Name field value
func (o *QbdInventoryItem) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *QbdInventoryItem) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *QbdInventoryItem) SetName(v string) {
	o.Name = v
}

// GetFullName returns the FullName field value
func (o *QbdInventoryItem) GetFullName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FullName
}

// GetFullNameOk returns a tuple with the FullName field value
// and a boolean to check if the value has been set.
func (o *QbdInventoryItem) GetFullNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FullName, true
}

// SetFullName sets field value
func (o *QbdInventoryItem) SetFullName(v string) {
	o.FullName = v
}

// GetBarcode returns the Barcode field value
func (o *QbdInventoryItem) GetBarcode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Barcode
}

// GetBarcodeOk returns a tuple with the Barcode field value
// and a boolean to check if the value has been set.
func (o *QbdInventoryItem) GetBarcodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Barcode, true
}

// SetBarcode sets field value
func (o *QbdInventoryItem) SetBarcode(v string) {
	o.Barcode = v
}

// GetIsActive returns the IsActive field value
func (o *QbdInventoryItem) GetIsActive() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsActive
}

// GetIsActiveOk returns a tuple with the IsActive field value
// and a boolean to check if the value has been set.
func (o *QbdInventoryItem) GetIsActiveOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsActive, true
}

// SetIsActive sets field value
func (o *QbdInventoryItem) SetIsActive(v bool) {
	o.IsActive = v
}

// GetClass returns the Class field value
func (o *QbdInventoryItem) GetClass() QbdInventoryItemClass {
	if o == nil {
		var ret QbdInventoryItemClass
		return ret
	}

	return o.Class
}

// GetClassOk returns a tuple with the Class field value
// and a boolean to check if the value has been set.
func (o *QbdInventoryItem) GetClassOk() (*QbdInventoryItemClass, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Class, true
}

// SetClass sets field value
func (o *QbdInventoryItem) SetClass(v QbdInventoryItemClass) {
	o.Class = v
}

// GetParent returns the Parent field value
func (o *QbdInventoryItem) GetParent() QbdInventoryItemParent {
	if o == nil {
		var ret QbdInventoryItemParent
		return ret
	}

	return o.Parent
}

// GetParentOk returns a tuple with the Parent field value
// and a boolean to check if the value has been set.
func (o *QbdInventoryItem) GetParentOk() (*QbdInventoryItemParent, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Parent, true
}

// SetParent sets field value
func (o *QbdInventoryItem) SetParent(v QbdInventoryItemParent) {
	o.Parent = v
}

// GetSublevel returns the Sublevel field value
func (o *QbdInventoryItem) GetSublevel() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Sublevel
}

// GetSublevelOk returns a tuple with the Sublevel field value
// and a boolean to check if the value has been set.
func (o *QbdInventoryItem) GetSublevelOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Sublevel, true
}

// SetSublevel sets field value
func (o *QbdInventoryItem) SetSublevel(v float32) {
	o.Sublevel = v
}

// GetSku returns the Sku field value
func (o *QbdInventoryItem) GetSku() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Sku
}

// GetSkuOk returns a tuple with the Sku field value
// and a boolean to check if the value has been set.
func (o *QbdInventoryItem) GetSkuOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Sku, true
}

// SetSku sets field value
func (o *QbdInventoryItem) SetSku(v string) {
	o.Sku = v
}

// GetUnitOfMeasureSet returns the UnitOfMeasureSet field value
func (o *QbdInventoryItem) GetUnitOfMeasureSet() QbdInventoryItemUnitOfMeasureSet {
	if o == nil {
		var ret QbdInventoryItemUnitOfMeasureSet
		return ret
	}

	return o.UnitOfMeasureSet
}

// GetUnitOfMeasureSetOk returns a tuple with the UnitOfMeasureSet field value
// and a boolean to check if the value has been set.
func (o *QbdInventoryItem) GetUnitOfMeasureSetOk() (*QbdInventoryItemUnitOfMeasureSet, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UnitOfMeasureSet, true
}

// SetUnitOfMeasureSet sets field value
func (o *QbdInventoryItem) SetUnitOfMeasureSet(v QbdInventoryItemUnitOfMeasureSet) {
	o.UnitOfMeasureSet = v
}

// GetSalesTaxCode returns the SalesTaxCode field value
func (o *QbdInventoryItem) GetSalesTaxCode() QbdInventoryItemSalesTaxCode {
	if o == nil {
		var ret QbdInventoryItemSalesTaxCode
		return ret
	}

	return o.SalesTaxCode
}

// GetSalesTaxCodeOk returns a tuple with the SalesTaxCode field value
// and a boolean to check if the value has been set.
func (o *QbdInventoryItem) GetSalesTaxCodeOk() (*QbdInventoryItemSalesTaxCode, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SalesTaxCode, true
}

// SetSalesTaxCode sets field value
func (o *QbdInventoryItem) SetSalesTaxCode(v QbdInventoryItemSalesTaxCode) {
	o.SalesTaxCode = v
}

// GetSalesDescription returns the SalesDescription field value
func (o *QbdInventoryItem) GetSalesDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SalesDescription
}

// GetSalesDescriptionOk returns a tuple with the SalesDescription field value
// and a boolean to check if the value has been set.
func (o *QbdInventoryItem) GetSalesDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SalesDescription, true
}

// SetSalesDescription sets field value
func (o *QbdInventoryItem) SetSalesDescription(v string) {
	o.SalesDescription = v
}

// GetSalesPrice returns the SalesPrice field value
func (o *QbdInventoryItem) GetSalesPrice() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SalesPrice
}

// GetSalesPriceOk returns a tuple with the SalesPrice field value
// and a boolean to check if the value has been set.
func (o *QbdInventoryItem) GetSalesPriceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SalesPrice, true
}

// SetSalesPrice sets field value
func (o *QbdInventoryItem) SetSalesPrice(v string) {
	o.SalesPrice = v
}

// GetIncomeAccount returns the IncomeAccount field value
func (o *QbdInventoryItem) GetIncomeAccount() QbdInventoryItemIncomeAccount {
	if o == nil {
		var ret QbdInventoryItemIncomeAccount
		return ret
	}

	return o.IncomeAccount
}

// GetIncomeAccountOk returns a tuple with the IncomeAccount field value
// and a boolean to check if the value has been set.
func (o *QbdInventoryItem) GetIncomeAccountOk() (*QbdInventoryItemIncomeAccount, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IncomeAccount, true
}

// SetIncomeAccount sets field value
func (o *QbdInventoryItem) SetIncomeAccount(v QbdInventoryItemIncomeAccount) {
	o.IncomeAccount = v
}

// GetPurchaseDescription returns the PurchaseDescription field value
func (o *QbdInventoryItem) GetPurchaseDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PurchaseDescription
}

// GetPurchaseDescriptionOk returns a tuple with the PurchaseDescription field value
// and a boolean to check if the value has been set.
func (o *QbdInventoryItem) GetPurchaseDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PurchaseDescription, true
}

// SetPurchaseDescription sets field value
func (o *QbdInventoryItem) SetPurchaseDescription(v string) {
	o.PurchaseDescription = v
}

// GetPurchaseCost returns the PurchaseCost field value
func (o *QbdInventoryItem) GetPurchaseCost() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PurchaseCost
}

// GetPurchaseCostOk returns a tuple with the PurchaseCost field value
// and a boolean to check if the value has been set.
func (o *QbdInventoryItem) GetPurchaseCostOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PurchaseCost, true
}

// SetPurchaseCost sets field value
func (o *QbdInventoryItem) SetPurchaseCost(v string) {
	o.PurchaseCost = v
}

// GetPurchaseTaxCode returns the PurchaseTaxCode field value
func (o *QbdInventoryItem) GetPurchaseTaxCode() QbdInventoryItemPurchaseTaxCode {
	if o == nil {
		var ret QbdInventoryItemPurchaseTaxCode
		return ret
	}

	return o.PurchaseTaxCode
}

// GetPurchaseTaxCodeOk returns a tuple with the PurchaseTaxCode field value
// and a boolean to check if the value has been set.
func (o *QbdInventoryItem) GetPurchaseTaxCodeOk() (*QbdInventoryItemPurchaseTaxCode, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PurchaseTaxCode, true
}

// SetPurchaseTaxCode sets field value
func (o *QbdInventoryItem) SetPurchaseTaxCode(v QbdInventoryItemPurchaseTaxCode) {
	o.PurchaseTaxCode = v
}

// GetCogsAccount returns the CogsAccount field value
func (o *QbdInventoryItem) GetCogsAccount() QbdInventoryItemCogsAccount {
	if o == nil {
		var ret QbdInventoryItemCogsAccount
		return ret
	}

	return o.CogsAccount
}

// GetCogsAccountOk returns a tuple with the CogsAccount field value
// and a boolean to check if the value has been set.
func (o *QbdInventoryItem) GetCogsAccountOk() (*QbdInventoryItemCogsAccount, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CogsAccount, true
}

// SetCogsAccount sets field value
func (o *QbdInventoryItem) SetCogsAccount(v QbdInventoryItemCogsAccount) {
	o.CogsAccount = v
}

// GetPreferredVendor returns the PreferredVendor field value
func (o *QbdInventoryItem) GetPreferredVendor() QbdInventoryItemPreferredVendor {
	if o == nil {
		var ret QbdInventoryItemPreferredVendor
		return ret
	}

	return o.PreferredVendor
}

// GetPreferredVendorOk returns a tuple with the PreferredVendor field value
// and a boolean to check if the value has been set.
func (o *QbdInventoryItem) GetPreferredVendorOk() (*QbdInventoryItemPreferredVendor, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PreferredVendor, true
}

// SetPreferredVendor sets field value
func (o *QbdInventoryItem) SetPreferredVendor(v QbdInventoryItemPreferredVendor) {
	o.PreferredVendor = v
}

// GetAssetAccount returns the AssetAccount field value
func (o *QbdInventoryItem) GetAssetAccount() QbdInventoryItemAssetAccount {
	if o == nil {
		var ret QbdInventoryItemAssetAccount
		return ret
	}

	return o.AssetAccount
}

// GetAssetAccountOk returns a tuple with the AssetAccount field value
// and a boolean to check if the value has been set.
func (o *QbdInventoryItem) GetAssetAccountOk() (*QbdInventoryItemAssetAccount, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AssetAccount, true
}

// SetAssetAccount sets field value
func (o *QbdInventoryItem) SetAssetAccount(v QbdInventoryItemAssetAccount) {
	o.AssetAccount = v
}

// GetReorderPoint returns the ReorderPoint field value
func (o *QbdInventoryItem) GetReorderPoint() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.ReorderPoint
}

// GetReorderPointOk returns a tuple with the ReorderPoint field value
// and a boolean to check if the value has been set.
func (o *QbdInventoryItem) GetReorderPointOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ReorderPoint, true
}

// SetReorderPoint sets field value
func (o *QbdInventoryItem) SetReorderPoint(v float32) {
	o.ReorderPoint = v
}

// GetMaximumQuantityOnHand returns the MaximumQuantityOnHand field value
func (o *QbdInventoryItem) GetMaximumQuantityOnHand() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.MaximumQuantityOnHand
}

// GetMaximumQuantityOnHandOk returns a tuple with the MaximumQuantityOnHand field value
// and a boolean to check if the value has been set.
func (o *QbdInventoryItem) GetMaximumQuantityOnHandOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MaximumQuantityOnHand, true
}

// SetMaximumQuantityOnHand sets field value
func (o *QbdInventoryItem) SetMaximumQuantityOnHand(v float32) {
	o.MaximumQuantityOnHand = v
}

// GetQuantityOnHand returns the QuantityOnHand field value
func (o *QbdInventoryItem) GetQuantityOnHand() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.QuantityOnHand
}

// GetQuantityOnHandOk returns a tuple with the QuantityOnHand field value
// and a boolean to check if the value has been set.
func (o *QbdInventoryItem) GetQuantityOnHandOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.QuantityOnHand, true
}

// SetQuantityOnHand sets field value
func (o *QbdInventoryItem) SetQuantityOnHand(v float32) {
	o.QuantityOnHand = v
}

// GetAverageCost returns the AverageCost field value
func (o *QbdInventoryItem) GetAverageCost() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AverageCost
}

// GetAverageCostOk returns a tuple with the AverageCost field value
// and a boolean to check if the value has been set.
func (o *QbdInventoryItem) GetAverageCostOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AverageCost, true
}

// SetAverageCost sets field value
func (o *QbdInventoryItem) SetAverageCost(v string) {
	o.AverageCost = v
}

// GetQuantityOnPurchaseOrder returns the QuantityOnPurchaseOrder field value
func (o *QbdInventoryItem) GetQuantityOnPurchaseOrder() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.QuantityOnPurchaseOrder
}

// GetQuantityOnPurchaseOrderOk returns a tuple with the QuantityOnPurchaseOrder field value
// and a boolean to check if the value has been set.
func (o *QbdInventoryItem) GetQuantityOnPurchaseOrderOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.QuantityOnPurchaseOrder, true
}

// SetQuantityOnPurchaseOrder sets field value
func (o *QbdInventoryItem) SetQuantityOnPurchaseOrder(v float32) {
	o.QuantityOnPurchaseOrder = v
}

// GetQuantityOnSalesOrder returns the QuantityOnSalesOrder field value
func (o *QbdInventoryItem) GetQuantityOnSalesOrder() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.QuantityOnSalesOrder
}

// GetQuantityOnSalesOrderOk returns a tuple with the QuantityOnSalesOrder field value
// and a boolean to check if the value has been set.
func (o *QbdInventoryItem) GetQuantityOnSalesOrderOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.QuantityOnSalesOrder, true
}

// SetQuantityOnSalesOrder sets field value
func (o *QbdInventoryItem) SetQuantityOnSalesOrder(v float32) {
	o.QuantityOnSalesOrder = v
}

// GetExternalId returns the ExternalId field value
func (o *QbdInventoryItem) GetExternalId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ExternalId
}

// GetExternalIdOk returns a tuple with the ExternalId field value
// and a boolean to check if the value has been set.
func (o *QbdInventoryItem) GetExternalIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExternalId, true
}

// SetExternalId sets field value
func (o *QbdInventoryItem) SetExternalId(v string) {
	o.ExternalId = v
}

// GetCustomFields returns the CustomFields field value
func (o *QbdInventoryItem) GetCustomFields() []QbdCustomField {
	if o == nil {
		var ret []QbdCustomField
		return ret
	}

	return o.CustomFields
}

// GetCustomFieldsOk returns a tuple with the CustomFields field value
// and a boolean to check if the value has been set.
func (o *QbdInventoryItem) GetCustomFieldsOk() ([]QbdCustomField, bool) {
	if o == nil {
		return nil, false
	}
	return o.CustomFields, true
}

// SetCustomFields sets field value
func (o *QbdInventoryItem) SetCustomFields(v []QbdCustomField) {
	o.CustomFields = v
}

func (o QbdInventoryItem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QbdInventoryItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["objectType"] = o.ObjectType
	toSerialize["createdAt"] = o.CreatedAt
	toSerialize["updatedAt"] = o.UpdatedAt
	toSerialize["revisionNumber"] = o.RevisionNumber
	toSerialize["name"] = o.Name
	toSerialize["fullName"] = o.FullName
	toSerialize["barcode"] = o.Barcode
	toSerialize["isActive"] = o.IsActive
	toSerialize["class"] = o.Class
	toSerialize["parent"] = o.Parent
	toSerialize["sublevel"] = o.Sublevel
	toSerialize["sku"] = o.Sku
	toSerialize["unitOfMeasureSet"] = o.UnitOfMeasureSet
	toSerialize["salesTaxCode"] = o.SalesTaxCode
	toSerialize["salesDescription"] = o.SalesDescription
	toSerialize["salesPrice"] = o.SalesPrice
	toSerialize["incomeAccount"] = o.IncomeAccount
	toSerialize["purchaseDescription"] = o.PurchaseDescription
	toSerialize["purchaseCost"] = o.PurchaseCost
	toSerialize["purchaseTaxCode"] = o.PurchaseTaxCode
	toSerialize["cogsAccount"] = o.CogsAccount
	toSerialize["preferredVendor"] = o.PreferredVendor
	toSerialize["assetAccount"] = o.AssetAccount
	toSerialize["reorderPoint"] = o.ReorderPoint
	toSerialize["maximumQuantityOnHand"] = o.MaximumQuantityOnHand
	toSerialize["quantityOnHand"] = o.QuantityOnHand
	toSerialize["averageCost"] = o.AverageCost
	toSerialize["quantityOnPurchaseOrder"] = o.QuantityOnPurchaseOrder
	toSerialize["quantityOnSalesOrder"] = o.QuantityOnSalesOrder
	toSerialize["externalId"] = o.ExternalId
	toSerialize["customFields"] = o.CustomFields

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *QbdInventoryItem) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"objectType",
		"createdAt",
		"updatedAt",
		"revisionNumber",
		"name",
		"fullName",
		"barcode",
		"isActive",
		"class",
		"parent",
		"sublevel",
		"sku",
		"unitOfMeasureSet",
		"salesTaxCode",
		"salesDescription",
		"salesPrice",
		"incomeAccount",
		"purchaseDescription",
		"purchaseCost",
		"purchaseTaxCode",
		"cogsAccount",
		"preferredVendor",
		"assetAccount",
		"reorderPoint",
		"maximumQuantityOnHand",
		"quantityOnHand",
		"averageCost",
		"quantityOnPurchaseOrder",
		"quantityOnSalesOrder",
		"externalId",
		"customFields",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varQbdInventoryItem := _QbdInventoryItem{}

	err = json.Unmarshal(data, &varQbdInventoryItem)

	if err != nil {
		return err
	}

	*o = QbdInventoryItem(varQbdInventoryItem)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "objectType")
		delete(additionalProperties, "createdAt")
		delete(additionalProperties, "updatedAt")
		delete(additionalProperties, "revisionNumber")
		delete(additionalProperties, "name")
		delete(additionalProperties, "fullName")
		delete(additionalProperties, "barcode")
		delete(additionalProperties, "isActive")
		delete(additionalProperties, "class")
		delete(additionalProperties, "parent")
		delete(additionalProperties, "sublevel")
		delete(additionalProperties, "sku")
		delete(additionalProperties, "unitOfMeasureSet")
		delete(additionalProperties, "salesTaxCode")
		delete(additionalProperties, "salesDescription")
		delete(additionalProperties, "salesPrice")
		delete(additionalProperties, "incomeAccount")
		delete(additionalProperties, "purchaseDescription")
		delete(additionalProperties, "purchaseCost")
		delete(additionalProperties, "purchaseTaxCode")
		delete(additionalProperties, "cogsAccount")
		delete(additionalProperties, "preferredVendor")
		delete(additionalProperties, "assetAccount")
		delete(additionalProperties, "reorderPoint")
		delete(additionalProperties, "maximumQuantityOnHand")
		delete(additionalProperties, "quantityOnHand")
		delete(additionalProperties, "averageCost")
		delete(additionalProperties, "quantityOnPurchaseOrder")
		delete(additionalProperties, "quantityOnSalesOrder")
		delete(additionalProperties, "externalId")
		delete(additionalProperties, "customFields")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableQbdInventoryItem struct {
	value *QbdInventoryItem
	isSet bool
}

func (v NullableQbdInventoryItem) Get() *QbdInventoryItem {
	return v.value
}

func (v *NullableQbdInventoryItem) Set(val *QbdInventoryItem) {
	v.value = val
	v.isSet = true
}

func (v NullableQbdInventoryItem) IsSet() bool {
	return v.isSet
}

func (v *NullableQbdInventoryItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQbdInventoryItem(val *QbdInventoryItem) *NullableQbdInventoryItem {
	return &NullableQbdInventoryItem{value: val, isSet: true}
}

func (v NullableQbdInventoryItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQbdInventoryItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


